import{r as Q,j as W,c as Fe,R as oe,g as mk,d as gk,e as yk,u as bk,a as xk}from"./index-B15hoXzW.js";import{u as gr,c as wk,b as nm,B as Fr}from"./button-D_vhudIU.js";import{P as zs,u as vk,L as jn,I as Si,C as sm}from"./label-De9_JVqc.js";import{e as Mc,f as kk,u as Iy,g as Zt,h as Sy,i as oh,j as Ck,k as rm,l as Nk,m as $k,n as Ty,R as Ik,A as Dy,o as Sk,p as Tk,q as Dk,F as Ek,D as Ak,C as Rk,r as Ok,s as Ey,S as om,a as am,b as im,c as cm,d as ks}from"./select-BzdMoTWb.js";import{c as zc}from"./useAuthStore-B82fMkBv.js";import{C as Fk,e as _k,b as Pk,f as Lk,d as Mk}from"./indexedDBUtils-DxKd99py.js";import{C as zk}from"./chevron-right-D4VZKVJd.js";import{P as Bk}from"./PrivateRoute-4UzgH136.js";/**
 * @license lucide-react v0.536.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Wk=[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]],Vk=zc("arrow-left",Wk);/**
 * @license lucide-react v0.536.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Uk=[["path",{d:"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",key:"1tc9qg"}],["circle",{cx:"12",cy:"13",r:"3",key:"1vg3eu"}]],Gk=zc("camera",Uk);/**
 * @license lucide-react v0.536.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const jk=[["path",{d:"m15 18-6-6 6-6",key:"1wnfg3"}]],Hk=zc("chevron-left",jk);/**
 * @license lucide-react v0.536.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const qk=[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]],Kk=zc("circle",qk);var Fu="rovingFocusGroup.onEntryFocus",Xk={bubbles:!1,cancelable:!0},Xo="RovingFocusGroup",[cd,Ay,Yk]=kk(Xo),[Jk,Ry]=Mc(Xo,[Yk]),[Zk,Qk]=Jk(Xo),Oy=Q.forwardRef((n,e)=>W.jsx(cd.Provider,{scope:n.__scopeRovingFocusGroup,children:W.jsx(cd.Slot,{scope:n.__scopeRovingFocusGroup,children:W.jsx(eC,{...n,ref:e})})}));Oy.displayName=Xo;var eC=Q.forwardRef((n,e)=>{const{__scopeRovingFocusGroup:t,orientation:s,loop:r=!1,dir:o,currentTabStopId:a,defaultCurrentTabStopId:i,onCurrentTabStopIdChange:c,onEntryFocus:l,preventScrollOnEntryFocus:u=!1,...d}=n,h=Q.useRef(null),p=gr(e,h),f=Sy(o),[m,g]=oh({prop:a,defaultProp:i??null,onChange:c,caller:Xo}),[y,b]=Q.useState(!1),v=Ck(l),x=Ay(t),w=Q.useRef(!1),[N,C]=Q.useState(0);return Q.useEffect(()=>{const $=h.current;if($)return $.addEventListener(Fu,v),()=>$.removeEventListener(Fu,v)},[v]),W.jsx(Zk,{scope:t,orientation:s,dir:f,loop:r,currentTabStopId:m,onItemFocus:Q.useCallback($=>g($),[g]),onItemShiftTab:Q.useCallback(()=>b(!0),[]),onFocusableItemAdd:Q.useCallback(()=>C($=>$+1),[]),onFocusableItemRemove:Q.useCallback(()=>C($=>$-1),[]),children:W.jsx(zs.div,{tabIndex:y||N===0?-1:0,"data-orientation":s,...d,ref:p,style:{outline:"none",...n.style},onMouseDown:Zt(n.onMouseDown,()=>{w.current=!0}),onFocus:Zt(n.onFocus,$=>{const S=!w.current;if($.target===$.currentTarget&&S&&!y){const T=new CustomEvent(Fu,Xk);if($.currentTarget.dispatchEvent(T),!T.defaultPrevented){const E=x().filter(M=>M.focusable),F=E.find(M=>M.active),O=E.find(M=>M.id===m),z=[F,O,...E].filter(Boolean).map(M=>M.ref.current);Py(z,u)}}w.current=!1}),onBlur:Zt(n.onBlur,()=>b(!1))})})}),Fy="RovingFocusGroupItem",_y=Q.forwardRef((n,e)=>{const{__scopeRovingFocusGroup:t,focusable:s=!0,active:r=!1,tabStopId:o,children:a,...i}=n,c=Iy(),l=o||c,u=Qk(Fy,t),d=u.currentTabStopId===l,h=Ay(t),{onFocusableItemAdd:p,onFocusableItemRemove:f,currentTabStopId:m}=u;return Q.useEffect(()=>{if(s)return p(),()=>f()},[s,p,f]),W.jsx(cd.ItemSlot,{scope:t,id:l,focusable:s,active:r,children:W.jsx(zs.span,{tabIndex:d?0:-1,"data-orientation":u.orientation,...i,ref:e,onMouseDown:Zt(n.onMouseDown,g=>{s?u.onItemFocus(l):g.preventDefault()}),onFocus:Zt(n.onFocus,()=>u.onItemFocus(l)),onKeyDown:Zt(n.onKeyDown,g=>{if(g.key==="Tab"&&g.shiftKey){u.onItemShiftTab();return}if(g.target!==g.currentTarget)return;const y=sC(g,u.orientation,u.dir);if(y!==void 0){if(g.metaKey||g.ctrlKey||g.altKey||g.shiftKey)return;g.preventDefault();let v=h().filter(x=>x.focusable).map(x=>x.ref.current);if(y==="last")v.reverse();else if(y==="prev"||y==="next"){y==="prev"&&v.reverse();const x=v.indexOf(g.currentTarget);v=u.loop?rC(v,x+1):v.slice(x+1)}setTimeout(()=>Py(v))}}),children:typeof a=="function"?a({isCurrentTabStop:d,hasTabStop:m!=null}):a})})});_y.displayName=Fy;var tC={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"};function nC(n,e){return e!=="rtl"?n:n==="ArrowLeft"?"ArrowRight":n==="ArrowRight"?"ArrowLeft":n}function sC(n,e,t){const s=nC(n.key,t);if(!(e==="vertical"&&["ArrowLeft","ArrowRight"].includes(s))&&!(e==="horizontal"&&["ArrowUp","ArrowDown"].includes(s)))return tC[s]}function Py(n,e=!1){const t=document.activeElement;for(const s of n)if(s===t||(s.focus({preventScroll:e}),document.activeElement!==t))return}function rC(n,e){return n.map((t,s)=>n[(e+s)%n.length])}var oC=Oy,aC=_y;function iC(n,e){return Q.useReducer((t,s)=>e[t][s]??t,n)}var ah=n=>{const{present:e,children:t}=n,s=cC(e),r=typeof t=="function"?t({present:s.isPresent}):Q.Children.only(t),o=gr(s.ref,lC(r));return typeof t=="function"||s.isPresent?Q.cloneElement(r,{ref:o}):null};ah.displayName="Presence";function cC(n){const[e,t]=Q.useState(),s=Q.useRef(null),r=Q.useRef(n),o=Q.useRef("none"),a=n?"mounted":"unmounted",[i,c]=iC(a,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return Q.useEffect(()=>{const l=Ti(s.current);o.current=i==="mounted"?l:"none"},[i]),rm(()=>{const l=s.current,u=r.current;if(u!==n){const h=o.current,p=Ti(l);n?c("MOUNT"):p==="none"||l?.display==="none"?c("UNMOUNT"):c(u&&h!==p?"ANIMATION_OUT":"UNMOUNT"),r.current=n}},[n,c]),rm(()=>{if(e){let l;const u=e.ownerDocument.defaultView??window,d=p=>{const m=Ti(s.current).includes(CSS.escape(p.animationName));if(p.target===e&&m&&(c("ANIMATION_END"),!r.current)){const g=e.style.animationFillMode;e.style.animationFillMode="forwards",l=u.setTimeout(()=>{e.style.animationFillMode==="forwards"&&(e.style.animationFillMode=g)})}},h=p=>{p.target===e&&(o.current=Ti(s.current))};return e.addEventListener("animationstart",h),e.addEventListener("animationcancel",d),e.addEventListener("animationend",d),()=>{u.clearTimeout(l),e.removeEventListener("animationstart",h),e.removeEventListener("animationcancel",d),e.removeEventListener("animationend",d)}}else c("ANIMATION_END")},[e,c]),{isPresent:["mounted","unmountSuspended"].includes(i),ref:Q.useCallback(l=>{s.current=l?getComputedStyle(l):null,t(l)},[])}}function Ti(n){return n?.animationName||"none"}function lC(n){let e=Object.getOwnPropertyDescriptor(n.props,"ref")?.get,t=e&&"isReactWarning"in e&&e.isReactWarning;return t?n.ref:(e=Object.getOwnPropertyDescriptor(n,"ref")?.get,t=e&&"isReactWarning"in e&&e.isReactWarning,t?n.props.ref:n.props.ref||n.ref)}var ih="Radio",[uC,Ly]=Mc(ih),[dC,hC]=uC(ih),My=Q.forwardRef((n,e)=>{const{__scopeRadio:t,name:s,checked:r=!1,required:o,disabled:a,value:i="on",onCheck:c,form:l,...u}=n,[d,h]=Q.useState(null),p=gr(e,g=>h(g)),f=Q.useRef(!1),m=d?l||!!d.closest("form"):!0;return W.jsxs(dC,{scope:t,checked:r,disabled:a,children:[W.jsx(zs.button,{type:"button",role:"radio","aria-checked":r,"data-state":Vy(r),"data-disabled":a?"":void 0,disabled:a,value:i,...u,ref:p,onClick:Zt(n.onClick,g=>{r||c?.(),m&&(f.current=g.isPropagationStopped(),f.current||g.stopPropagation())})}),m&&W.jsx(Wy,{control:d,bubbles:!f.current,name:s,value:i,checked:r,required:o,disabled:a,form:l,style:{transform:"translateX(-100%)"}})]})});My.displayName=ih;var zy="RadioIndicator",By=Q.forwardRef((n,e)=>{const{__scopeRadio:t,forceMount:s,...r}=n,o=hC(zy,t);return W.jsx(ah,{present:s||o.checked,children:W.jsx(zs.span,{"data-state":Vy(o.checked),"data-disabled":o.disabled?"":void 0,...r,ref:e})})});By.displayName=zy;var pC="RadioBubbleInput",Wy=Q.forwardRef(({__scopeRadio:n,control:e,checked:t,bubbles:s=!0,...r},o)=>{const a=Q.useRef(null),i=gr(a,o),c=Nk(t),l=$k(e);return Q.useEffect(()=>{const u=a.current;if(!u)return;const d=window.HTMLInputElement.prototype,p=Object.getOwnPropertyDescriptor(d,"checked").set;if(c!==t&&p){const f=new Event("click",{bubbles:s});p.call(u,t),u.dispatchEvent(f)}},[c,t,s]),W.jsx(zs.input,{type:"radio","aria-hidden":!0,defaultChecked:t,...r,tabIndex:-1,ref:i,style:{...r.style,...l,position:"absolute",pointerEvents:"none",opacity:0,margin:0}})});Wy.displayName=pC;function Vy(n){return n?"checked":"unchecked"}var fC=["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"],Bc="RadioGroup",[mC]=Mc(Bc,[Ry,Ly]),Uy=Ry(),Gy=Ly(),[gC,yC]=mC(Bc),jy=Q.forwardRef((n,e)=>{const{__scopeRadioGroup:t,name:s,defaultValue:r,value:o,required:a=!1,disabled:i=!1,orientation:c,dir:l,loop:u=!0,onValueChange:d,...h}=n,p=Uy(t),f=Sy(l),[m,g]=oh({prop:o,defaultProp:r??null,onChange:d,caller:Bc});return W.jsx(gC,{scope:t,name:s,required:a,disabled:i,value:m,onValueChange:g,children:W.jsx(oC,{asChild:!0,...p,orientation:c,dir:f,loop:u,children:W.jsx(zs.div,{role:"radiogroup","aria-required":a,"aria-orientation":c,"data-disabled":i?"":void 0,dir:f,...h,ref:e})})})});jy.displayName=Bc;var Hy="RadioGroupItem",qy=Q.forwardRef((n,e)=>{const{__scopeRadioGroup:t,disabled:s,...r}=n,o=yC(Hy,t),a=o.disabled||s,i=Uy(t),c=Gy(t),l=Q.useRef(null),u=gr(e,l),d=o.value===r.value,h=Q.useRef(!1);return Q.useEffect(()=>{const p=m=>{fC.includes(m.key)&&(h.current=!0)},f=()=>h.current=!1;return document.addEventListener("keydown",p),document.addEventListener("keyup",f),()=>{document.removeEventListener("keydown",p),document.removeEventListener("keyup",f)}},[]),W.jsx(aC,{asChild:!0,...i,focusable:!a,active:d,children:W.jsx(My,{disabled:a,required:o.required,checked:d,...c,...r,name:o.name,ref:u,onCheck:()=>o.onValueChange(r.value),onKeyDown:Zt(p=>{p.key==="Enter"&&p.preventDefault()}),onFocus:Zt(r.onFocus,()=>{h.current&&l.current?.click()})})})});qy.displayName=Hy;var bC="RadioGroupIndicator",Ky=Q.forwardRef((n,e)=>{const{__scopeRadioGroup:t,...s}=n,r=Gy(t);return W.jsx(By,{...r,...s,ref:e})});Ky.displayName=bC;var xC=jy,wC=qy,vC=Ky;function kC({className:n,...e}){return W.jsx(xC,{"data-slot":"radio-group",className:Fe("grid gap-3",n),...e})}function lm({className:n,...e}){return W.jsx(wC,{"data-slot":"radio-group-item",className:Fe("border-input text-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50",n),...e,children:W.jsx(vC,{"data-slot":"radio-group-indicator",className:"relative flex items-center justify-center",children:W.jsx(Kk,{className:"fill-primary absolute top-1/2 left-1/2 size-2 -translate-x-1/2 -translate-y-1/2"})})})}var Wc="Popover",[Xy]=Mc(Wc,[Ty]),Yo=Ty(),[CC,yr]=Xy(Wc),Yy=n=>{const{__scopePopover:e,children:t,open:s,defaultOpen:r,onOpenChange:o,modal:a=!1}=n,i=Yo(e),c=Q.useRef(null),[l,u]=Q.useState(!1),[d,h]=oh({prop:s,defaultProp:r??!1,onChange:o,caller:Wc});return W.jsx(Ik,{...i,children:W.jsx(CC,{scope:e,contentId:Iy(),triggerRef:c,open:d,onOpenChange:h,onOpenToggle:Q.useCallback(()=>h(p=>!p),[h]),hasCustomAnchor:l,onCustomAnchorAdd:Q.useCallback(()=>u(!0),[]),onCustomAnchorRemove:Q.useCallback(()=>u(!1),[]),modal:a,children:t})})};Yy.displayName=Wc;var Jy="PopoverAnchor",NC=Q.forwardRef((n,e)=>{const{__scopePopover:t,...s}=n,r=yr(Jy,t),o=Yo(t),{onCustomAnchorAdd:a,onCustomAnchorRemove:i}=r;return Q.useEffect(()=>(a(),()=>i()),[a,i]),W.jsx(Dy,{...o,...s,ref:e})});NC.displayName=Jy;var Zy="PopoverTrigger",Qy=Q.forwardRef((n,e)=>{const{__scopePopover:t,...s}=n,r=yr(Zy,t),o=Yo(t),a=gr(e,r.triggerRef),i=W.jsx(zs.button,{type:"button","aria-haspopup":"dialog","aria-expanded":r.open,"aria-controls":r.contentId,"data-state":sb(r.open),...s,ref:a,onClick:Zt(n.onClick,r.onOpenToggle)});return r.hasCustomAnchor?i:W.jsx(Dy,{asChild:!0,...o,children:i})});Qy.displayName=Zy;var $C="PopoverPortal",[oY,IC]=Xy($C,{forceMount:void 0}),Ur="PopoverContent",eb=Q.forwardRef((n,e)=>{const t=IC(Ur,n.__scopePopover),{forceMount:s=t.forceMount,...r}=n,o=yr(Ur,n.__scopePopover);return W.jsx(ah,{present:s||o.open,children:o.modal?W.jsx(TC,{...r,ref:e}):W.jsx(DC,{...r,ref:e})})});eb.displayName=Ur;var SC=wk("PopoverContent.RemoveScroll"),TC=Q.forwardRef((n,e)=>{const t=yr(Ur,n.__scopePopover),s=Q.useRef(null),r=gr(e,s),o=Q.useRef(!1);return Q.useEffect(()=>{const a=s.current;if(a)return Sk(a)},[]),W.jsx(Tk,{as:SC,allowPinchZoom:!0,children:W.jsx(tb,{...n,ref:r,trapFocus:t.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:Zt(n.onCloseAutoFocus,a=>{a.preventDefault(),o.current||t.triggerRef.current?.focus()}),onPointerDownOutside:Zt(n.onPointerDownOutside,a=>{const i=a.detail.originalEvent,c=i.button===0&&i.ctrlKey===!0,l=i.button===2||c;o.current=l},{checkForDefaultPrevented:!1}),onFocusOutside:Zt(n.onFocusOutside,a=>a.preventDefault(),{checkForDefaultPrevented:!1})})})}),DC=Q.forwardRef((n,e)=>{const t=yr(Ur,n.__scopePopover),s=Q.useRef(!1),r=Q.useRef(!1);return W.jsx(tb,{...n,ref:e,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:o=>{n.onCloseAutoFocus?.(o),o.defaultPrevented||(s.current||t.triggerRef.current?.focus(),o.preventDefault()),s.current=!1,r.current=!1},onInteractOutside:o=>{n.onInteractOutside?.(o),o.defaultPrevented||(s.current=!0,o.detail.originalEvent.type==="pointerdown"&&(r.current=!0));const a=o.target;t.triggerRef.current?.contains(a)&&o.preventDefault(),o.detail.originalEvent.type==="focusin"&&r.current&&o.preventDefault()}})}),tb=Q.forwardRef((n,e)=>{const{__scopePopover:t,trapFocus:s,onOpenAutoFocus:r,onCloseAutoFocus:o,disableOutsidePointerEvents:a,onEscapeKeyDown:i,onPointerDownOutside:c,onFocusOutside:l,onInteractOutside:u,...d}=n,h=yr(Ur,t),p=Yo(t);return Dk(),W.jsx(Ek,{asChild:!0,loop:!0,trapped:s,onMountAutoFocus:r,onUnmountAutoFocus:o,children:W.jsx(Ak,{asChild:!0,disableOutsidePointerEvents:a,onInteractOutside:u,onEscapeKeyDown:i,onPointerDownOutside:c,onFocusOutside:l,onDismiss:()=>h.onOpenChange(!1),children:W.jsx(Rk,{"data-state":sb(h.open),role:"dialog",id:h.contentId,...p,...d,ref:e,style:{...d.style,"--radix-popover-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-popover-content-available-width":"var(--radix-popper-available-width)","--radix-popover-content-available-height":"var(--radix-popper-available-height)","--radix-popover-trigger-width":"var(--radix-popper-anchor-width)","--radix-popover-trigger-height":"var(--radix-popper-anchor-height)"}})})})}),nb="PopoverClose",EC=Q.forwardRef((n,e)=>{const{__scopePopover:t,...s}=n,r=yr(nb,t);return W.jsx(zs.button,{type:"button",...s,ref:e,onClick:Zt(n.onClick,()=>r.onOpenChange(!1))})});EC.displayName=nb;var AC="PopoverArrow",RC=Q.forwardRef((n,e)=>{const{__scopePopover:t,...s}=n,r=Yo(t);return W.jsx(Ok,{...r,...s,ref:e})});RC.displayName=AC;function sb(n){return n?"open":"closed"}function OC(n,e,t="long"){return new Intl.DateTimeFormat("en-US",{hour:"numeric",timeZone:n,timeZoneName:t}).format(e).split(/\s/g).slice(2).join(" ")}const FC={},To={};function Zs(n,e){try{const s=(FC[n]||=new Intl.DateTimeFormat("en-US",{timeZone:n,timeZoneName:"longOffset"}).format)(e).split("GMT")[1];return s in To?To[s]:um(s,s.split(":"))}catch{if(n in To)return To[n];const t=n?.match(_C);return t?um(n,t.slice(1)):NaN}}const _C=/([+-]\d\d):?(\d\d)?/;function um(n,e){const t=+(e[0]||0),s=+(e[1]||0),r=+(e[2]||0)/60;return To[n]=t*60+s>0?t*60+s+r:t*60-s-r}class Yn extends Date{constructor(...e){super(),e.length>1&&typeof e[e.length-1]=="string"&&(this.timeZone=e.pop()),this.internal=new Date,isNaN(Zs(this.timeZone,this))?this.setTime(NaN):e.length?typeof e[0]=="number"&&(e.length===1||e.length===2&&typeof e[1]!="number")?this.setTime(e[0]):typeof e[0]=="string"?this.setTime(+new Date(e[0])):e[0]instanceof Date?this.setTime(+e[0]):(this.setTime(+new Date(...e)),rb(this),ld(this)):this.setTime(Date.now())}static tz(e,...t){return t.length?new Yn(...t,e):new Yn(Date.now(),e)}withTimeZone(e){return new Yn(+this,e)}getTimezoneOffset(){const e=-Zs(this.timeZone,this);return e>0?Math.floor(e):Math.ceil(e)}setTime(e){return Date.prototype.setTime.apply(this,arguments),ld(this),+this}[Symbol.for("constructDateFrom")](e){return new Yn(+new Date(e),this.timeZone)}}const dm=/^(get|set)(?!UTC)/;Object.getOwnPropertyNames(Date.prototype).forEach(n=>{if(!dm.test(n))return;const e=n.replace(dm,"$1UTC");Yn.prototype[e]&&(n.startsWith("get")?Yn.prototype[n]=function(){return this.internal[e]()}:(Yn.prototype[n]=function(){return Date.prototype[e].apply(this.internal,arguments),PC(this),+this},Yn.prototype[e]=function(){return Date.prototype[e].apply(this,arguments),ld(this),+this}))});function ld(n){n.internal.setTime(+n),n.internal.setUTCSeconds(n.internal.getUTCSeconds()-Math.round(-Zs(n.timeZone,n)*60))}function PC(n){Date.prototype.setFullYear.call(n,n.internal.getUTCFullYear(),n.internal.getUTCMonth(),n.internal.getUTCDate()),Date.prototype.setHours.call(n,n.internal.getUTCHours(),n.internal.getUTCMinutes(),n.internal.getUTCSeconds(),n.internal.getUTCMilliseconds()),rb(n)}function rb(n){const e=Zs(n.timeZone,n),t=e>0?Math.floor(e):Math.ceil(e),s=new Date(+n);s.setUTCHours(s.getUTCHours()-1);const r=-new Date(+n).getTimezoneOffset(),o=-new Date(+s).getTimezoneOffset(),a=r-o,i=Date.prototype.getHours.apply(n)!==n.internal.getUTCHours();a&&i&&n.internal.setUTCMinutes(n.internal.getUTCMinutes()+a);const c=r-t;c&&Date.prototype.setUTCMinutes.call(n,Date.prototype.getUTCMinutes.call(n)+c);const l=new Date(+n);l.setUTCSeconds(0);const u=r>0?l.getSeconds():(l.getSeconds()-60)%60,d=Math.round(-(Zs(n.timeZone,n)*60))%60;(d||u)&&(n.internal.setUTCSeconds(n.internal.getUTCSeconds()+d),Date.prototype.setUTCSeconds.call(n,Date.prototype.getUTCSeconds.call(n)+d+u));const h=Zs(n.timeZone,n),p=h>0?Math.floor(h):Math.ceil(h),m=-new Date(+n).getTimezoneOffset()-p,g=p!==t,y=m-c;if(g&&y){Date.prototype.setUTCMinutes.call(n,Date.prototype.getUTCMinutes.call(n)+y);const b=Zs(n.timeZone,n),v=b>0?Math.floor(b):Math.ceil(b),x=p-v;x&&(n.internal.setUTCMinutes(n.internal.getUTCMinutes()+x),Date.prototype.setUTCMinutes.call(n,Date.prototype.getUTCMinutes.call(n)+x))}}class Wt extends Yn{static tz(e,...t){return t.length?new Wt(...t,e):new Wt(Date.now(),e)}toISOString(){const[e,t,s]=this.tzComponents(),r=`${e}${t}:${s}`;return this.internal.toISOString().slice(0,-1)+r}toString(){return`${this.toDateString()} ${this.toTimeString()}`}toDateString(){const[e,t,s,r]=this.internal.toUTCString().split(" ");return`${e?.slice(0,-1)} ${s} ${t} ${r}`}toTimeString(){const e=this.internal.toUTCString().split(" ")[4],[t,s,r]=this.tzComponents();return`${e} GMT${t}${s}${r} (${OC(this.timeZone,this)})`}toLocaleString(e,t){return Date.prototype.toLocaleString.call(this,e,{...t,timeZone:t?.timeZone||this.timeZone})}toLocaleDateString(e,t){return Date.prototype.toLocaleDateString.call(this,e,{...t,timeZone:t?.timeZone||this.timeZone})}toLocaleTimeString(e,t){return Date.prototype.toLocaleTimeString.call(this,e,{...t,timeZone:t?.timeZone||this.timeZone})}tzComponents(){const e=this.getTimezoneOffset(),t=e>0?"-":"+",s=String(Math.floor(Math.abs(e)/60)).padStart(2,"0"),r=String(Math.abs(e)%60).padStart(2,"0");return[t,s,r]}withTimeZone(e){return new Wt(+this,e)}[Symbol.for("constructDateFrom")](e){return new Wt(+new Date(e),this.timeZone)}}const ob=6048e5,LC=864e5,hm=Symbol.for("constructDateFrom");function vt(n,e){return typeof n=="function"?n(e):n&&typeof n=="object"&&hm in n?n[hm](e):n instanceof Date?new n.constructor(e):new Date(e)}function qe(n,e){return vt(e||n,n)}function ab(n,e,t){const s=qe(n,t?.in);return isNaN(e)?vt(n,NaN):(e&&s.setDate(s.getDate()+e),s)}function ib(n,e,t){const s=qe(n,t?.in);if(isNaN(e))return vt(n,NaN);if(!e)return s;const r=s.getDate(),o=vt(n,s.getTime());o.setMonth(s.getMonth()+e+1,0);const a=o.getDate();return r>=a?o:(s.setFullYear(o.getFullYear(),o.getMonth(),r),s)}let MC={};function Jo(){return MC}function Gr(n,e){const t=Jo(),s=e?.weekStartsOn??e?.locale?.options?.weekStartsOn??t.weekStartsOn??t.locale?.options?.weekStartsOn??0,r=qe(n,e?.in),o=r.getDay(),a=(o<s?7:0)+o-s;return r.setDate(r.getDate()-a),r.setHours(0,0,0,0),r}function Po(n,e){return Gr(n,{...e,weekStartsOn:1})}function cb(n,e){const t=qe(n,e?.in),s=t.getFullYear(),r=vt(t,0);r.setFullYear(s+1,0,4),r.setHours(0,0,0,0);const o=Po(r),a=vt(t,0);a.setFullYear(s,0,4),a.setHours(0,0,0,0);const i=Po(a);return t.getTime()>=o.getTime()?s+1:t.getTime()>=i.getTime()?s:s-1}function pm(n){const e=qe(n),t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),+n-+t}function no(n,...e){const t=vt.bind(null,e.find(s=>typeof s=="object"));return e.map(t)}function Lo(n,e){const t=qe(n,e?.in);return t.setHours(0,0,0,0),t}function lb(n,e,t){const[s,r]=no(t?.in,n,e),o=Lo(s),a=Lo(r),i=+o-pm(o),c=+a-pm(a);return Math.round((i-c)/LC)}function zC(n,e){const t=cb(n,e),s=vt(n,0);return s.setFullYear(t,0,4),s.setHours(0,0,0,0),Po(s)}function BC(n,e,t){return ab(n,e*7,t)}function WC(n,e,t){return ib(n,e*12,t)}function VC(n,e){let t,s=e?.in;return n.forEach(r=>{!s&&typeof r=="object"&&(s=vt.bind(null,r));const o=qe(r,s);(!t||t<o||isNaN(+o))&&(t=o)}),vt(s,t||NaN)}function UC(n,e){let t,s=e?.in;return n.forEach(r=>{!s&&typeof r=="object"&&(s=vt.bind(null,r));const o=qe(r,s);(!t||t>o||isNaN(+o))&&(t=o)}),vt(s,t||NaN)}function GC(n,e,t){const[s,r]=no(t?.in,n,e);return+Lo(s)==+Lo(r)}function ub(n){return n instanceof Date||typeof n=="object"&&Object.prototype.toString.call(n)==="[object Date]"}function jC(n){return!(!ub(n)&&typeof n!="number"||isNaN(+qe(n)))}function HC(n,e,t){const[s,r]=no(t?.in,n,e),o=s.getFullYear()-r.getFullYear(),a=s.getMonth()-r.getMonth();return o*12+a}function qC(n,e){const t=qe(n,e?.in),s=t.getMonth();return t.setFullYear(t.getFullYear(),s+1,0),t.setHours(23,59,59,999),t}function db(n,e){const[t,s]=no(n,e.start,e.end);return{start:t,end:s}}function KC(n,e){const{start:t,end:s}=db(e?.in,n);let r=+t>+s;const o=r?+t:+s,a=r?s:t;a.setHours(0,0,0,0),a.setDate(1);let i=1;const c=[];for(;+a<=o;)c.push(vt(t,a)),a.setMonth(a.getMonth()+i);return r?c.reverse():c}function XC(n,e){const t=qe(n,e?.in);return t.setDate(1),t.setHours(0,0,0,0),t}function YC(n,e){const t=qe(n,e?.in),s=t.getFullYear();return t.setFullYear(s+1,0,0),t.setHours(23,59,59,999),t}function hb(n,e){const t=qe(n,e?.in);return t.setFullYear(t.getFullYear(),0,1),t.setHours(0,0,0,0),t}function JC(n,e){const{start:t,end:s}=db(e?.in,n);let r=+t>+s;const o=r?+t:+s,a=r?s:t;a.setHours(0,0,0,0),a.setMonth(0,1);let i=1;const c=[];for(;+a<=o;)c.push(vt(t,a)),a.setFullYear(a.getFullYear()+i);return r?c.reverse():c}function pb(n,e){const t=Jo(),s=e?.weekStartsOn??e?.locale?.options?.weekStartsOn??t.weekStartsOn??t.locale?.options?.weekStartsOn??0,r=qe(n,e?.in),o=r.getDay(),a=(o<s?-7:0)+6-(o-s);return r.setDate(r.getDate()+a),r.setHours(23,59,59,999),r}function ZC(n,e){return pb(n,{...e,weekStartsOn:1})}const QC={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},eN=(n,e,t)=>{let s;const r=QC[n];return typeof r=="string"?s=r:e===1?s=r.one:s=r.other.replace("{{count}}",e.toString()),t?.addSuffix?t.comparison&&t.comparison>0?"in "+s:s+" ago":s};function _u(n){return(e={})=>{const t=e.width?String(e.width):n.defaultWidth;return n.formats[t]||n.formats[n.defaultWidth]}}const tN={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},nN={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},sN={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},rN={date:_u({formats:tN,defaultWidth:"full"}),time:_u({formats:nN,defaultWidth:"full"}),dateTime:_u({formats:sN,defaultWidth:"full"})},oN={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},aN=(n,e,t,s)=>oN[n];function Co(n){return(e,t)=>{const s=t?.context?String(t.context):"standalone";let r;if(s==="formatting"&&n.formattingValues){const a=n.defaultFormattingWidth||n.defaultWidth,i=t?.width?String(t.width):a;r=n.formattingValues[i]||n.formattingValues[a]}else{const a=n.defaultWidth,i=t?.width?String(t.width):n.defaultWidth;r=n.values[i]||n.values[a]}const o=n.argumentCallback?n.argumentCallback(e):e;return r[o]}}const iN={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},cN={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},lN={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},uN={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},dN={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},hN={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},pN=(n,e)=>{const t=Number(n),s=t%100;if(s>20||s<10)switch(s%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},fN={ordinalNumber:pN,era:Co({values:iN,defaultWidth:"wide"}),quarter:Co({values:cN,defaultWidth:"wide",argumentCallback:n=>n-1}),month:Co({values:lN,defaultWidth:"wide"}),day:Co({values:uN,defaultWidth:"wide"}),dayPeriod:Co({values:dN,defaultWidth:"wide",formattingValues:hN,defaultFormattingWidth:"wide"})};function No(n){return(e,t={})=>{const s=t.width,r=s&&n.matchPatterns[s]||n.matchPatterns[n.defaultMatchWidth],o=e.match(r);if(!o)return null;const a=o[0],i=s&&n.parsePatterns[s]||n.parsePatterns[n.defaultParseWidth],c=Array.isArray(i)?gN(i,d=>d.test(a)):mN(i,d=>d.test(a));let l;l=n.valueCallback?n.valueCallback(c):c,l=t.valueCallback?t.valueCallback(l):l;const u=e.slice(a.length);return{value:l,rest:u}}}function mN(n,e){for(const t in n)if(Object.prototype.hasOwnProperty.call(n,t)&&e(n[t]))return t}function gN(n,e){for(let t=0;t<n.length;t++)if(e(n[t]))return t}function yN(n){return(e,t={})=>{const s=e.match(n.matchPattern);if(!s)return null;const r=s[0],o=e.match(n.parsePattern);if(!o)return null;let a=n.valueCallback?n.valueCallback(o[0]):o[0];a=t.valueCallback?t.valueCallback(a):a;const i=e.slice(r.length);return{value:a,rest:i}}}const bN=/^(\d+)(th|st|nd|rd)?/i,xN=/\d+/i,wN={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},vN={any:[/^b/i,/^(a|c)/i]},kN={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},CN={any:[/1/i,/2/i,/3/i,/4/i]},NN={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},$N={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},IN={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},SN={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},TN={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},DN={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},EN={ordinalNumber:yN({matchPattern:bN,parsePattern:xN,valueCallback:n=>parseInt(n,10)}),era:No({matchPatterns:wN,defaultMatchWidth:"wide",parsePatterns:vN,defaultParseWidth:"any"}),quarter:No({matchPatterns:kN,defaultMatchWidth:"wide",parsePatterns:CN,defaultParseWidth:"any",valueCallback:n=>n+1}),month:No({matchPatterns:NN,defaultMatchWidth:"wide",parsePatterns:$N,defaultParseWidth:"any"}),day:No({matchPatterns:IN,defaultMatchWidth:"wide",parsePatterns:SN,defaultParseWidth:"any"}),dayPeriod:No({matchPatterns:TN,defaultMatchWidth:"any",parsePatterns:DN,defaultParseWidth:"any"})},ch={code:"en-US",formatDistance:eN,formatLong:rN,formatRelative:aN,localize:fN,match:EN,options:{weekStartsOn:0,firstWeekContainsDate:1}};function AN(n,e){const t=qe(n,e?.in);return lb(t,hb(t))+1}function fb(n,e){const t=qe(n,e?.in),s=+Po(t)-+zC(t);return Math.round(s/ob)+1}function mb(n,e){const t=qe(n,e?.in),s=t.getFullYear(),r=Jo(),o=e?.firstWeekContainsDate??e?.locale?.options?.firstWeekContainsDate??r.firstWeekContainsDate??r.locale?.options?.firstWeekContainsDate??1,a=vt(e?.in||n,0);a.setFullYear(s+1,0,o),a.setHours(0,0,0,0);const i=Gr(a,e),c=vt(e?.in||n,0);c.setFullYear(s,0,o),c.setHours(0,0,0,0);const l=Gr(c,e);return+t>=+i?s+1:+t>=+l?s:s-1}function RN(n,e){const t=Jo(),s=e?.firstWeekContainsDate??e?.locale?.options?.firstWeekContainsDate??t.firstWeekContainsDate??t.locale?.options?.firstWeekContainsDate??1,r=mb(n,e),o=vt(e?.in||n,0);return o.setFullYear(r,0,s),o.setHours(0,0,0,0),Gr(o,e)}function gb(n,e){const t=qe(n,e?.in),s=+Gr(t,e)-+RN(t,e);return Math.round(s/ob)+1}function Ve(n,e){const t=n<0?"-":"",s=Math.abs(n).toString().padStart(e,"0");return t+s}const Cs={y(n,e){const t=n.getFullYear(),s=t>0?t:1-t;return Ve(e==="yy"?s%100:s,e.length)},M(n,e){const t=n.getMonth();return e==="M"?String(t+1):Ve(t+1,2)},d(n,e){return Ve(n.getDate(),e.length)},a(n,e){const t=n.getHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.toUpperCase();case"aaa":return t;case"aaaaa":return t[0];case"aaaa":default:return t==="am"?"a.m.":"p.m."}},h(n,e){return Ve(n.getHours()%12||12,e.length)},H(n,e){return Ve(n.getHours(),e.length)},m(n,e){return Ve(n.getMinutes(),e.length)},s(n,e){return Ve(n.getSeconds(),e.length)},S(n,e){const t=e.length,s=n.getMilliseconds(),r=Math.trunc(s*Math.pow(10,t-3));return Ve(r,e.length)}},Dr={midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},fm={G:function(n,e,t){const s=n.getFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(s,{width:"abbreviated"});case"GGGGG":return t.era(s,{width:"narrow"});case"GGGG":default:return t.era(s,{width:"wide"})}},y:function(n,e,t){if(e==="yo"){const s=n.getFullYear(),r=s>0?s:1-s;return t.ordinalNumber(r,{unit:"year"})}return Cs.y(n,e)},Y:function(n,e,t,s){const r=mb(n,s),o=r>0?r:1-r;if(e==="YY"){const a=o%100;return Ve(a,2)}return e==="Yo"?t.ordinalNumber(o,{unit:"year"}):Ve(o,e.length)},R:function(n,e){const t=cb(n);return Ve(t,e.length)},u:function(n,e){const t=n.getFullYear();return Ve(t,e.length)},Q:function(n,e,t){const s=Math.ceil((n.getMonth()+1)/3);switch(e){case"Q":return String(s);case"QQ":return Ve(s,2);case"Qo":return t.ordinalNumber(s,{unit:"quarter"});case"QQQ":return t.quarter(s,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(s,{width:"narrow",context:"formatting"});case"QQQQ":default:return t.quarter(s,{width:"wide",context:"formatting"})}},q:function(n,e,t){const s=Math.ceil((n.getMonth()+1)/3);switch(e){case"q":return String(s);case"qq":return Ve(s,2);case"qo":return t.ordinalNumber(s,{unit:"quarter"});case"qqq":return t.quarter(s,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(s,{width:"narrow",context:"standalone"});case"qqqq":default:return t.quarter(s,{width:"wide",context:"standalone"})}},M:function(n,e,t){const s=n.getMonth();switch(e){case"M":case"MM":return Cs.M(n,e);case"Mo":return t.ordinalNumber(s+1,{unit:"month"});case"MMM":return t.month(s,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(s,{width:"narrow",context:"formatting"});case"MMMM":default:return t.month(s,{width:"wide",context:"formatting"})}},L:function(n,e,t){const s=n.getMonth();switch(e){case"L":return String(s+1);case"LL":return Ve(s+1,2);case"Lo":return t.ordinalNumber(s+1,{unit:"month"});case"LLL":return t.month(s,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(s,{width:"narrow",context:"standalone"});case"LLLL":default:return t.month(s,{width:"wide",context:"standalone"})}},w:function(n,e,t,s){const r=gb(n,s);return e==="wo"?t.ordinalNumber(r,{unit:"week"}):Ve(r,e.length)},I:function(n,e,t){const s=fb(n);return e==="Io"?t.ordinalNumber(s,{unit:"week"}):Ve(s,e.length)},d:function(n,e,t){return e==="do"?t.ordinalNumber(n.getDate(),{unit:"date"}):Cs.d(n,e)},D:function(n,e,t){const s=AN(n);return e==="Do"?t.ordinalNumber(s,{unit:"dayOfYear"}):Ve(s,e.length)},E:function(n,e,t){const s=n.getDay();switch(e){case"E":case"EE":case"EEE":return t.day(s,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(s,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(s,{width:"short",context:"formatting"});case"EEEE":default:return t.day(s,{width:"wide",context:"formatting"})}},e:function(n,e,t,s){const r=n.getDay(),o=(r-s.weekStartsOn+8)%7||7;switch(e){case"e":return String(o);case"ee":return Ve(o,2);case"eo":return t.ordinalNumber(o,{unit:"day"});case"eee":return t.day(r,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(r,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(r,{width:"short",context:"formatting"});case"eeee":default:return t.day(r,{width:"wide",context:"formatting"})}},c:function(n,e,t,s){const r=n.getDay(),o=(r-s.weekStartsOn+8)%7||7;switch(e){case"c":return String(o);case"cc":return Ve(o,e.length);case"co":return t.ordinalNumber(o,{unit:"day"});case"ccc":return t.day(r,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(r,{width:"narrow",context:"standalone"});case"cccccc":return t.day(r,{width:"short",context:"standalone"});case"cccc":default:return t.day(r,{width:"wide",context:"standalone"})}},i:function(n,e,t){const s=n.getDay(),r=s===0?7:s;switch(e){case"i":return String(r);case"ii":return Ve(r,e.length);case"io":return t.ordinalNumber(r,{unit:"day"});case"iii":return t.day(s,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(s,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(s,{width:"short",context:"formatting"});case"iiii":default:return t.day(s,{width:"wide",context:"formatting"})}},a:function(n,e,t){const r=n.getHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(r,{width:"narrow",context:"formatting"});case"aaaa":default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(n,e,t){const s=n.getHours();let r;switch(s===12?r=Dr.noon:s===0?r=Dr.midnight:r=s/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(r,{width:"narrow",context:"formatting"});case"bbbb":default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(n,e,t){const s=n.getHours();let r;switch(s>=17?r=Dr.evening:s>=12?r=Dr.afternoon:s>=4?r=Dr.morning:r=Dr.night,e){case"B":case"BB":case"BBB":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(r,{width:"narrow",context:"formatting"});case"BBBB":default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(n,e,t){if(e==="ho"){let s=n.getHours()%12;return s===0&&(s=12),t.ordinalNumber(s,{unit:"hour"})}return Cs.h(n,e)},H:function(n,e,t){return e==="Ho"?t.ordinalNumber(n.getHours(),{unit:"hour"}):Cs.H(n,e)},K:function(n,e,t){const s=n.getHours()%12;return e==="Ko"?t.ordinalNumber(s,{unit:"hour"}):Ve(s,e.length)},k:function(n,e,t){let s=n.getHours();return s===0&&(s=24),e==="ko"?t.ordinalNumber(s,{unit:"hour"}):Ve(s,e.length)},m:function(n,e,t){return e==="mo"?t.ordinalNumber(n.getMinutes(),{unit:"minute"}):Cs.m(n,e)},s:function(n,e,t){return e==="so"?t.ordinalNumber(n.getSeconds(),{unit:"second"}):Cs.s(n,e)},S:function(n,e){return Cs.S(n,e)},X:function(n,e,t){const s=n.getTimezoneOffset();if(s===0)return"Z";switch(e){case"X":return gm(s);case"XXXX":case"XX":return Xs(s);case"XXXXX":case"XXX":default:return Xs(s,":")}},x:function(n,e,t){const s=n.getTimezoneOffset();switch(e){case"x":return gm(s);case"xxxx":case"xx":return Xs(s);case"xxxxx":case"xxx":default:return Xs(s,":")}},O:function(n,e,t){const s=n.getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+mm(s,":");case"OOOO":default:return"GMT"+Xs(s,":")}},z:function(n,e,t){const s=n.getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+mm(s,":");case"zzzz":default:return"GMT"+Xs(s,":")}},t:function(n,e,t){const s=Math.trunc(+n/1e3);return Ve(s,e.length)},T:function(n,e,t){return Ve(+n,e.length)}};function mm(n,e=""){const t=n>0?"-":"+",s=Math.abs(n),r=Math.trunc(s/60),o=s%60;return o===0?t+String(r):t+String(r)+e+Ve(o,2)}function gm(n,e){return n%60===0?(n>0?"-":"+")+Ve(Math.abs(n)/60,2):Xs(n,e)}function Xs(n,e=""){const t=n>0?"-":"+",s=Math.abs(n),r=Ve(Math.trunc(s/60),2),o=Ve(s%60,2);return t+r+e+o}const ym=(n,e)=>{switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});case"PPPP":default:return e.date({width:"full"})}},yb=(n,e)=>{switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});case"pppp":default:return e.time({width:"full"})}},ON=(n,e)=>{const t=n.match(/(P+)(p+)?/)||[],s=t[1],r=t[2];if(!r)return ym(n,e);let o;switch(s){case"P":o=e.dateTime({width:"short"});break;case"PP":o=e.dateTime({width:"medium"});break;case"PPP":o=e.dateTime({width:"long"});break;case"PPPP":default:o=e.dateTime({width:"full"});break}return o.replace("{{date}}",ym(s,e)).replace("{{time}}",yb(r,e))},FN={p:yb,P:ON},_N=/^D+$/,PN=/^Y+$/,LN=["D","DD","YY","YYYY"];function MN(n){return _N.test(n)}function zN(n){return PN.test(n)}function BN(n,e,t){const s=WN(n,e,t);if(console.warn(s),LN.includes(n))throw new RangeError(s)}function WN(n,e,t){const s=n[0]==="Y"?"years":"days of the month";return`Use \`${n.toLowerCase()}\` instead of \`${n}\` (in \`${e}\`) for formatting ${s} to the input \`${t}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`}const VN=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,UN=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,GN=/^'([^]*?)'?$/,jN=/''/g,HN=/[a-zA-Z]/;function qN(n,e,t){const s=Jo(),r=t?.locale??s.locale??ch,o=t?.firstWeekContainsDate??t?.locale?.options?.firstWeekContainsDate??s.firstWeekContainsDate??s.locale?.options?.firstWeekContainsDate??1,a=t?.weekStartsOn??t?.locale?.options?.weekStartsOn??s.weekStartsOn??s.locale?.options?.weekStartsOn??0,i=qe(n,t?.in);if(!jC(i))throw new RangeError("Invalid time value");let c=e.match(UN).map(u=>{const d=u[0];if(d==="p"||d==="P"){const h=FN[d];return h(u,r.formatLong)}return u}).join("").match(VN).map(u=>{if(u==="''")return{isToken:!1,value:"'"};const d=u[0];if(d==="'")return{isToken:!1,value:KN(u)};if(fm[d])return{isToken:!0,value:u};if(d.match(HN))throw new RangeError("Format string contains an unescaped latin alphabet character `"+d+"`");return{isToken:!1,value:u}});r.localize.preprocessor&&(c=r.localize.preprocessor(i,c));const l={firstWeekContainsDate:o,weekStartsOn:a,locale:r};return c.map(u=>{if(!u.isToken)return u.value;const d=u.value;(!t?.useAdditionalWeekYearTokens&&zN(d)||!t?.useAdditionalDayOfYearTokens&&MN(d))&&BN(d,e,String(n));const h=fm[d[0]];return h(i,d,r.localize,l)}).join("")}function KN(n){const e=n.match(GN);return e?e[1].replace(jN,"'"):n}function XN(n,e){const t=qe(n,e?.in),s=t.getFullYear(),r=t.getMonth(),o=vt(t,0);return o.setFullYear(s,r+1,0),o.setHours(0,0,0,0),o.getDate()}function YN(n,e){return qe(n,e?.in).getMonth()}function JN(n,e){return qe(n,e?.in).getFullYear()}function ZN(n,e){return+qe(n)>+qe(e)}function QN(n,e){return+qe(n)<+qe(e)}function e$(n,e,t){const[s,r]=no(t?.in,n,e);return s.getFullYear()===r.getFullYear()&&s.getMonth()===r.getMonth()}function t$(n,e,t){const[s,r]=no(t?.in,n,e);return s.getFullYear()===r.getFullYear()}function n$(n,e,t){const s=qe(n,t?.in),r=s.getFullYear(),o=s.getDate(),a=vt(n,0);a.setFullYear(r,e,15),a.setHours(0,0,0,0);const i=XN(a);return s.setMonth(e,Math.min(o,i)),s}function s$(n,e,t){const s=qe(n,t?.in);return isNaN(+s)?vt(n,NaN):(s.setFullYear(e),s)}const bm=5,r$=4;function o$(n,e){const t=e.startOfMonth(n),s=t.getDay()>0?t.getDay():7,r=e.addDays(n,-s+1),o=e.addDays(r,bm*7-1);return e.getMonth(n)===e.getMonth(o)?bm:r$}function bb(n,e){const t=e.startOfMonth(n),s=t.getDay();return s===1?t:s===0?e.addDays(t,-6):e.addDays(t,-1*(s-1))}function a$(n,e){const t=bb(n,e),s=o$(n,e);return e.addDays(t,s*7-1)}class cn{constructor(e,t){this.Date=Date,this.today=()=>this.overrides?.today?this.overrides.today():this.options.timeZone?Wt.tz(this.options.timeZone):new this.Date,this.newDate=(s,r,o)=>this.overrides?.newDate?this.overrides.newDate(s,r,o):this.options.timeZone?new Wt(s,r,o,this.options.timeZone):new Date(s,r,o),this.addDays=(s,r)=>this.overrides?.addDays?this.overrides.addDays(s,r):ab(s,r),this.addMonths=(s,r)=>this.overrides?.addMonths?this.overrides.addMonths(s,r):ib(s,r),this.addWeeks=(s,r)=>this.overrides?.addWeeks?this.overrides.addWeeks(s,r):BC(s,r),this.addYears=(s,r)=>this.overrides?.addYears?this.overrides.addYears(s,r):WC(s,r),this.differenceInCalendarDays=(s,r)=>this.overrides?.differenceInCalendarDays?this.overrides.differenceInCalendarDays(s,r):lb(s,r),this.differenceInCalendarMonths=(s,r)=>this.overrides?.differenceInCalendarMonths?this.overrides.differenceInCalendarMonths(s,r):HC(s,r),this.eachMonthOfInterval=s=>this.overrides?.eachMonthOfInterval?this.overrides.eachMonthOfInterval(s):KC(s),this.eachYearOfInterval=s=>{const r=this.overrides?.eachYearOfInterval?this.overrides.eachYearOfInterval(s):JC(s),o=new Set(r.map(i=>this.getYear(i)));if(o.size===r.length)return r;const a=[];return o.forEach(i=>{a.push(new Date(i,0,1))}),a},this.endOfBroadcastWeek=s=>this.overrides?.endOfBroadcastWeek?this.overrides.endOfBroadcastWeek(s):a$(s,this),this.endOfISOWeek=s=>this.overrides?.endOfISOWeek?this.overrides.endOfISOWeek(s):ZC(s),this.endOfMonth=s=>this.overrides?.endOfMonth?this.overrides.endOfMonth(s):qC(s),this.endOfWeek=(s,r)=>this.overrides?.endOfWeek?this.overrides.endOfWeek(s,r):pb(s,this.options),this.endOfYear=s=>this.overrides?.endOfYear?this.overrides.endOfYear(s):YC(s),this.format=(s,r,o)=>{const a=this.overrides?.format?this.overrides.format(s,r,this.options):qN(s,r,this.options);return this.options.numerals&&this.options.numerals!=="latn"?this.replaceDigits(a):a},this.getISOWeek=s=>this.overrides?.getISOWeek?this.overrides.getISOWeek(s):fb(s),this.getMonth=(s,r)=>this.overrides?.getMonth?this.overrides.getMonth(s,this.options):YN(s,this.options),this.getYear=(s,r)=>this.overrides?.getYear?this.overrides.getYear(s,this.options):JN(s,this.options),this.getWeek=(s,r)=>this.overrides?.getWeek?this.overrides.getWeek(s,this.options):gb(s,this.options),this.isAfter=(s,r)=>this.overrides?.isAfter?this.overrides.isAfter(s,r):ZN(s,r),this.isBefore=(s,r)=>this.overrides?.isBefore?this.overrides.isBefore(s,r):QN(s,r),this.isDate=s=>this.overrides?.isDate?this.overrides.isDate(s):ub(s),this.isSameDay=(s,r)=>this.overrides?.isSameDay?this.overrides.isSameDay(s,r):GC(s,r),this.isSameMonth=(s,r)=>this.overrides?.isSameMonth?this.overrides.isSameMonth(s,r):e$(s,r),this.isSameYear=(s,r)=>this.overrides?.isSameYear?this.overrides.isSameYear(s,r):t$(s,r),this.max=s=>this.overrides?.max?this.overrides.max(s):VC(s),this.min=s=>this.overrides?.min?this.overrides.min(s):UC(s),this.setMonth=(s,r)=>this.overrides?.setMonth?this.overrides.setMonth(s,r):n$(s,r),this.setYear=(s,r)=>this.overrides?.setYear?this.overrides.setYear(s,r):s$(s,r),this.startOfBroadcastWeek=(s,r)=>this.overrides?.startOfBroadcastWeek?this.overrides.startOfBroadcastWeek(s,this):bb(s,this),this.startOfDay=s=>this.overrides?.startOfDay?this.overrides.startOfDay(s):Lo(s),this.startOfISOWeek=s=>this.overrides?.startOfISOWeek?this.overrides.startOfISOWeek(s):Po(s),this.startOfMonth=s=>this.overrides?.startOfMonth?this.overrides.startOfMonth(s):XC(s),this.startOfWeek=(s,r)=>this.overrides?.startOfWeek?this.overrides.startOfWeek(s,this.options):Gr(s,this.options),this.startOfYear=s=>this.overrides?.startOfYear?this.overrides.startOfYear(s):hb(s),this.options={locale:ch,...e},this.overrides=t}getDigitMap(){const{numerals:e="latn"}=this.options,t=new Intl.NumberFormat("en-US",{numberingSystem:e}),s={};for(let r=0;r<10;r++)s[r.toString()]=t.format(r);return s}replaceDigits(e){const t=this.getDigitMap();return e.replace(/\d/g,s=>t[s]||s)}formatNumber(e){return this.replaceDigits(e.toString())}getMonthYearOrder(){const e=this.options.locale?.code;return e&&cn.yearFirstLocales.has(e)?"year-first":"month-first"}formatMonthYear(e){const{locale:t,timeZone:s,numerals:r}=this.options,o=t?.code;if(o&&cn.yearFirstLocales.has(o))try{return new Intl.DateTimeFormat(o,{month:"long",year:"numeric",timeZone:s,numberingSystem:r}).format(e)}catch{}const a=this.getMonthYearOrder()==="year-first"?"y LLLL":"LLLL y";return this.format(e,a)}}cn.yearFirstLocales=new Set(["eu","hu","ja","ja-Hira","ja-JP","ko","ko-KR","lt","lt-LT","lv","lv-LV","mn","mn-MN","zh","zh-CN","zh-HK","zh-TW"]);const ss=new cn;class xb{constructor(e,t,s=ss){this.date=e,this.displayMonth=t,this.outside=!!(t&&!s.isSameMonth(e,t)),this.dateLib=s}isEqualTo(e){return this.dateLib.isSameDay(e.date,this.date)&&this.dateLib.isSameMonth(e.displayMonth,this.displayMonth)}}class i${constructor(e,t){this.date=e,this.weeks=t}}class c${constructor(e,t){this.days=t,this.weekNumber=e}}function l$(n){return oe.createElement("button",{...n})}function u$(n){return oe.createElement("span",{...n})}function d$(n){const{size:e=24,orientation:t="left",className:s}=n;return oe.createElement("svg",{className:s,width:e,height:e,viewBox:"0 0 24 24"},t==="up"&&oe.createElement("polygon",{points:"6.77 17 12.5 11.43 18.24 17 20 15.28 12.5 8 5 15.28"}),t==="down"&&oe.createElement("polygon",{points:"6.77 8 12.5 13.57 18.24 8 20 9.72 12.5 17 5 9.72"}),t==="left"&&oe.createElement("polygon",{points:"16 18.112 9.81111111 12 16 5.87733333 14.0888889 4 6 12 14.0888889 20"}),t==="right"&&oe.createElement("polygon",{points:"8 18.112 14.18888889 12 8 5.87733333 9.91111111 4 18 12 9.91111111 20"}))}function h$(n){const{day:e,modifiers:t,...s}=n;return oe.createElement("td",{...s})}function p$(n){const{day:e,modifiers:t,...s}=n,r=oe.useRef(null);return oe.useEffect(()=>{t.focused&&r.current?.focus()},[t.focused]),oe.createElement("button",{ref:r,...s})}var pe;(function(n){n.Root="root",n.Chevron="chevron",n.Day="day",n.DayButton="day_button",n.CaptionLabel="caption_label",n.Dropdowns="dropdowns",n.Dropdown="dropdown",n.DropdownRoot="dropdown_root",n.Footer="footer",n.MonthGrid="month_grid",n.MonthCaption="month_caption",n.MonthsDropdown="months_dropdown",n.Month="month",n.Months="months",n.Nav="nav",n.NextMonthButton="button_next",n.PreviousMonthButton="button_previous",n.Week="week",n.Weeks="weeks",n.Weekday="weekday",n.Weekdays="weekdays",n.WeekNumber="week_number",n.WeekNumberHeader="week_number_header",n.YearsDropdown="years_dropdown"})(pe||(pe={}));var at;(function(n){n.disabled="disabled",n.hidden="hidden",n.outside="outside",n.focused="focused",n.today="today"})(at||(at={}));var On;(function(n){n.range_end="range_end",n.range_middle="range_middle",n.range_start="range_start",n.selected="selected"})(On||(On={}));var rn;(function(n){n.weeks_before_enter="weeks_before_enter",n.weeks_before_exit="weeks_before_exit",n.weeks_after_enter="weeks_after_enter",n.weeks_after_exit="weeks_after_exit",n.caption_after_enter="caption_after_enter",n.caption_after_exit="caption_after_exit",n.caption_before_enter="caption_before_enter",n.caption_before_exit="caption_before_exit"})(rn||(rn={}));function f$(n){const{options:e,className:t,components:s,classNames:r,...o}=n,a=[r[pe.Dropdown],t].join(" "),i=e?.find(({value:c})=>c===o.value);return oe.createElement("span",{"data-disabled":o.disabled,className:r[pe.DropdownRoot]},oe.createElement(s.Select,{className:a,...o},e?.map(({value:c,label:l,disabled:u})=>oe.createElement(s.Option,{key:c,value:c,disabled:u},l))),oe.createElement("span",{className:r[pe.CaptionLabel],"aria-hidden":!0},i?.label,oe.createElement(s.Chevron,{orientation:"down",size:18,className:r[pe.Chevron]})))}function m$(n){return oe.createElement("div",{...n})}function g$(n){return oe.createElement("div",{...n})}function y$(n){const{calendarMonth:e,displayIndex:t,...s}=n;return oe.createElement("div",{...s},n.children)}function b$(n){const{calendarMonth:e,displayIndex:t,...s}=n;return oe.createElement("div",{...s})}function x$(n){return oe.createElement("table",{...n})}function w$(n){return oe.createElement("div",{...n})}const wb=Q.createContext(void 0);function Zo(){const n=Q.useContext(wb);if(n===void 0)throw new Error("useDayPicker() must be used within a custom component.");return n}function v$(n){const{components:e}=Zo();return oe.createElement(e.Dropdown,{...n})}function k$(n){const{onPreviousClick:e,onNextClick:t,previousMonth:s,nextMonth:r,...o}=n,{components:a,classNames:i,labels:{labelPrevious:c,labelNext:l}}=Zo(),u=Q.useCallback(h=>{r&&t?.(h)},[r,t]),d=Q.useCallback(h=>{s&&e?.(h)},[s,e]);return oe.createElement("nav",{...o},oe.createElement(a.PreviousMonthButton,{type:"button",className:i[pe.PreviousMonthButton],tabIndex:s?void 0:-1,"aria-disabled":s?void 0:!0,"aria-label":c(s),onClick:d},oe.createElement(a.Chevron,{disabled:s?void 0:!0,className:i[pe.Chevron],orientation:"left"})),oe.createElement(a.NextMonthButton,{type:"button",className:i[pe.NextMonthButton],tabIndex:r?void 0:-1,"aria-disabled":r?void 0:!0,"aria-label":l(r),onClick:u},oe.createElement(a.Chevron,{disabled:r?void 0:!0,orientation:"right",className:i[pe.Chevron]})))}function C$(n){const{components:e}=Zo();return oe.createElement(e.Button,{...n})}function N$(n){return oe.createElement("option",{...n})}function $$(n){const{components:e}=Zo();return oe.createElement(e.Button,{...n})}function I$(n){const{rootRef:e,...t}=n;return oe.createElement("div",{...t,ref:e})}function S$(n){return oe.createElement("select",{...n})}function T$(n){const{week:e,...t}=n;return oe.createElement("tr",{...t})}function D$(n){return oe.createElement("th",{...n})}function E$(n){return oe.createElement("thead",{"aria-hidden":!0},oe.createElement("tr",{...n}))}function A$(n){const{week:e,...t}=n;return oe.createElement("th",{...t})}function R$(n){return oe.createElement("th",{...n})}function O$(n){return oe.createElement("tbody",{...n})}function F$(n){const{components:e}=Zo();return oe.createElement(e.Dropdown,{...n})}const _$=Object.freeze(Object.defineProperty({__proto__:null,Button:l$,CaptionLabel:u$,Chevron:d$,Day:h$,DayButton:p$,Dropdown:f$,DropdownNav:m$,Footer:g$,Month:y$,MonthCaption:b$,MonthGrid:x$,Months:w$,MonthsDropdown:v$,Nav:k$,NextMonthButton:C$,Option:N$,PreviousMonthButton:$$,Root:I$,Select:S$,Week:T$,WeekNumber:A$,WeekNumberHeader:R$,Weekday:D$,Weekdays:E$,Weeks:O$,YearsDropdown:F$},Symbol.toStringTag,{value:"Module"}));function ds(n,e,t=!1,s=ss){let{from:r,to:o}=n;const{differenceInCalendarDays:a,isSameDay:i}=s;return r&&o?(a(o,r)<0&&([r,o]=[o,r]),a(e,r)>=(t?1:0)&&a(o,e)>=(t?1:0)):!t&&o?i(o,e):!t&&r?i(r,e):!1}function vb(n){return!!(n&&typeof n=="object"&&"before"in n&&"after"in n)}function lh(n){return!!(n&&typeof n=="object"&&"from"in n)}function kb(n){return!!(n&&typeof n=="object"&&"after"in n)}function Cb(n){return!!(n&&typeof n=="object"&&"before"in n)}function Nb(n){return!!(n&&typeof n=="object"&&"dayOfWeek"in n)}function $b(n,e){return Array.isArray(n)&&n.every(e.isDate)}function hs(n,e,t=ss){const s=Array.isArray(e)?e:[e],{isSameDay:r,differenceInCalendarDays:o,isAfter:a}=t;return s.some(i=>{if(typeof i=="boolean")return i;if(t.isDate(i))return r(n,i);if($b(i,t))return i.includes(n);if(lh(i))return ds(i,n,!1,t);if(Nb(i))return Array.isArray(i.dayOfWeek)?i.dayOfWeek.includes(n.getDay()):i.dayOfWeek===n.getDay();if(vb(i)){const c=o(i.before,n),l=o(i.after,n),u=c>0,d=l<0;return a(i.before,i.after)?d&&u:u||d}return kb(i)?o(n,i.after)>0:Cb(i)?o(i.before,n)>0:typeof i=="function"?i(n):!1})}function P$(n,e,t,s,r){const{disabled:o,hidden:a,modifiers:i,showOutsideDays:c,broadcastCalendar:l,today:u}=e,{isSameDay:d,isSameMonth:h,startOfMonth:p,isBefore:f,endOfMonth:m,isAfter:g}=r,y=t&&p(t),b=s&&m(s),v={[at.focused]:[],[at.outside]:[],[at.disabled]:[],[at.hidden]:[],[at.today]:[]},x={};for(const w of n){const{date:N,displayMonth:C}=w,$=!!(C&&!h(N,C)),S=!!(y&&f(N,y)),T=!!(b&&g(N,b)),E=!!(o&&hs(N,o,r)),F=!!(a&&hs(N,a,r))||S||T||!l&&!c&&$||l&&c===!1&&$,O=d(N,u??r.today());$&&v.outside.push(w),E&&v.disabled.push(w),F&&v.hidden.push(w),O&&v.today.push(w),i&&Object.keys(i).forEach(L=>{const z=i?.[L];z&&hs(N,z,r)&&(x[L]?x[L].push(w):x[L]=[w])})}return w=>{const N={[at.focused]:!1,[at.disabled]:!1,[at.hidden]:!1,[at.outside]:!1,[at.today]:!1},C={};for(const $ in v){const S=v[$];N[$]=S.some(T=>T===w)}for(const $ in x)C[$]=x[$].some(S=>S===w);return{...N,...C}}}function L$(n,e,t={}){return Object.entries(n).filter(([,r])=>r===!0).reduce((r,[o])=>(t[o]?r.push(t[o]):e[at[o]]?r.push(e[at[o]]):e[On[o]]&&r.push(e[On[o]]),r),[e[pe.Day]])}function M$(n){return{..._$,...n}}function z$(n){const e={"data-mode":n.mode??void 0,"data-required":"required"in n?n.required:void 0,"data-multiple-months":n.numberOfMonths&&n.numberOfMonths>1||void 0,"data-week-numbers":n.showWeekNumber||void 0,"data-broadcast-calendar":n.broadcastCalendar||void 0,"data-nav-layout":n.navLayout||void 0};return Object.entries(n).forEach(([t,s])=>{t.startsWith("data-")&&(e[t]=s)}),e}function uh(){const n={};for(const e in pe)n[pe[e]]=`rdp-${pe[e]}`;for(const e in at)n[at[e]]=`rdp-${at[e]}`;for(const e in On)n[On[e]]=`rdp-${On[e]}`;for(const e in rn)n[rn[e]]=`rdp-${rn[e]}`;return n}function Ib(n,e,t){return(t??new cn(e)).formatMonthYear(n)}const B$=Ib;function W$(n,e,t){return(t??new cn(e)).format(n,"d")}function V$(n,e=ss){return e.format(n,"LLLL")}function U$(n,e,t){return(t??new cn(e)).format(n,"cccccc")}function G$(n,e=ss){return n<10?e.formatNumber(`0${n.toLocaleString()}`):e.formatNumber(`${n.toLocaleString()}`)}function j$(){return""}function Sb(n,e=ss){return e.format(n,"yyyy")}const H$=Sb,q$=Object.freeze(Object.defineProperty({__proto__:null,formatCaption:Ib,formatDay:W$,formatMonthCaption:B$,formatMonthDropdown:V$,formatWeekNumber:G$,formatWeekNumberHeader:j$,formatWeekdayName:U$,formatYearCaption:H$,formatYearDropdown:Sb},Symbol.toStringTag,{value:"Module"}));function K$(n){return n?.formatMonthCaption&&!n.formatCaption&&(n.formatCaption=n.formatMonthCaption),n?.formatYearCaption&&!n.formatYearDropdown&&(n.formatYearDropdown=n.formatYearCaption),{...q$,...n}}function X$(n,e,t,s,r){const{startOfMonth:o,startOfYear:a,endOfYear:i,eachMonthOfInterval:c,getMonth:l}=r;return c({start:a(n),end:i(n)}).map(h=>{const p=s.formatMonthDropdown(h,r),f=l(h),m=e&&h<o(e)||t&&h>o(t)||!1;return{value:f,label:p,disabled:m}})}function Y$(n,e={},t={}){let s={...e?.[pe.Day]};return Object.entries(n).filter(([,r])=>r===!0).forEach(([r])=>{s={...s,...t?.[r]}}),s}function J$(n,e,t){const s=n.today(),r=e?n.startOfISOWeek(s):n.startOfWeek(s),o=[];for(let a=0;a<7;a++){const i=n.addDays(r,a);o.push(i)}return o}function Z$(n,e,t,s,r=!1){if(!n||!e)return;const{startOfYear:o,endOfYear:a,eachYearOfInterval:i,getYear:c}=s,l=o(n),u=a(e),d=i({start:l,end:u});return r&&d.reverse(),d.map(h=>{const p=t.formatYearDropdown(h,s);return{value:c(h),label:p,disabled:!1}})}function Tb(n,e,t,s){let r=(s??new cn(t)).format(n,"PPPP");return e.today&&(r=`Today, ${r}`),e.selected&&(r=`${r}, selected`),r}const Q$=Tb;function Db(n,e,t){return(t??new cn(e)).formatMonthYear(n)}const eI=Db;function tI(n,e,t,s){let r=(s??new cn(t)).format(n,"PPPP");return e?.today&&(r=`Today, ${r}`),r}function nI(n){return"Choose the Month"}function sI(){return""}function rI(n){return"Go to the Next Month"}function oI(n){return"Go to the Previous Month"}function aI(n,e,t){return(t??new cn(e)).format(n,"cccc")}function iI(n,e){return`Week ${n}`}function cI(n){return"Week Number"}function lI(n){return"Choose the Year"}const uI=Object.freeze(Object.defineProperty({__proto__:null,labelCaption:eI,labelDay:Q$,labelDayButton:Tb,labelGrid:Db,labelGridcell:tI,labelMonthDropdown:nI,labelNav:sI,labelNext:rI,labelPrevious:oI,labelWeekNumber:iI,labelWeekNumberHeader:cI,labelWeekday:aI,labelYearDropdown:lI},Symbol.toStringTag,{value:"Module"})),Qo=n=>n instanceof HTMLElement?n:null,Pu=n=>[...n.querySelectorAll("[data-animated-month]")??[]],dI=n=>Qo(n.querySelector("[data-animated-month]")),Lu=n=>Qo(n.querySelector("[data-animated-caption]")),Mu=n=>Qo(n.querySelector("[data-animated-weeks]")),hI=n=>Qo(n.querySelector("[data-animated-nav]")),pI=n=>Qo(n.querySelector("[data-animated-weekdays]"));function fI(n,e,{classNames:t,months:s,focused:r,dateLib:o}){const a=Q.useRef(null),i=Q.useRef(s),c=Q.useRef(!1);Q.useLayoutEffect(()=>{const l=i.current;if(i.current=s,!e||!n.current||!(n.current instanceof HTMLElement)||s.length===0||l.length===0||s.length!==l.length)return;const u=o.isSameMonth(s[0].date,l[0].date),d=o.isAfter(s[0].date,l[0].date),h=d?t[rn.caption_after_enter]:t[rn.caption_before_enter],p=d?t[rn.weeks_after_enter]:t[rn.weeks_before_enter],f=a.current,m=n.current.cloneNode(!0);if(m instanceof HTMLElement?(Pu(m).forEach(v=>{if(!(v instanceof HTMLElement))return;const x=dI(v);x&&v.contains(x)&&v.removeChild(x);const w=Lu(v);w&&w.classList.remove(h);const N=Mu(v);N&&N.classList.remove(p)}),a.current=m):a.current=null,c.current||u||r)return;const g=f instanceof HTMLElement?Pu(f):[],y=Pu(n.current);if(y?.every(b=>b instanceof HTMLElement)&&g&&g.every(b=>b instanceof HTMLElement)){c.current=!0,n.current.style.isolation="isolate";const b=hI(n.current);b&&(b.style.zIndex="1"),y.forEach((v,x)=>{const w=g[x];if(!w)return;v.style.position="relative",v.style.overflow="hidden";const N=Lu(v);N&&N.classList.add(h);const C=Mu(v);C&&C.classList.add(p);const $=()=>{c.current=!1,n.current&&(n.current.style.isolation=""),b&&(b.style.zIndex=""),N&&N.classList.remove(h),C&&C.classList.remove(p),v.style.position="",v.style.overflow="",v.contains(w)&&v.removeChild(w)};w.style.pointerEvents="none",w.style.position="absolute",w.style.overflow="hidden",w.setAttribute("aria-hidden","true");const S=pI(w);S&&(S.style.opacity="0");const T=Lu(w);T&&(T.classList.add(d?t[rn.caption_before_exit]:t[rn.caption_after_exit]),T.addEventListener("animationend",$));const E=Mu(w);E&&E.classList.add(d?t[rn.weeks_before_exit]:t[rn.weeks_after_exit]),v.insertBefore(w,v.firstChild)})}})}function mI(n,e,t,s){const r=n[0],o=n[n.length-1],{ISOWeek:a,fixedWeeks:i,broadcastCalendar:c}=t??{},{addDays:l,differenceInCalendarDays:u,differenceInCalendarMonths:d,endOfBroadcastWeek:h,endOfISOWeek:p,endOfMonth:f,endOfWeek:m,isAfter:g,startOfBroadcastWeek:y,startOfISOWeek:b,startOfWeek:v}=s,x=c?y(r,s):a?b(r):v(r),w=c?h(o):a?p(f(o)):m(f(o)),N=u(w,x),C=d(o,r)+1,$=[];for(let E=0;E<=N;E++){const F=l(x,E);if(e&&g(F,e))break;$.push(F)}const T=(c?35:42)*C;if(i&&$.length<T){const E=T-$.length;for(let F=0;F<E;F++){const O=l($[$.length-1],1);$.push(O)}}return $}function gI(n){const e=[];return n.reduce((t,s)=>{const r=s.weeks.reduce((o,a)=>o.concat(a.days.slice()),e.slice());return t.concat(r.slice())},e.slice())}function yI(n,e,t,s){const{numberOfMonths:r=1}=t,o=[];for(let a=0;a<r;a++){const i=s.addMonths(n,a);if(e&&i>e)break;o.push(i)}return o}function xm(n,e,t,s){const{month:r,defaultMonth:o,today:a=s.today(),numberOfMonths:i=1}=n;let c=r||o||a;const{differenceInCalendarMonths:l,addMonths:u,startOfMonth:d}=s;if(t&&l(t,c)<i-1){const h=-1*(i-1);c=u(t,h)}return e&&l(c,e)<0&&(c=e),d(c)}function bI(n,e,t,s){const{addDays:r,endOfBroadcastWeek:o,endOfISOWeek:a,endOfMonth:i,endOfWeek:c,getISOWeek:l,getWeek:u,startOfBroadcastWeek:d,startOfISOWeek:h,startOfWeek:p}=s,f=n.reduce((m,g)=>{const y=t.broadcastCalendar?d(g,s):t.ISOWeek?h(g):p(g),b=t.broadcastCalendar?o(g):t.ISOWeek?a(i(g)):c(i(g)),v=e.filter(C=>C>=y&&C<=b),x=t.broadcastCalendar?35:42;if(t.fixedWeeks&&v.length<x){const C=e.filter($=>{const S=x-v.length;return $>b&&$<=r(b,S)});v.push(...C)}const w=v.reduce((C,$)=>{const S=t.ISOWeek?l($):u($),T=C.find(F=>F.weekNumber===S),E=new xb($,g,s);return T?T.days.push(E):C.push(new c$(S,[E])),C},[]),N=new i$(g,w);return m.push(N),m},[]);return t.reverseMonths?f.reverse():f}function xI(n,e){let{startMonth:t,endMonth:s}=n;const{startOfYear:r,startOfDay:o,startOfMonth:a,endOfMonth:i,addYears:c,endOfYear:l,newDate:u,today:d}=e,{fromYear:h,toYear:p,fromMonth:f,toMonth:m}=n;!t&&f&&(t=f),!t&&h&&(t=e.newDate(h,0,1)),!s&&m&&(s=m),!s&&p&&(s=u(p,11,31));const g=n.captionLayout==="dropdown"||n.captionLayout==="dropdown-years";return t?t=a(t):h?t=u(h,0,1):!t&&g&&(t=r(c(n.today??d(),-100))),s?s=i(s):p?s=u(p,11,31):!s&&g&&(s=l(n.today??d())),[t&&o(t),s&&o(s)]}function wI(n,e,t,s){if(t.disableNavigation)return;const{pagedNavigation:r,numberOfMonths:o=1}=t,{startOfMonth:a,addMonths:i,differenceInCalendarMonths:c}=s,l=r?o:1,u=a(n);if(!e)return i(u,l);if(!(c(e,n)<o))return i(u,l)}function vI(n,e,t,s){if(t.disableNavigation)return;const{pagedNavigation:r,numberOfMonths:o}=t,{startOfMonth:a,addMonths:i,differenceInCalendarMonths:c}=s,l=r?o??1:1,u=a(n);if(!e)return i(u,-l);if(!(c(u,e)<=0))return i(u,-l)}function kI(n){const e=[];return n.reduce((t,s)=>t.concat(s.weeks.slice()),e.slice())}function Vc(n,e){const[t,s]=Q.useState(n);return[e===void 0?t:e,s]}function CI(n,e){const[t,s]=xI(n,e),{startOfMonth:r,endOfMonth:o}=e,a=xm(n,t,s,e),[i,c]=Vc(a,n.month?a:void 0);Q.useEffect(()=>{const N=xm(n,t,s,e);c(N)},[n.timeZone]);const l=yI(i,s,n,e),u=mI(l,n.endMonth?o(n.endMonth):void 0,n,e),d=bI(l,u,n,e),h=kI(d),p=gI(d),f=vI(i,t,n,e),m=wI(i,s,n,e),{disableNavigation:g,onMonthChange:y}=n,b=N=>h.some(C=>C.days.some($=>$.isEqualTo(N))),v=N=>{if(g)return;let C=r(N);t&&C<r(t)&&(C=r(t)),s&&C>r(s)&&(C=r(s)),c(C),y?.(C)};return{months:d,weeks:h,days:p,navStart:t,navEnd:s,previousMonth:f,nextMonth:m,goToMonth:v,goToDay:N=>{b(N)||v(N.date)}}}var Hn;(function(n){n[n.Today=0]="Today",n[n.Selected=1]="Selected",n[n.LastFocused=2]="LastFocused",n[n.FocusedModifier=3]="FocusedModifier"})(Hn||(Hn={}));function wm(n){return!n[at.disabled]&&!n[at.hidden]&&!n[at.outside]}function NI(n,e,t,s){let r,o=-1;for(const a of n){const i=e(a);wm(i)&&(i[at.focused]&&o<Hn.FocusedModifier?(r=a,o=Hn.FocusedModifier):s?.isEqualTo(a)&&o<Hn.LastFocused?(r=a,o=Hn.LastFocused):t(a.date)&&o<Hn.Selected?(r=a,o=Hn.Selected):i[at.today]&&o<Hn.Today&&(r=a,o=Hn.Today))}return r||(r=n.find(a=>wm(e(a)))),r}function $I(n,e,t,s,r,o,a){const{ISOWeek:i,broadcastCalendar:c}=o,{addDays:l,addMonths:u,addWeeks:d,addYears:h,endOfBroadcastWeek:p,endOfISOWeek:f,endOfWeek:m,max:g,min:y,startOfBroadcastWeek:b,startOfISOWeek:v,startOfWeek:x}=a;let N={day:l,week:d,month:u,year:h,startOfWeek:C=>c?b(C,a):i?v(C):x(C),endOfWeek:C=>c?p(C):i?f(C):m(C)}[n](t,e==="after"?1:-1);return e==="before"&&s?N=g([s,N]):e==="after"&&r&&(N=y([r,N])),N}function Eb(n,e,t,s,r,o,a,i=0){if(i>365)return;const c=$I(n,e,t.date,s,r,o,a),l=!!(o.disabled&&hs(c,o.disabled,a)),u=!!(o.hidden&&hs(c,o.hidden,a)),d=c,h=new xb(c,d,a);return!l&&!u?h:Eb(n,e,h,s,r,o,a,i+1)}function II(n,e,t,s,r){const{autoFocus:o}=n,[a,i]=Q.useState(),c=NI(e.days,t,s||(()=>!1),a),[l,u]=Q.useState(o?c:void 0);return{isFocusTarget:m=>!!c?.isEqualTo(m),setFocused:u,focused:l,blur:()=>{i(l),u(void 0)},moveFocus:(m,g)=>{if(!l)return;const y=Eb(m,g,l,e.navStart,e.navEnd,n,r);y&&(n.disableNavigation&&!e.days.some(v=>v.isEqualTo(y))||(e.goToDay(y),u(y)))}}}function SI(n,e){const{selected:t,required:s,onSelect:r}=n,[o,a]=Vc(t,r?t:void 0),i=r?t:o,{isSameDay:c}=e,l=p=>i?.some(f=>c(f,p))??!1,{min:u,max:d}=n;return{selected:i,select:(p,f,m)=>{let g=[...i??[]];if(l(p)){if(i?.length===u||s&&i?.length===1)return;g=i?.filter(y=>!c(y,p))}else i?.length===d?g=[p]:g=[...g,p];return r||a(g),r?.(g,p,f,m),g},isSelected:l}}function TI(n,e,t=0,s=0,r=!1,o=ss){const{from:a,to:i}=e||{},{isSameDay:c,isAfter:l,isBefore:u}=o;let d;if(!a&&!i)d={from:n,to:t>0?void 0:n};else if(a&&!i)c(a,n)?t===0?d={from:a,to:n}:r?d={from:a,to:void 0}:d=void 0:u(n,a)?d={from:n,to:a}:d={from:a,to:n};else if(a&&i)if(c(a,n)&&c(i,n))r?d={from:a,to:i}:d=void 0;else if(c(a,n))d={from:a,to:t>0?void 0:n};else if(c(i,n))d={from:n,to:t>0?void 0:n};else if(u(n,a))d={from:n,to:i};else if(l(n,a))d={from:a,to:n};else if(l(n,i))d={from:a,to:n};else throw new Error("Invalid range");if(d?.from&&d?.to){const h=o.differenceInCalendarDays(d.to,d.from);s>0&&h>s?d={from:n,to:void 0}:t>1&&h<t&&(d={from:n,to:void 0})}return d}function DI(n,e,t=ss){const s=Array.isArray(e)?e:[e];let r=n.from;const o=t.differenceInCalendarDays(n.to,n.from),a=Math.min(o,6);for(let i=0;i<=a;i++){if(s.includes(r.getDay()))return!0;r=t.addDays(r,1)}return!1}function vm(n,e,t=ss){return ds(n,e.from,!1,t)||ds(n,e.to,!1,t)||ds(e,n.from,!1,t)||ds(e,n.to,!1,t)}function EI(n,e,t=ss){const s=Array.isArray(e)?e:[e];if(s.filter(i=>typeof i!="function").some(i=>typeof i=="boolean"?i:t.isDate(i)?ds(n,i,!1,t):$b(i,t)?i.some(c=>ds(n,c,!1,t)):lh(i)?i.from&&i.to?vm(n,{from:i.from,to:i.to},t):!1:Nb(i)?DI(n,i.dayOfWeek,t):vb(i)?t.isAfter(i.before,i.after)?vm(n,{from:t.addDays(i.after,1),to:t.addDays(i.before,-1)},t):hs(n.from,i,t)||hs(n.to,i,t):kb(i)||Cb(i)?hs(n.from,i,t)||hs(n.to,i,t):!1))return!0;const a=s.filter(i=>typeof i=="function");if(a.length){let i=n.from;const c=t.differenceInCalendarDays(n.to,n.from);for(let l=0;l<=c;l++){if(a.some(u=>u(i)))return!0;i=t.addDays(i,1)}}return!1}function AI(n,e){const{disabled:t,excludeDisabled:s,selected:r,required:o,onSelect:a}=n,[i,c]=Vc(r,a?r:void 0),l=a?r:i;return{selected:l,select:(h,p,f)=>{const{min:m,max:g}=n,y=h?TI(h,l,m,g,o,e):void 0;return s&&t&&y?.from&&y.to&&EI({from:y.from,to:y.to},t,e)&&(y.from=h,y.to=void 0),a||c(y),a?.(y,h,p,f),y},isSelected:h=>l&&ds(l,h,!1,e)}}function RI(n,e){const{selected:t,required:s,onSelect:r}=n,[o,a]=Vc(t,r?t:void 0),i=r?t:o,{isSameDay:c}=e;return{selected:i,select:(d,h,p)=>{let f=d;return!s&&i&&i&&c(d,i)&&(f=void 0),r||a(f),r?.(f,d,h,p),f},isSelected:d=>i?c(i,d):!1}}function OI(n,e){const t=RI(n,e),s=SI(n,e),r=AI(n,e);switch(n.mode){case"single":return t;case"multiple":return s;case"range":return r;default:return}}function FI(n){let e=n;e.timeZone&&(e={...n},e.today&&(e.today=new Wt(e.today,e.timeZone)),e.month&&(e.month=new Wt(e.month,e.timeZone)),e.defaultMonth&&(e.defaultMonth=new Wt(e.defaultMonth,e.timeZone)),e.startMonth&&(e.startMonth=new Wt(e.startMonth,e.timeZone)),e.endMonth&&(e.endMonth=new Wt(e.endMonth,e.timeZone)),e.mode==="single"&&e.selected?e.selected=new Wt(e.selected,e.timeZone):e.mode==="multiple"&&e.selected?e.selected=e.selected?.map(De=>new Wt(De,e.timeZone)):e.mode==="range"&&e.selected&&(e.selected={from:e.selected.from?new Wt(e.selected.from,e.timeZone):void 0,to:e.selected.to?new Wt(e.selected.to,e.timeZone):void 0}));const{components:t,formatters:s,labels:r,dateLib:o,locale:a,classNames:i}=Q.useMemo(()=>{const De={...ch,...e.locale};return{dateLib:new cn({locale:De,weekStartsOn:e.broadcastCalendar?1:e.weekStartsOn,firstWeekContainsDate:e.firstWeekContainsDate,useAdditionalWeekYearTokens:e.useAdditionalWeekYearTokens,useAdditionalDayOfYearTokens:e.useAdditionalDayOfYearTokens,timeZone:e.timeZone,numerals:e.numerals},e.dateLib),components:M$(e.components),formatters:K$(e.formatters),labels:{...uI,...e.labels},locale:De,classNames:{...uh(),...e.classNames}}},[e.locale,e.broadcastCalendar,e.weekStartsOn,e.firstWeekContainsDate,e.useAdditionalWeekYearTokens,e.useAdditionalDayOfYearTokens,e.timeZone,e.numerals,e.dateLib,e.components,e.formatters,e.labels,e.classNames]),{captionLayout:c,mode:l,navLayout:u,numberOfMonths:d=1,onDayBlur:h,onDayClick:p,onDayFocus:f,onDayKeyDown:m,onDayMouseEnter:g,onDayMouseLeave:y,onNextClick:b,onPrevClick:v,showWeekNumber:x,styles:w}=e,{formatCaption:N,formatDay:C,formatMonthDropdown:$,formatWeekNumber:S,formatWeekNumberHeader:T,formatWeekdayName:E,formatYearDropdown:F}=s,O=CI(e,o),{days:L,months:z,navStart:M,navEnd:K,previousMonth:U,nextMonth:H,goToMonth:X}=O,J=P$(L,e,M,K,o),{isSelected:j,select:ee,selected:te}=OI(e,o)??{},{blur:ne,focused:re,isFocusTarget:ie,moveFocus:he,setFocused:ue}=II(e,O,J,j??(()=>!1),o),{labelDayButton:ye,labelGridcell:$e,labelGrid:Oe,labelMonthDropdown:Je,labelNav:ze,labelPrevious:Be,labelNext:We,labelWeekday:Ge,labelWeekNumber:st,labelWeekNumberHeader:Tn,labelYearDropdown:gt}=r,pn=Q.useMemo(()=>J$(o,e.ISOWeek),[o,e.ISOWeek]),Bt=l!==void 0||p!==void 0,Dn=Q.useCallback(()=>{U&&(X(U),v?.(U))},[U,X,v]),jt=Q.useCallback(()=>{H&&(X(H),b?.(H))},[X,H,b]),En=Q.useCallback((De,rt)=>we=>{we.preventDefault(),we.stopPropagation(),ue(De),ee?.(De.date,rt,we),p?.(De.date,rt,we)},[ee,p,ue]),Vn=Q.useCallback((De,rt)=>we=>{ue(De),f?.(De.date,rt,we)},[f,ue]),Un=Q.useCallback((De,rt)=>we=>{ne(),h?.(De.date,rt,we)},[ne,h]),Gn=Q.useCallback((De,rt)=>we=>{const Ze={ArrowLeft:[we.shiftKey?"month":"day",e.dir==="rtl"?"after":"before"],ArrowRight:[we.shiftKey?"month":"day",e.dir==="rtl"?"before":"after"],ArrowDown:[we.shiftKey?"year":"week","after"],ArrowUp:[we.shiftKey?"year":"week","before"],PageUp:[we.shiftKey?"year":"month","before"],PageDown:[we.shiftKey?"year":"month","after"],Home:["startOfWeek","before"],End:["endOfWeek","after"]};if(Ze[we.key]){we.preventDefault(),we.stopPropagation();const[sn,Pe]=Ze[we.key];he(sn,Pe)}m?.(De.date,rt,we)},[he,m,e.dir]),Hs=Q.useCallback((De,rt)=>we=>{g?.(De.date,rt,we)},[g]),vo=Q.useCallback((De,rt)=>we=>{y?.(De.date,rt,we)},[y]),ko=Q.useCallback(De=>rt=>{const we=Number(rt.target.value),Ze=o.setMonth(o.startOfMonth(De),we);X(Ze)},[o,X]),Du=Q.useCallback(De=>rt=>{const we=Number(rt.target.value),Ze=o.setYear(o.startOfMonth(De),we);X(Ze)},[o,X]),{className:Tr,style:Eu}=Q.useMemo(()=>({className:[i[pe.Root],e.className].filter(Boolean).join(" "),style:{...w?.[pe.Root],...e.style}}),[i,e.className,e.style,w]),Au=z$(e),tm=Q.useRef(null);fI(tm,!!e.animate,{classNames:i,months:z,focused:re,dateLib:o});const dk={dayPickerProps:e,selected:te,select:ee,isSelected:j,months:z,nextMonth:H,previousMonth:U,goToMonth:X,getModifiers:J,components:t,classNames:i,styles:w,labels:r,formatters:s};return oe.createElement(wb.Provider,{value:dk},oe.createElement(t.Root,{rootRef:e.animate?tm:void 0,className:Tr,style:Eu,dir:e.dir,id:e.id,lang:e.lang,nonce:e.nonce,title:e.title,role:e.role,"aria-label":e["aria-label"],"aria-labelledby":e["aria-labelledby"],...Au},oe.createElement(t.Months,{className:i[pe.Months],style:w?.[pe.Months]},!e.hideNavigation&&!u&&oe.createElement(t.Nav,{"data-animated-nav":e.animate?"true":void 0,className:i[pe.Nav],style:w?.[pe.Nav],"aria-label":ze(),onPreviousClick:Dn,onNextClick:jt,previousMonth:U,nextMonth:H}),z.map((De,rt)=>oe.createElement(t.Month,{"data-animated-month":e.animate?"true":void 0,className:i[pe.Month],style:w?.[pe.Month],key:rt,displayIndex:rt,calendarMonth:De},u==="around"&&!e.hideNavigation&&rt===0&&oe.createElement(t.PreviousMonthButton,{type:"button",className:i[pe.PreviousMonthButton],tabIndex:U?void 0:-1,"aria-disabled":U?void 0:!0,"aria-label":Be(U),onClick:Dn,"data-animated-button":e.animate?"true":void 0},oe.createElement(t.Chevron,{disabled:U?void 0:!0,className:i[pe.Chevron],orientation:e.dir==="rtl"?"right":"left"})),oe.createElement(t.MonthCaption,{"data-animated-caption":e.animate?"true":void 0,className:i[pe.MonthCaption],style:w?.[pe.MonthCaption],calendarMonth:De,displayIndex:rt},c?.startsWith("dropdown")?oe.createElement(t.DropdownNav,{className:i[pe.Dropdowns],style:w?.[pe.Dropdowns]},(()=>{const we=c==="dropdown"||c==="dropdown-months"?oe.createElement(t.MonthsDropdown,{key:"month",className:i[pe.MonthsDropdown],"aria-label":Je(),classNames:i,components:t,disabled:!!e.disableNavigation,onChange:ko(De.date),options:X$(De.date,M,K,s,o),style:w?.[pe.Dropdown],value:o.getMonth(De.date)}):oe.createElement("span",{key:"month"},$(De.date,o)),Ze=c==="dropdown"||c==="dropdown-years"?oe.createElement(t.YearsDropdown,{key:"year",className:i[pe.YearsDropdown],"aria-label":gt(o.options),classNames:i,components:t,disabled:!!e.disableNavigation,onChange:Du(De.date),options:Z$(M,K,s,o,!!e.reverseYears),style:w?.[pe.Dropdown],value:o.getYear(De.date)}):oe.createElement("span",{key:"year"},F(De.date,o));return o.getMonthYearOrder()==="year-first"?[Ze,we]:[we,Ze]})(),oe.createElement("span",{role:"status","aria-live":"polite",style:{border:0,clip:"rect(0 0 0 0)",height:"1px",margin:"-1px",overflow:"hidden",padding:0,position:"absolute",width:"1px",whiteSpace:"nowrap",wordWrap:"normal"}},N(De.date,o.options,o))):oe.createElement(t.CaptionLabel,{className:i[pe.CaptionLabel],role:"status","aria-live":"polite"},N(De.date,o.options,o))),u==="around"&&!e.hideNavigation&&rt===d-1&&oe.createElement(t.NextMonthButton,{type:"button",className:i[pe.NextMonthButton],tabIndex:H?void 0:-1,"aria-disabled":H?void 0:!0,"aria-label":We(H),onClick:jt,"data-animated-button":e.animate?"true":void 0},oe.createElement(t.Chevron,{disabled:H?void 0:!0,className:i[pe.Chevron],orientation:e.dir==="rtl"?"left":"right"})),rt===d-1&&u==="after"&&!e.hideNavigation&&oe.createElement(t.Nav,{"data-animated-nav":e.animate?"true":void 0,className:i[pe.Nav],style:w?.[pe.Nav],"aria-label":ze(),onPreviousClick:Dn,onNextClick:jt,previousMonth:U,nextMonth:H}),oe.createElement(t.MonthGrid,{role:"grid","aria-multiselectable":l==="multiple"||l==="range","aria-label":Oe(De.date,o.options,o)||void 0,className:i[pe.MonthGrid],style:w?.[pe.MonthGrid]},!e.hideWeekdays&&oe.createElement(t.Weekdays,{"data-animated-weekdays":e.animate?"true":void 0,className:i[pe.Weekdays],style:w?.[pe.Weekdays]},x&&oe.createElement(t.WeekNumberHeader,{"aria-label":Tn(o.options),className:i[pe.WeekNumberHeader],style:w?.[pe.WeekNumberHeader],scope:"col"},T()),pn.map(we=>oe.createElement(t.Weekday,{"aria-label":Ge(we,o.options,o),className:i[pe.Weekday],key:String(we),style:w?.[pe.Weekday],scope:"col"},E(we,o.options,o)))),oe.createElement(t.Weeks,{"data-animated-weeks":e.animate?"true":void 0,className:i[pe.Weeks],style:w?.[pe.Weeks]},De.weeks.map(we=>oe.createElement(t.Week,{className:i[pe.Week],key:we.weekNumber,style:w?.[pe.Week],week:we},x&&oe.createElement(t.WeekNumber,{week:we,style:w?.[pe.WeekNumber],"aria-label":st(we.weekNumber,{locale:a}),className:i[pe.WeekNumber],scope:"row",role:"rowheader"},S(we.weekNumber,o)),we.days.map(Ze=>{const{date:sn}=Ze,Pe=J(Ze);if(Pe[at.focused]=!Pe.hidden&&!!re?.isEqualTo(Ze),Pe[On.selected]=j?.(sn)||Pe.selected,lh(te)){const{from:Ru,to:Ou}=te;Pe[On.range_start]=!!(Ru&&Ou&&o.isSameDay(sn,Ru)),Pe[On.range_end]=!!(Ru&&Ou&&o.isSameDay(sn,Ou)),Pe[On.range_middle]=ds(te,sn,!0,o)}const hk=Y$(Pe,w,e.modifiersStyles),pk=L$(Pe,i,e.modifiersClassNames),fk=!Bt&&!Pe.hidden?$e(sn,Pe,o.options,o):void 0;return oe.createElement(t.Day,{key:`${o.format(sn,"yyyy-MM-dd")}_${o.format(Ze.displayMonth,"yyyy-MM")}`,day:Ze,modifiers:Pe,className:pk.join(" "),style:hk,role:"gridcell","aria-selected":Pe.selected||void 0,"aria-label":fk,"data-day":o.format(sn,"yyyy-MM-dd"),"data-month":Ze.outside?o.format(sn,"yyyy-MM"):void 0,"data-selected":Pe.selected||void 0,"data-disabled":Pe.disabled||void 0,"data-hidden":Pe.hidden||void 0,"data-outside":Ze.outside||void 0,"data-focused":Pe.focused||void 0,"data-today":Pe.today||void 0},!Pe.hidden&&Bt?oe.createElement(t.DayButton,{className:i[pe.DayButton],style:w?.[pe.DayButton],type:"button",day:Ze,modifiers:Pe,disabled:Pe.disabled||void 0,tabIndex:ie(Ze)?0:-1,"aria-label":ye(sn,Pe,o.options,o),onClick:En(Ze,Pe),onBlur:Un(Ze,Pe),onFocus:Vn(Ze,Pe),onKeyDown:Gn(Ze,Pe),onMouseEnter:Hs(Ze,Pe),onMouseLeave:vo(Ze,Pe)},C(sn,o.options,o)):!Pe.hidden&&C(Ze.date,o.options,o))})))))))),e.footer&&oe.createElement(t.Footer,{className:i[pe.Footer],style:w?.[pe.Footer],role:"status","aria-live":"polite"},e.footer)))}function _I({className:n,classNames:e,showOutsideDays:t=!0,captionLayout:s="label",buttonVariant:r="ghost",formatters:o,components:a,...i}){const c=uh();return W.jsx(FI,{showOutsideDays:t,className:Fe("bg-background group/calendar p-3 [--cell-size:--spacing(8)] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent",String.raw`rtl:**:[.rdp-button\_next>svg]:rotate-180`,String.raw`rtl:**:[.rdp-button\_previous>svg]:rotate-180`,n),captionLayout:s,formatters:{formatMonthDropdown:l=>l.toLocaleString("default",{month:"short"}),...o},classNames:{root:Fe("w-fit",c.root),months:Fe("flex gap-4 flex-col md:flex-row relative",c.months),month:Fe("flex flex-col w-full gap-4",c.month),nav:Fe("flex items-center gap-1 w-full absolute top-0 inset-x-0 justify-between",c.nav),button_previous:Fe(nm({variant:r}),"size-(--cell-size) aria-disabled:opacity-50 p-0 select-none",c.button_previous),button_next:Fe(nm({variant:r}),"size-(--cell-size) aria-disabled:opacity-50 p-0 select-none",c.button_next),month_caption:Fe("flex items-center justify-center h-(--cell-size) w-full px-(--cell-size)",c.month_caption),dropdowns:Fe("w-full flex items-center text-sm font-medium justify-center h-(--cell-size) gap-1.5",c.dropdowns),dropdown_root:Fe("relative has-focus:border-ring border border-input shadow-xs has-focus:ring-ring/50 has-focus:ring-[3px] rounded-md",c.dropdown_root),dropdown:Fe("absolute bg-popover inset-0 opacity-0",c.dropdown),caption_label:Fe("select-none font-medium",s==="label"?"text-sm":"rounded-md pl-2 pr-1 flex items-center gap-1 text-sm h-8 [&>svg]:text-muted-foreground [&>svg]:size-3.5",c.caption_label),table:"w-full border-collapse",weekdays:Fe("flex",c.weekdays),weekday:Fe("text-muted-foreground rounded-md flex-1 font-normal text-[0.8rem] select-none",c.weekday),week:Fe("flex w-full mt-2",c.week),week_number_header:Fe("select-none w-(--cell-size)",c.week_number_header),week_number:Fe("text-[0.8rem] select-none text-muted-foreground",c.week_number),day:Fe("relative w-full h-full p-0 text-center [&:first-child[data-selected=true]_button]:rounded-l-md [&:last-child[data-selected=true]_button]:rounded-r-md group/day aspect-square select-none",c.day),range_start:Fe("rounded-l-md bg-accent",c.range_start),range_middle:Fe("rounded-none",c.range_middle),range_end:Fe("rounded-r-md bg-accent",c.range_end),today:Fe("bg-accent text-accent-foreground rounded-md data-[selected=true]:rounded-none",c.today),outside:Fe("text-muted-foreground aria-selected:text-muted-foreground",c.outside),disabled:Fe("text-muted-foreground opacity-50",c.disabled),hidden:Fe("invisible",c.hidden),...e},components:{Root:({className:l,rootRef:u,...d})=>W.jsx("div",{"data-slot":"calendar",ref:u,className:Fe(l),...d}),Chevron:({className:l,orientation:u,...d})=>u==="left"?W.jsx(Hk,{className:Fe("size-4",l),...d}):u==="right"?W.jsx(zk,{className:Fe("size-4",l),...d}):W.jsx(Ey,{className:Fe("size-4",l),...d}),DayButton:PI,WeekNumber:({children:l,...u})=>W.jsx("td",{...u,children:W.jsx("div",{className:"flex size-(--cell-size) items-center justify-center text-center",children:l})}),...a},...i})}function PI({className:n,day:e,modifiers:t,...s}){const r=uh(),o=Q.useRef(null);return Q.useEffect(()=>{t.focused&&o.current?.focus()},[t.focused]),W.jsx(Fr,{ref:o,variant:"ghost",size:"icon","data-day":e.date.toLocaleDateString(),"data-selected-single":t.selected&&!t.range_start&&!t.range_end&&!t.range_middle,"data-range-start":t.range_start,"data-range-end":t.range_end,"data-range-middle":t.range_middle,className:Fe("data-[selected-single=true]:bg-primary data-[selected-single=true]:text-primary-foreground data-[range-middle=true]:bg-accent data-[range-middle=true]:text-accent-foreground data-[range-start=true]:bg-primary data-[range-start=true]:text-primary-foreground data-[range-end=true]:bg-primary data-[range-end=true]:text-primary-foreground group-data-[focused=true]/day:border-ring group-data-[focused=true]/day:ring-ring/50 dark:hover:text-accent-foreground flex aspect-square size-auto w-full min-w-(--cell-size) flex-col gap-1 leading-none font-normal group-data-[focused=true]/day:relative group-data-[focused=true]/day:z-10 group-data-[focused=true]/day:ring-[3px] data-[range-end=true]:rounded-md data-[range-end=true]:rounded-r-md data-[range-middle=true]:rounded-none data-[range-start=true]:rounded-md data-[range-start=true]:rounded-l-md [&>span]:text-xs [&>span]:opacity-70",r.day,n),...s})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI=1e-7,MI=1e-4;class Ab{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class dh{refCount(e){return fn("refCount")}incRef(e){return fn("incRef")}timerAvailable(){return!0}time(e){return fn("time")}read(e){return fn("read")}readSync(e){return fn("readSync")}numDataIds(){return fn("numDataIds")}disposeData(e,t){return fn("disposeData")}write(e,t,s){return fn("write")}move(e,t,s,r,o){return fn("move")}memory(){return fn("memory")}floatPrecision(){return fn("floatPrecision")}epsilon(){return this.floatPrecision()===32?LI:MI}dispose(){return fn("dispose")}}function fn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(n){let e=n.length,t=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,t=n[e],n[e]=n[s],n[s]=t}function cr(n,e,t){return Math.max(n,Math.min(e,t))}function Rb(n){return n%2===0?n:n+1}function BI(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function I(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Uc(n,e,t=""){I(Le(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function hh(n){I(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function jr(n,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(n)||es(n)&&!t)for(let s=0;s<n.length;++s)jr(n[s],e,t);else e.push(n);return e}function q(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Le(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function It(n){return n%1===0}function ud(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Mr(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function km(n,e=s=>0,t){return new Promise((s,r)=>{let o=0;const a=()=>{if(n()){s();return}o++;const i=e(o);setTimeout(a,i)};a()})}function Ob(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function Ie(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),I(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),I(n.every(s=>It(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function br(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:Ie(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),s.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),s.push(i))}return{newShape:t,keptDims:s}}function Ft(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function so(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function WI(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function VI(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Fb(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function es(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function dd(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function UI(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function ea(n){return typeof n=="string"||n instanceof String}function GI(n){return typeof n=="boolean"}function hd(n){return typeof n=="number"}function ta(n){return Array.isArray(n)?ta(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":hd(n)?"float32":ea(n)?"string":GI(n)?"bool":"float32"}function pd(n){return!!(n&&n.constructor&&n.call&&n.apply)}function fd(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function fe(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function _b(n,e,t){const s=new Array;if(e.length===1){const r=e[0];for(let o=0;o<r;o++)s[o]=t[n+o]}else{const r=e[0],o=e.slice(1),a=o.reduce((i,c)=>i*c);for(let i=0;i<r;i++)s[i]=_b(n+i*a,o,t)}return s}function kn(n,e){if(n.length===0)return e[0];const t=n.reduce((s,r)=>s*r);if(t===0)return[];if(t!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}.`);return _b(0,n,e)}function Pb(n,e){const t=Mt(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Mt(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Lb(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return kn(n,new Float32Array(t));if(e==="int32")return kn(n,new Int32Array(t));if(e==="bool")return kn(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Mb(n){n.forEach(e=>{I(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Zn(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function na(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function Mo(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cm="tfjsflags";class jI{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Mo(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=HI(this.global.location.search);Cm in e&&e[Cm].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=KI(r,o)})}}function HI(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(qI(e,s[0],s[1]),s.join("="))),e}function qI(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function KI(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function Y(){return zb}let zb=null;function XI(n){zb=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zu;function Bb(){if(zu==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");zu=n}return zu}function YI(){const n=Bb();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function ph(n,e){const t=YI();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Gc="Abs",sa="Acos",ra="Acosh",ro="Add",jc="AddN",fh="All",mh="Any",Hc="ArgMax",qc="ArgMin",oa="Asin",aa="Asinh",ia="Atan",ca="Atanh",la="Atan2",Kc="AvgPool",gh="AvgPoolGrad",Xc="AvgPool3D",yh="AvgPool3DGrad",Yc="BatchMatMul",Jc="BatchToSpaceND",bh="Bincount",JI="BroadcastTo",ua="Cast",da="Ceil",ha="ClipByValue",xh="Complex",Zc="ComplexAbs",Qc="Concat",el="Conv2D",wh="Conv2DBackpropFilter",tl="Conv2DBackpropInput",nl="Conv3D",vh="Conv3DBackpropFilterV2",kh="Conv3DBackpropInputV2",pa="Cos",fa="Cosh",sl="Cumsum",Ch="CropAndResize",Nh="DenseBincount",$h="DepthToSpace",rl="DepthwiseConv2dNative",Ih="DepthwiseConv2dNativeBackpropFilter",Sh="DepthwiseConv2dNativeBackpropInput",Wb="Diag",ol="Dilation2D",md="Dilation2DBackpropInput",gd="Dilation2DBackpropFilter",ma="RealDiv",ga="Elu",Th="EluGrad",ya="Erf",al="Equal",ba="Exp",il="ExpandDims",xa="Expm1",Dh="FFT",Eh="Fill",Ah="FlipLeftRight",wa="Floor",va="FloorDiv",cl="FusedBatchNorm",ll="GatherV2",Rh="GatherNd",ul="Greater",ka="GreaterEqual",Ca="Identity",Oh="IFFT",Fh="Imag",Na="IsFinite",$a="IsInf",Ia="IsNan",dl="LeakyRelu",hl="Less",pl="LessEqual",_h="LinSpace",Sa="Log",Ta="Log1p",fl="LogicalAnd",ml="LogicalNot",gl="LogicalOr",ZI="LogSoftmax",yl="LRN",Ph="LRNGrad",bl="Max",Da="Maximum",xl="MaxPool",Lh="MaxPoolGrad",wl="MaxPool3D",Mh="MaxPool3DGrad",zh="MaxPoolWithArgmax",vl="Mean",kl="Min",Ea="Minimum",Cl="MirrorPad",Aa="Mod",Bh="Multinomial",Ra="Multiply",Nl="Neg",$l="NotEqual",Wh="NonMaxSuppressionV3",Vh="NonMaxSuppressionV4",Uh="NonMaxSuppressionV5",Il="OnesLike",Sl="OneHot",Tl="Pack",Dl="PadV2",Oa="Pow",El="Prelu",Gh="Prod",jh="Range",Hh="Real",Fa="Reciprocal",_a="Relu",Al="Reshape",Rl="ResizeNearestNeighbor",qh="ResizeNearestNeighborGrad",Ol="ResizeBilinear",Kh="ResizeBilinearGrad",Pa="Relu6",Fl="Reverse",La="Round",Ma="Rsqrt",Xh="ScatterNd",_l="Select",za="Selu",Pl="Slice",Ba="Sin",Wa="Sinh",Va="Sign",Ua="Sigmoid",Ga="Softplus",ja="Sqrt",Ll="Sum",Ml="SpaceToBatchND",zl="SplitV",Bl="Softmax",Ha="SquaredDifference",Yh="Square",qa="Sub",Jh="SparseToDense",Zh="StridedSlice",Ka="Tan",Xa="Tanh",Ya="Tile",Qh="TopK",ep="Transform",Wl="Transpose",tp="Unique",Vl="Unpack",Ul="UnsortedSegmentSum",Gl="ZerosLike",Ja="Step",yd="FromPixels",np="RotateWithOffset",uc="_FusedMatMul",dc="FusedConv2D",hc="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pc=ph("kernelRegistry",()=>new Map),bd=ph("gradRegistry",()=>new Map);function xd(n,e){const t=Ub(n,e);return pc.get(t)}function Nm(n){return bd.get(n)}function $m(n){const e=pc.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&t.push(a)}return t}function Vb(n){const{kernelName:e,backendName:t}=n,s=Ub(e,t);pc.has(s)&&console.warn(`The kernel '${e}' for backend '${t}' is already registered`),pc.set(s,n)}function QI(n){const{kernelName:e}=n;bd.has(e)&&Y().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),bd.set(e,n)}function Ub(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bs(n,e){return e==="string"?Za(n):xr([n],e)}function eS(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function xr(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=jr(n)),Y().getBool("DEBUG")&&WI(n,e),eS(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Ht(){return Y().platform.now()}function Za(n,e="utf-8"){return e=e||"utf-8",Y().platform.encode(n,e)}function Hr(n,e="utf-8"){return e=e||"utf-8",Y().platform.decode(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tS{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new sS)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let a;const i=Ht();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const l of r)l.dataSync();a=Promise.resolve({kernelMs:Ht()-i})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<r.length;l++){const u=r[l];u.data().then(d=>{nS(d,u.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:a}=e;s.forEach(i=>{Promise.all([i.data(),r,a]).then(c=>{this.logger.logKernelProfile(t,i,c[0],c[1],o,c[2])})})}}function nS(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class sS{logKernelProfile(e,t,s,r,o,a){const i=typeof r=="number"?Mr(`${r}ms`,9):r.error,c=Mr(e,25),l=t.rank,u=t.size,d=Mr(t.shape.toString(),14);let h="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${c}	%c${i}	%c${l}D ${d}	%c${u}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(n,e,t){const s={},r={};for(let c=0;c<e.length;c++)s[e[c].id]=!0;for(let c=0;c<n.length;c++){const l=n[c],u=l.inputs;for(const d in u){const h=u[d];let p=!1;for(let f=0;f<e.length;f++)if(s[h.id]){l.outputs.forEach(m=>s[m.id]=!0),p=!0,r[l.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const a={};for(let c=n.length-1;c>=0;c--){const l=n[c],u=l.inputs;for(let d=0;d<l.outputs.length;d++)if(o[l.outputs[d].id]){for(const h in u)o[u[h].id]=!0,a[l.id]=!0;break}}const i=[];for(let c=0;c<n.length;c++){const l=n[c];if(r[l.id]&&a[l.id]){const u={};for(const h in l.inputs){const p=l.inputs[h];s[p.id]&&(u[h]=p)}const d=Object.assign({},l);d.inputs=u,d.outputs=l.outputs,i.push(d)}}return i}function oS(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],a=[];if(o.outputs.forEach(c=>{const l=n[c.id];l!=null?a.push(l):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const c in o.inputs){if(!(c in i))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(i)}.`);const l=t(()=>i[c]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${l.dtype}'`);const u=o.inputs[c];if(!Le(l.shape,u.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${c}' has shape '${l.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=l;else{const d=n[u.id];n[u.id]=s(d,l),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Im=20,$o=3,Bu=7;function aS(n,e,t,s){const r=fe(e),o=iS(n,e,t,r),a=e.length,i=Bi(n,e,t,r,o),c=["Tensor"];return s&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${a}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(i.map(l=>"    "+l).join(`
`)),c.join(`
`)}function iS(n,e,t,s){const r=q(e),o=s[s.length-1],a=new Array(o).fill(0),i=e.length,c=t==="complex64"?Eo(n):n;if(i>1)for(let l=0;l<r/o;l++){const u=l*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],Do(c[u+d],0,t).length)}return a}function Do(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Bu))} + ${parseFloat(n[1].toFixed(Bu))}j`:ea(n)?s=`'${n}'`:t==="bool"?s=Gb(n):s=parseFloat(n.toFixed(Bu)).toString(),Mr(s,e)}function Gb(n){return n===0?"false":"true"}function Bi(n,e,t,s,r,o=!0){const a=t==="complex64"?2:1,i=e[0],c=e.length;if(c===0){if(t==="complex64"){const m=Eo(n);return[Do(m[0],0,t)]}return t==="bool"?[Gb(n[0])]:[n[0].toString()]}if(c===1){if(i>Im){const g=$o*a;let y=Array.from(n.slice(0,g)),b=Array.from(n.slice((i-$o)*a,i*a));return t==="complex64"&&(y=Eo(y),b=Eo(b)),["["+y.map((v,x)=>Do(v,r[x],t)).join(", ")+", ..., "+b.map((v,x)=>Do(v,r[i-$o+x],t)).join(", ")+"]"]}return["["+(t==="complex64"?Eo(n):Array.from(n)).map((g,y)=>Do(g,r[y],t)).join(", ")+"]"]}const l=e.slice(1),u=s.slice(1),d=s[0]*a,h=[];if(i>Im){for(let m=0;m<$o;m++){const g=m*d,y=g+d;h.push(...Bi(n.slice(g,y),l,t,u,r,!1))}h.push("...");for(let m=i-$o;m<i;m++){const g=m*d,y=g+d;h.push(...Bi(n.slice(g,y),l,t,u,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*d,y=g+d;h.push(...Bi(n.slice(g,y),l,t,u,r,m===i-1))}const p=c===2?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<c;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function Eo(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $t{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=q(e),s!=null){const r=s.length;I(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||so(t,this.size),this.strides=fe(e)}set(e,...t){t.length===0&&(t=[0]),I(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Xn().makeTensor(this.values,this.shape,this.dtype)}}let Xn=null,_r=null;function cS(n){Xn=n}function lS(n){_r=n}class it{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=q(e),this.strides=fe(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return _r.buffer(this.shape,this.dtype,e)}bufferSync(){return _r.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return kn(this.shape,e)}arraySync(){return kn(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=Xn().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Hr(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Xn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Hr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Xn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Xn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return _r.print(this,e)}clone(){return this.throwIfDisposed(),_r.clone(this)}toString(e=!1){const t=this.dataSync();return aS(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),_r.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),Xn().makeVariable(this,e,t,s)}}Object.defineProperty(it,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function G(){return ph("Tensor",()=>it)}G();class fc extends it{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Le(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Xn().disposeTensor(this),this.dataId=e.dataId,Xn().incRef(this,null)}dispose(){Xn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(fc,Symbol.hasInstance,{value:n=>n instanceof it&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Sm;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Sm||(Sm={}));var wd;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(wd||(wd={}));var vd;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(vd||(vd={}));var kd;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(kd||(kd={}));var Cd;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Cd||(Cd={}));const uS={float32:kd,int32:wd,bool:vd,complex64:Cd};function ln(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return uS[n][e]}function sp(n){return ln(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(n,e){if(n.dtype===e.dtype)return[n,e];const t=ln(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function jb(n){const e=[];return Hb(n,e,new Set),e}function Hb(n,e,t){if(n==null)return;if(n instanceof it){e.push(n);return}if(!dS(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),Hb(o,e,t))}}function dS(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wu(n){return n.kernelName!=null}class Tm{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class qr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Tm}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new tS(this.backendInstance),!0}setupRegisteredKernels(){$m(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){$m(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof dh)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return console.warn(`Initialization of backend ${e} failed`),console.warn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return qr.nextTensorId++}nextVariableId(){return qr.nextVariableId++}clone(e){const t=A.runKernel(Ca,{x:e}),s={x:e},r=a=>({x:()=>{const i="float32",c={x:a},l={dtype:i};return A.runKernel(ua,c,l)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(!(xd(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(c=>{o+=c.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let c;const l=Wu(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Wu(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const y=xd(f,this.backendName);I(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const b=this.backend.numDataIds();c=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const v=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,v);const x=v.map(w=>{if(w.rank!=null)return w;const{dataId:N,shape:C,dtype:$}=w;return this.makeTensorFromDataId(N,C,$)});if(r){const w=this.getTensorsForGradient(f,m,x);s=this.saveTensorsForBackwardMode(w)}return x}}else{const{forwardFunc:f}=e,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};i=()=>{const g=this.backend.numDataIds();c=this.tidy(()=>f(this.backend,m));const y=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,y),y}}const{inputs:u,attrs:d}=e,h=Wu(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(l,u,t,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=Nm(e);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(I(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=o.map(l=>t[l]);const c=s.filter((l,u)=>a[u]);return i.concat(c)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&ea(e[0])&&(o=e.map(c=>Za(c)));const a=r.write(o,t,s),i=new it(t,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const c=this.state.tensorInfo.get(a),l=UI(o);this.state.numBytes+=l-c.bytes,c.bytes=l}return i}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o=new it(t,s,e,this.nextTensorId());return this.trackTensor(o,r),o}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new fc(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*dd(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof fc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*dd(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},c=Nm(e);c!=null&&(r=c.gradFunc),r!=null&&(i.gradient=l=>(l=l.map((u,d)=>{if(u==null){const h=s[d],p=Mt(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return u}),r(l.length>1?l:l[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=jb(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(I(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));I(o instanceof it,()=>"The result y returned by f() must be a tensor.");const a=rS(this.state.activeTape,t,o);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??hS(o.shape),oS(i,a,l=>this.tidy(l),pS);const c=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const u of l.saved)u.dispose()}),this.state.activeTape=null),{value:o,grads:c}})}customGrad(e){return I(pd(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{I(t.every(i=>i instanceof it),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((i,c)=>{r[c]=i});const o=(i,c)=>(s=e(...t,c),I(s.value instanceof it,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),I(pd(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,c)=>{const l=s.gradFunc(i,c),u=Array.isArray(l)?l:[l];I(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),I(u.every(h=>h instanceof it),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return u.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Ht(),s=await this.backend.time(e);return s.wallMs=Ht()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Tm;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}qr.nextTensorId=0;qr.nextVariableId=0;function hS(n){const e=Pb(q(n),"float32");return A.makeTensor(e,n,"float32")}function qb(){const n=Bb();if(n._tfengine==null){const e=new jI(n);n._tfengine=new qr(e)}return XI(n._tfengine.ENV),cS(()=>n._tfengine),n._tfengine}const A=qb();function pS(n,e){const t={a:n,b:e};return A.runKernel(ro,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(){return typeof navigator<"u"&&navigator!=null}function Kb(){if(fS()){const n=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))}return!1}function Xb(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n=Y();_n.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});_n.registerFlag("IS_BROWSER",()=>Xb());_n.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");_n.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));_n.registerFlag("PROD",()=>!1);_n.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>_n.getBool("DEBUG"));_n.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);_n.registerFlag("IS_TEST",()=>!1);_n.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);_n.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qa(n,e){let t=n;if(es(n))return e==="string"?[]:[n.length];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||es(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Yb(n,s,[]),s}function Yb(n,e,t){if(t=t||[],!Array.isArray(n)&&!es(n)){I(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}I(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),I(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)Yb(n[r],s,t.concat(r))}function Dm(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function D(n,e,t,s="numeric"){if(n instanceof it)return Dm(s,n.dtype,e,t),n;let r=ta(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Dm(s,r,e,t),n==null||!es(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const o=Qa(n,r);!es(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?xr(n,r):jr(n,[],!0);return A.makeTensor(i,o,r)}function Jb(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>D(o,`${e}[${a}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS="__op";function _(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+mS;const r=(...o)=>{A.startScope(t);try{const a=s(...o);return Mo(a)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(a),a}catch(a){throw A.endScope(null),a}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,e){const t=D(n,"real","complex"),s=D(e,"imag","complex");Uc(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return A.runKernel(xh,r)}const lr=_({complex_:gS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ei(n,e,t,s){if(s==null&&(s=ta(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!es(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Mb(e);const r=q(e),o=q(t);I(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],c=a===t.length-1?i!==q(e.slice(a)):!0;I(t[a]===e[a]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!es(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?xr(n,s):jr(n,[],!0),A.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(n,e,t){const s=Qa(n,t);return ei(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Em={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mc=4;async function Am(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],c=Array.isArray(n)?n[a].tensor:n[i];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${c.dtype}`);const l={name:i,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const u=new Promise(async d=>{const h=await c.bytes(),p=h.reduce((g,y)=>g+y.length,0)+mc*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const y=h[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=mc,f.set(y,m),m+=y.length}d(f)});s.push(u)}else s.push(c.data());e!=null&&(l.group=e),t.push(l)}const o=await Promise.all(s);return{data:bS(o),specs:t}}function yS(n,e){const t={};let s,r=0;for(const o of e){const a=o.name,i=o.dtype,c=o.shape,l=q(c);let u;if("quantization"in o){const d=o.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${o.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${o.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${o.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const h=Em[d.dtype],p=n.slice(r,r+l*h),f=d.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=NS()),u=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);r+=l*h}else if(i==="string"){const d=q(o.shape);u=[];for(let h=0;h<d;h++){const p=new Uint32Array(n.slice(r,r+mc))[0];r+=mc;const f=new Uint8Array(n.slice(r,r+p));u.push(f),r+=p}}else{const d=Em[i],h=n.slice(r,r+l*d);if(i==="float32")u=new Float32Array(h);else if(i==="int32")u=new Int32Array(h);else if(i==="bool")u=new Uint8Array(h);else if(i==="complex64"){u=new Float32Array(h);const p=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<p.length;y++)p[y]=u[y*2],f[y]=u[y*2+1];const m=tr(p,c,"float32"),g=tr(f,c,"float32");t[a]=lr(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);r+=l*d}i!=="complex64"&&(t[a]=tr(u,c,i))}return t}function bS(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const rp=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Rm(n){return rp?Buffer.byteLength(n):new Blob([n]).size}function xS(n){if(rp)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function wS(n){if(rp){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function Zb(n){if(n.length===1)return n[0];let e=0;n.forEach(r=>{e+=r.byteLength});const t=new Uint8Array(e);let s=0;return n.forEach(r=>{t.set(new Uint8Array(r),s),s+=r.byteLength}),t.buffer}function op(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Rm(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Rm(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function vS(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function kS(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function CS(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function NS(){const n=vS(),e=kS(),t=CS();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let a=0;a<s.length;a++){const i=s[a],c=n[t[i>>10]+(i&1023)]+e[i>>10];o[a]=c}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ct{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ct.instance==null&&(Ct.instance=new Ct),Ct.instance}static registerSaveRouter(e){Ct.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ct.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ct.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ct.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Ct.getInstance().loadRouters:Ct.getInstance().saveRouters).forEach(a=>{const i=a(e,s);i!==null&&r.push(i)}),r}}const Qb=n=>Ct.getSaveHandlers(n),$S=(n,e)=>Ct.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nd="tensorflowjs",$d=1,Qs="models_store",Is="model_info_store";function ex(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Id(n){const e=n.result;e.createObjectStore(Qs,{keyPath:"modelPath"}),e.createObjectStore(Is,{keyPath:"modelPath"})}class ur{constructor(e){if(this.indexedDB=ex(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(Nd,$d);o.onupgradeneeded=()=>Id(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(Qs,"readonly"),l=i.objectStore(Qs).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=u=>(a.close(),r(l.error)),i.oncomplete=()=>a.close()}else{const i=op(t),c=a.transaction(Is,"readwrite");let l=c.objectStore(Is);const u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i});let d;u.onsuccess=()=>{d=a.transaction(Qs,"readwrite");const p=d.objectStore(Qs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{l=c.objectStore(Is);const m=l.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(p.error)),m.onerror=g=>(a.close(),r(p.error))}},u.onerror=h=>(a.close(),r(u.error)),c.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}ur.URL_SCHEME="indexeddb://";const tx=n=>Y().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ur.URL_SCHEME)?IS(n.slice(ur.URL_SCHEME.length)):null;Ct.registerSaveRouter(tx);Ct.registerLoadRouter(tx);function IS(n){return new ur(n)}function SS(n){return n.startsWith(ur.URL_SCHEME)?n.slice(ur.URL_SCHEME.length):n}class TS{constructor(){this.indexedDB=ex()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Nd,$d);s.onupgradeneeded=()=>Id(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(Is,"readonly"),i=o.objectStore(Is).getAll();i.onsuccess=()=>{const c={};for(const l of i.result)c[l.modelPath]=l.modelArtifactsInfo;e(c)},i.onerror=c=>(r.close(),t(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=SS(e),new Promise((t,s)=>{const r=this.indexedDB.open(Nd,$d);r.onupgradeneeded=()=>Id(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(Is,"readwrite"),i=a.objectStore(Is),c=i.get(e);let l;c.onsuccess=()=>{if(c.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=i.delete(e),d=()=>{l=o.transaction(Qs,"readwrite");const p=l.objectStore(Qs).delete(e);p.onsuccess=()=>t(c.result.modelArtifactsInfo),p.onerror=f=>s(c.error)};u.onsuccess=d,u.onerror=h=>(d(),o.close(),s(c.error))}},c.onerror=u=>(o.close(),s(c.error)),a.oncomplete=()=>{l==null?o.close():l.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us="/",Pr="tensorflowjs_models",nx="info",DS="model_topology",ES="weight_specs",AS="weight_data",RS="model_metadata";function sx(n){return{info:[Pr,n,nx].join(us),topology:[Pr,n,DS].join(us),weightSpecs:[Pr,n,ES].join(us),weightData:[Pr,n,AS].join(us),modelMetadata:[Pr,n,RS].join(us)}}function OS(n){const e=n.split(us);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(us)}function FS(n){return n.startsWith(dr.URL_SCHEME)?n.slice(dr.URL_SCHEME.length):n}class dr{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=sx(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=op(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,xS(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=wS(a),t}}dr.URL_SCHEME="localstorage://";const rx=n=>Y().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(dr.URL_SCHEME)?_S(n.slice(dr.URL_SCHEME.length)):null;Ct.registerSaveRouter(rx);Ct.registerLoadRouter(rx);function _S(n){return new dr(n)}class PS{constructor(){I(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),I(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Pr+us,s=us+nx;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const a=OS(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=FS(e);const t=sx(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Om="://";class $s{constructor(){this.managers={}}static getInstance(){return $s.instance==null&&($s.instance=new $s),$s.instance}static registerManager(e,t){I(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Om)&&(e=e.slice(0,e.indexOf(Om))),I(e.length>0,()=>"scheme must not be an empty string.");const s=$s.getInstance();I(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LS{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new LS);try{$s.registerManager(dr.URL_SCHEME,new PS)}catch{}try{$s.registerManager(ur.URL_SCHEME,new TS)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MS={importFetch:()=>require("node-fetch")};let Vu;class zS{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(Vu==null&&(Vu=MS.importFetch()),Vu(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}}Y().get("IS_NODE")&&Y().setPlatform("node",new zS);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Te(n,e="float32",t){return e=e||"float32",Mb(n),new $t(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n,e){const t=D(n,"x","cast");if(!VI(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return A.runKernel(ua,s,r)}const de=_({cast_:BS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n){const t={x:D(n,"x","clone","string_or_numeric")};return A.runKernel(Ca,t)}const nr=_({clone_:WS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */qb();const US={buffer:Te,cast:de,clone:nr,print:VS};lS(US);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fm(n,e,t,s){a(n),t=t??0,s=s??1,i(t,s);let r=0;const o=c=>(c.then(l=>{const u=t+ ++r/n.length*(s-t);return e(u),l}),c);function a(c){I(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function i(c,l){I(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),I(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),I(l>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${l}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function GS(n,e){e==null&&(e={});const t=e.fetchFunc==null?Y().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),i=(e.onProgress==null?await Promise.all(s):await Fm(s,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(i):await Fm(i,e.onProgress,.5,1)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jS="application/octet-stream",HS="application/json";class ap{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(I(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,I(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&I(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:s};e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:HS}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:jS}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:op(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let m=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?m+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":m+=" Please make sure the server is serving valid JSON for this request.",new Error(m)}const s=t.modelTopology,r=t.weightsManifest,o=t.generatedBy,a=t.convertedBy,i=t.format,c=t.signature,l=t.userDefinedMetadata;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,d;r!=null&&([u,d]=await this.loadWeights(r));const h={modelTopology:s,weightSpecs:u,weightData:d,generatedBy:o,convertedBy:a,format:i};c!=null&&(h.signature=c),l!=null&&(h.userDefinedMetadata=l);const p=t.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=qS(t),o=this.weightPathPrefix||s,a=[];for(const u of e)a.push(...u.weights);const i=[],c=[];for(const u of e)for(const d of u.paths)this.weightUrlConverter!=null?c.push(this.weightUrlConverter(d)):i.push(o+d+r);this.weightUrlConverter&&i.push(...await Promise.all(c));const l=await GS(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Zb(l)]}}ap.URL_SCHEME_REGEX=/^https?:\/\//;function qS(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function _m(n){return n.match(ap.URL_SCHEME_REGEX)!=null}const ox=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>_m(s)):t=_m(n),t)return ax(n,e)}return null};Ct.registerSaveRouter(ox);Ct.registerLoadRouter(ox);function ax(n,e){return new ap(n,e)}function Pm(n,e){return ax(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n,e,t=!1,s=!1){let r=D(n,"a","matMul"),o=D(e,"b","matMul");[r,o]=ct(r,o);const a={a:r,b:o},i={transposeA:t,transposeB:s};return A.runKernel(Yc,a,i)}const _e=_({matMul_:KS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n,e,t=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:D(n,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:s};return A.runKernel(Sl,o,a)}const ip=_({oneHot_:XS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YS(n,e){const t=D(n,"x","transpose");if(e==null&&(e=t.shape.map((o,a)=>a).reverse()),I(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(o=>{I(o>=0&&o<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();const s={x:t},r={perm:e};return A.runKernel(Wl,s,r)}const Ue=_({transpose_:YS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n,e,t){if(hh(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Qa(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ei(n,e,s,t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Er;function ZS(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,a=!1,i=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(r&&r&&n.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(xd(yd,A.backendName)!=null){const f={pixels:n},m={numChannels:e};return A.runKernel(yd,f,m)}const[l,u]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;a?d=n.getContext("2d").getImageData(0,0,l,u).data:s||t?d=n.data:(o||r||i)&&(Er==null&&(Er=document.createElement("canvas").getContext("2d")),Er.canvas.width=l,Er.canvas.height=u,Er.drawImage(n,0,0,l,u),d=Er.getImageData(0,0,l,u).data);let h;if(e===4)h=new Int32Array(d);else{const f=l*u;h=new Int32Array(f*e);for(let m=0;m<f;m++)for(let g=0;g<e;++g)h[m*e+g]=d[m*4+g]}return JS(h,[u,l,e],"int32")}const QS=_({fromPixels_:ZS});function cp(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(q(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let a=1;for(let d=0;d<r.length-1;++d)a*=r[d];const i=n.shape,c=r.slice();c.pop();let l=1;for(let d=o;d<t;++d)l*=i[d],c.push(i[d]);const u=[...fe(n.shape).map(d=>d/l),1].slice(0,o);return[c,a,l,u]}function ix(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-r;++a)if(t.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${t.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function cx(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}ix(t,e,n)}function ti(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let a=1;for(let d=r;d<o;++d)a*=t[d];const i=r<1?1:r,c=q(e.shape)/i,l=[...fe(t.slice(0,r)),1],u=q(t);return{sliceRank:r,numUpdates:c,sliceSize:a,strides:l,outputSize:u}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lp(n,e,t){const s=n.shape.length;I(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),I(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)I(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function Wi(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function lx(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function ux(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function dx(n,e,t){return t<=n?t:t-(e-1)}function hx(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function px(n,e,t,s,r,o,a,i,c){const l=n.length;let u=new Array(l),d=new Array(l),h=new Array(l);if(e.length&&t>0){const p=e[0],f=t+1;u=fx(a,p,f,s,n),d=mx(i,p,f,r,n),h=ux(o,p,f,n)}else for(let p=0;p<l;p++)u[p]=yx(a,s,o,n,p,c),d[p]=bx(i,r,o,n,p,c),h[p]=gx(o,p,c);return{begin:u,end:d,strides:h}}function fx(n,e,t,s,r){const o=[...r],a=hx(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const c=dx(e,t,i);let l=s[c];n&1<<c&&(l=0),o[i]=l}return o}function mx(n,e,t,s,r){const o=[...r],a=hx(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const c=dx(e,t,i);let l=s[c];n&1<<c&&(l=Number.MAX_SAFE_INTEGER),o[i]=l}for(let i=0;i<o.length;i++){const c=r[i];o[i]<0&&(o[i]+=c),o[i]=cr(0,o[i],r[i])}return o}function gx(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function yx(n,e,t,s,r,o){let a=e[r];const i=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const c=s[r];return a<0&&(a+=c),a=cr(0,a,c-1),a}function bx(n,e,t,s,r,o){let a=e[r];const i=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const c=s[r];return a<0&&(a+=c),i>0?a=cr(0,a,c):a=cr(-1,a,c-1),a}function up(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function dp(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function jl(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{I(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:(I(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,o]}function hp(n,e,t,s,r,o,a,i,c){let l=e.slice(),u=t.slice(),d=s;s==null&&(d=new Array(l.length));const h=Wi(a);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(a!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(a!==0&&c!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=n.length-l.length,f=Wi(i),m=n.slice();f.forEach(C=>{l[C]=0,u[C]=1,m.splice(C,0,1)});const{begin:g,end:y,strides:b}=px(m,h,p,l,u,d,r,o,a);l=g,u=y,d=b;const v=Wi(c);v.forEach(C=>{u[C]=l[C]+1,d[C]=1});const x=lx(l,u,d),w=x.filter((C,$)=>v.indexOf($)===-1);return{nonStrided:d.every(C=>C===1),$begin:l,$end:u,$strides:d,size:x,newShape:m,outShape:w}}const eT=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:lp,computeFlatOffset:dp,computeOutShape:lx,getNormalizedAxes:px,isSliceContinous:up,maskToAxes:Wi,parseSliceParams:jl,sliceInfo:hp,startForAxis:yx,startIndicesWithElidedDims:fx,stopForAxis:bx,stopIndicesWithElidedDims:mx,stridesForAxis:gx,stridesWithElidedDims:ux},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class xn{constructor(){this.classNameMap={}}static getMap(){return xn.instance==null&&(xn.instance=new xn),xn.instance}static register(e){xn.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Z(n){I(n.className!=null,()=>"Class being registered does not have the static className property defined."),I(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),I(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),xn.register(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(){return A}function Lm(){return A.memory()}function P(n,e){return A.tidy(n,e)}function ve(n){jb(n).forEach(t=>t.dispose())}function At(n){return A.keep(n)}function Mm(n){return A.setBackend(n)}function tT(){return A.backendName}function xx(n,e,t=1){return A.registerBackend(n,e,t)}function nT(){return A.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,e){let t=D(n,"a","add"),s=D(e,"b","add");[t,s]=ct(t,s);const r={a:t,b:s};return A.runKernel(ro,r)}const se=_({add_:sT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,e){let t=D(n,"a","floorDiv"),s=D(e,"b","floorDiv");[t,s]=ct(t,s);const r={a:t,b:s};return A.runKernel(va,r)}const pp=_({floorDiv_:rT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,e){let t=D(n,"a","div"),s=D(e,"b","div");if([t,s]=ct(t,s),t.dtype==="int32"&&s.dtype==="int32")return pp(t,s);const r={a:t,b:s},o={};return A.runKernel(ma,r,o)}const ge=_({div_:oT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n,e){let t=D(n,"a","mul"),s=D(e,"b","mul");[t,s]=ct(t,s);const r={a:t,b:s};return A.runKernel(Ra,r)}const B=_({mul_:aT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n){const e=D(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return A.runKernel(Zc,t)}else{const t={x:e};return A.runKernel(Gc,t)}}const Vt=_({abs_:iT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n){const t={x:D(n,"x","acos")};return A.runKernel(sa,t)}const wx=_({acos_:cT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(n){const t={x:D(n,"x","acosh")};return A.runKernel(ra,t)}const vx=_({acosh_:lT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n){I(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),I(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>D(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Le(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return A.runKernel(jc,s)}const dT=_({addN_:uT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,e=null,t=!1){const r={x:D(n,"x","all","bool")},o={axis:e,keepDims:t};return A.runKernel(fh,r,o)}const fp=_({all_:hT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n,e=null,t=!1){const r={x:D(n,"x","any","bool")},o={axis:e,keepDims:t};return A.runKernel(mh,r,o)}const gc=_({any_:pT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n,e=0){const s={x:D(n,"x","argMax")},r={axis:e};return A.runKernel(Hc,s,r)}const yc=_({argMax_:fT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e=0){const s={x:D(n,"x","argMin")},r={axis:e};return A.runKernel(qc,s,r)}const kx=_({argMin_:mT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n){const t={x:D(n,"x","asin")};return A.runKernel(oa,t)}const Cx=_({asin_:gT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(n){const t={x:D(n,"x","asinh")};return A.runKernel(aa,t)}const Nx=_({asinh_:yT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n){const t={x:D(n,"x","atan")};return A.runKernel(ia,t)}const $x=_({atan_:bT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n,e){let t=D(n,"a","atan2"),s=D(e,"b","atan2");[t,s]=ct(t,s);const r={a:t,b:s};return A.runKernel(la,r)}const Ix=_({atan2_:xT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n){const t={x:D(n,"x","atanh")};return A.runKernel(ca,t)}const Sx=_({atanh_:wT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(n,e,t,s,r="NHWC",o){const a=n[3],i=[...e,a],c=xs(r);return St(n,i,t,o,s,null,null,c)}function In(n,e,t,s,r,o,a="channelsLast"){const[i,c]=bc(e);let l;if(a==="channelsLast")l=[i,c,n[3],n[3]];else if(a==="channelsFirst")l=[i,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return St(n,l,t,s,r,o,!1,a)}function bs(n,e,t,s,r,o,a="NDHWC"){const[i,c,l]=Sd(e);let u,d;if(a==="NDHWC")d="channelsLast",u=[i,c,l,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",u=[i,c,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ws(n,u,t,s,r,!1,d,o)}function St(n,e,t,s,r,o,a=!1,i="channelsLast"){let[c,l,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[c,l,u,d]=n;else if(i==="channelsFirst")[c,d,l,u]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,p,,f]=e,[m,g]=bc(t),[y,b]=bc(s),v=zr(h,y),x=zr(p,b),{padInfo:w,outHeight:N,outWidth:C}=CT(r,l,u,m,g,v,x,o,i),$=a?f*d:f;let S;return i==="channelsFirst"?S=[c,$,N,C]:i==="channelsLast"&&(S=[c,N,C,$]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:d,outHeight:N,outWidth:C,outChannels:$,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:n,outShape:S,filterShape:e}}function Ws(n,e,t,s,r,o=!1,a="channelsLast",i){let[c,l,u,d,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[c,l,u,d,h]=n;else if(a==="channelsFirst")[c,h,l,u,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=e,[y,b,v]=Sd(t),[x,w,N]=Sd(s),C=zr(p,x),$=zr(f,w),S=zr(m,N),{padInfo:T,outDepth:E,outHeight:F,outWidth:O}=NT(r,l,u,d,y,b,v,C,$,S,i),L=o?g*h:g;let z;return a==="channelsFirst"?z=[c,L,E,F,O]:a==="channelsLast"&&(z=[c,E,F,O,L]),{batchSize:c,dataFormat:a,inDepth:l,inHeight:u,inWidth:d,inChannels:h,outDepth:E,outHeight:F,outWidth:O,outChannels:L,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:$,effectiveFilterWidth:S,dilationDepth:x,dilationHeight:w,dilationWidth:N,inShape:n,outShape:z,filterShape:e}}function vT(n,e,t,s,r){s==null&&(s=mp(n,e,t));const o=n[0],a=n[1],i=sr((o-e+2*s)/t+1,r),c=sr((a-e+2*s)/t+1,r);return[i,c]}function kT(n,e,t,s,r,o){r==null&&(r=mp(n,e,s));const a=n[0],i=n[1],c=n[2],l=sr((a-e+2*r)/s+1,o),u=sr((i-e+2*r)/s+1,o),d=sr((c-e+2*r)/s+1,o);return[l,u,d,t]}function mp(n,e,t,s=1){const r=zr(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function bc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Sd(n){return typeof n=="number"?[n,n,n]:n}function zr(n,e){return e<=1?n:n+(n-1)*(e-1)}function CT(n,e,t,s,r,o,a,i,c){let l,u,d;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=vT([e,t],o,s,n,i);u=p[0],d=p[1]}else if(n==="same"){u=Math.ceil(e/s),d=Math.ceil(t/r);const h=Math.max(0,(u-1)*s+o-e),p=Math.max(0,(d-1)*r+a-t),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),y=p-g;l={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-o+1)/s),d=Math.ceil((t-a+1)/r);else if(typeof n=="object"){const h=c==="channelsLast"?n[1][0]:n[2][0],p=c==="channelsLast"?n[1][1]:n[2][1],f=c==="channelsLast"?n[2][0]:n[3][0],m=c==="channelsLast"?n[2][1]:n[3][1];l={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=sr((e-o+h+p)/s+1,i),d=sr((t-a+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:u,outWidth:d}}function NT(n,e,t,s,r,o,a,i,c,l,u){let d,h,p,f;if(typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=kT([e,t,s,1],i,1,r,n,u);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(e/r),p=Math.ceil(t/o),f=Math.ceil(s/a);const m=(h-1)*r+i-e,g=(p-1)*o+c-t,y=(f-1)*a+l-s,b=Math.floor(m/2),v=m-b,x=Math.floor(g/2),w=g-x,N=Math.floor(y/2),C=y-N;d={top:x,bottom:w,left:N,right:C,front:b,back:v,type:"SAME"}}else if(n==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((e-i+1)/r),p=Math.ceil((t-c+1)/o),f=Math.ceil((s-l+1)/a);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function sr(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function As(n){const[e,t,s]=bc(n);return e===1&&t===1&&s===1}function _t(n,e){return As(n)||As(e)}function xs(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(n,e){const s={x:D(n,"x","reshape","string_or_numeric")},r={shape:e};return A.runKernel(Al,s,r)}const V=_({reshape_:$T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(n,e,t,s,r){const o=D(n,"x","avgPool","float32"),a=1;I(_t(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,c=!1;o.rank===3&&(c=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),r!=null&&I(It(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let d=A.runKernel(Kc,l,u);return d=de(d,o.dtype),c?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Hl=_({avgPool_:IT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,e,t,s,r,o="NDHWC"){const a=D(n,"x","avgPool3d","float32");let i=a,c=!1;a.rank===4&&(c=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),I(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),I(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),r!=null&&I(It(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let d=A.runKernel(Xc,l,u);return d=de(d,i.dtype),c?V(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Tx=_({avgPool3d_:ST});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,e=0){I(n.length>=1,()=>"Pass at least one tensor to concat");const t=Jb(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return nr(t[0]);const s=t,r={axis:e};return A.runKernel(Qc,s,r)}const Ot=_({concat_:TT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n){const t={x:D(n,"x","sigmoid")};return A.runKernel(Ua,t)}const ao=_({sigmoid_:DT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ET(n,e,t){const s=D(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return A.runKernel(Pl,r,o)}const je=_({slice_:ET});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n){const t={x:D(n,"x","tanh")};return A.runKernel(Xa,t)}const gp=_({tanh_:AT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n,e,t){const s=D(n,"x","batchToSpaceND"),r=e.reduce((i,c)=>i*c);I(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),I(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),I(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},a={blockShape:e,crops:t};return A.runKernel(Jc,o,a)}const ql=_({batchToSpaceND_:RT});function OT(n){let e;return n.rank===0||n.rank===1?e=V(n,[1,1,1,n.size]):n.rank===2?e=V(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=V(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,e,t,s,r,o){o==null&&(o=.001);const a=D(n,"x","batchNorm"),i=D(e,"mean","batchNorm"),c=D(t,"variance","batchNorm");let l;r!=null&&(l=D(r,"scale","batchNorm"));let u;s!=null&&(u=D(s,"offset","batchNorm")),I(i.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:OT(a),scale:l,offset:u,mean:i,variance:c},p={varianceEpsilon:o},f=A.runKernel(cl,h,p);return V(f,a.shape)}const Kr=_({batchNorm_:FT});function _T(n,e,t,s,r,o){const a=D(n,"x","batchNorm"),i=D(e,"mean","batchNorm"),c=D(t,"variance","batchNorm");let l;r!=null&&(l=D(r,"scale","batchNorm"));let u;return s!=null&&(u=D(s,"offset","batchNorm")),I(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),I(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),I(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&I(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&I(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Kr(a,i,c,u,l,o)}const PT=_({batchNorm2d_:_T});function LT(n,e,t,s,r,o){const a=D(n,"x","batchNorm"),i=D(e,"mean","batchNorm"),c=D(t,"variance","batchNorm");let l;r!=null&&(l=D(r,"scale","batchNorm"));let u;return s!=null&&(u=D(s,"offset","batchNorm")),I(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),I(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),I(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&I(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&I(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Kr(a,i,c,u,l,o)}const MT=_({batchNorm3d_:LT});function zT(n,e,t,s,r,o){const a=D(n,"x","batchNorm"),i=D(e,"mean","batchNorm"),c=D(t,"variance","batchNorm");let l;r!=null&&(l=D(r,"scale","batchNorm"));let u;return s!=null&&(u=D(s,"offset","batchNorm")),I(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),I(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),I(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&I(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&I(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Kr(a,i,c,u,l,o)}const BT=_({batchNorm4d_:zT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n,e,t){const s=D(n,"x","bincount"),r=D(e,"weights","bincount");I(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),I(t>=0,()=>`size must be non-negative, but got ${t}.`),I(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:t};return A.runKernel(bh,o,a)}const VT=_({bincount_:WT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n,e){let t=D(n,"broadcastTo","x");const s=t.shape;if(e.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=V(t,l)}const r=t.shape,o=Array.from(e);for(let l=e.length-1;l>=0;l--)if(r[l]===e[l])o[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return nr(t);const i={x:t},c={reps:o};return A.runKernel(Ya,i,c)}const xc=_({broadcastTo_:UT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n){const t={x:D(n,"x","ceil")};return A.runKernel(da,t)}const Dx=_({ceil_:GT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e,t){const s=D(n,"x","clipByValue");I(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);const r={x:s},o={clipValueMin:e,clipValueMax:t};return A.runKernel(ha,r,o)}const Qt=_({clipByValue_:jT});function HT(n){return Ot(n,0)}const qT=_({concat1d_:HT});function KT(n,e){return Ot(n,e)}const XT=_({concat2d_:KT});function YT(n,e){return Ot(n,e)}const JT=_({concat3d_:YT});function ZT(n,e){return Ot(n,e)}const QT=_({concat4d_:ZT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n,e,t,s,r="NHWC",o=[1,1],a){const i=D(n,"x","conv2d"),c=D(e,"filter","conv2d");let l=i,u=!1;i.rank===3&&(u=!0,l=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),I(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),a!=null&&I(It(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const d=r==="NHWC"?l.shape[3]:l.shape[1];I(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),I(_t(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const h={x:l,filter:c},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=A.runKernel(el,h,p);return u?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Rs=_({conv2d_:e2});function t2(n,e,t,s,r="NWC",o=1,a){const i=D(n,"x","conv1d"),c=D(e,"filter","conv1d");let l=i,u=!1;i.rank===2&&(u=!0,l=V(i,[1,i.shape[0],i.shape[1]])),I(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),I(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),a!=null&&I(It(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),I(l.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${c.shape[1]}.`),I(_t(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),I(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=V(c,[1,c.shape[0],c.shape[1],c.shape[2]]),h=V(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=Rs(h,d,[1,t],s,"NHWC",[1,o],a);return u?V(g,[g.shape[2],g.shape[3]]):V(g,[g.shape[0],g.shape[2],g.shape[3]])}const yp=_({conv1d_:t2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,e,t,s,r,o="NHWC",a){I(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,c=e,l=!1;e.rank===3&&(l=!0,c=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),I(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),I(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),I(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?c.shape[3]:c.shape[1];I(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),I(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),a!=null&&I(It(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const h={dy:c,filter:t},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},f=A.runKernel(tl,h,p);return l?V(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const bp=_({conv2DBackpropInput_:n2});function s2(n,e,t,s,r,o){const a=D(n,"x","conv2dTranspose"),i=D(e,"filter","conv2dTranspose");return bp(t,a,i,s,r,"NHWC",o)}const xp=_({conv2dTranspose_:s2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(n,e,t,s,r="NDHWC",o=[1,1,1]){const a=D(n,"x","conv3d"),i=D(e,"filter","conv3d");let c=a,l=!1;a.rank===4&&(l=!0,c=V(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),I(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),I(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),I(c.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${i.shape[3]}.`),I(_t(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),I(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const u={x:c,filter:i},d={strides:t,pad:s,dataFormat:r,dilations:o},h=A.runKernel(nl,u,d);return l?V(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Ex=_({conv3d_:r2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(n,e,t,s,r){I(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=V(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const c=o[4],l=a.shape[4];I(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),I(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),I(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),I(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),I(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const u={dy:a,filter:t},d={pad:r,strides:s,inputShape:o},h=A.runKernel(kh,u,d);return i?V(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const a2=_({conv3DBackpropInput_:o2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2(n){const t={x:D(n,"x","cos")};return A.runKernel(pa,t)}const Kl=_({cos_:i2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(n){const t={x:D(n,"x","cosh")};return A.runKernel(fa,t)}const wp=_({cosh_:c2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l2(n,e=0,t=!1,s=!1){const o={x:D(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:s};return A.runKernel(sl,o,a)}const vp=_({cumsum_:l2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u2(n,e,t,s=!1){const r=D(n,"x","denseBincount"),o=D(e,"weights","denseBincount");I(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),I(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),I(t>=0,()=>`size must be non-negative, but got ${t}.`),I(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:t,binaryOutput:s};return A.runKernel(Nh,a,i)}const d2=_({denseBincount_:u2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(n,e,t="NHWC"){const s=D(n,"x","depthToSpace"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];I(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),I(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),I(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},c={blockSize:e,dataFormat:t};return A.runKernel($h,i,c)}const Ax=_({depthToSpace_:h2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e,t,s,r="NHWC",o=[1,1],a){const i=D(n,"x","depthwiseConv2d"),c=D(e,"filter","depthwiseConv2d");let l=i,u=!1;i.rank===3&&(u=!0,l=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),I(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),I(l.shape[3]===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),a!=null&&I(It(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const d={x:l,filter:c},h={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},p=A.runKernel(rl,d,h);return u?V(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const si=_({depthwiseConv2d_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(n,e,t,s,r=[1,1],o="NHWC"){const a=D(n,"x","dilation2d"),i=D(e,"filter","dilation2d");I(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),I(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),I(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let c=a,l=!1;a.rank===3&&(c=V(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);const u={x:c,filter:i},d={strides:t,pad:s,dilations:r},h=A.runKernel(ol,u,d);return l?V(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Rx=_({dilation2d_:f2});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zo(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,a=n[o]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function kt(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,a=e[o];(r==null||r===1&&a>1)&&t.unshift(o)}return t}function Se(n,e){const t=[],s=Math.max(n.length,e.length);for(let r=0;r<s;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=e[e.length-r-1];if(a==null&&(a=1),o===1)t.unshift(a);else if(a===1)t.unshift(o);else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else t.unshift(o)}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(n,e){let t=D(n,"a","equal"),s=D(e,"b","equal");[t,s]=ct(t,s),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(al,r)}const wr=_({equal_:m2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(n,e,t){const s=D(e,"a","where"),r=D(t,"b","where"),o=D(n,"condition","where","bool"),a=Se(s.shape,r.shape),i=xc(s,a),c=xc(r,a);o.rank===1&&I(o.shape[0]===s.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),o.rank!==1&&Uc(o.shape,c.shape,"Error in where: ");const l={condition:o,t:i,e:c};return A.runKernel(_l,l)}const un=_({where_:g2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(n){const t={x:D(n,"x","zerosLike")};return A.runKernel(Gl,t)}const Ee=_({zerosLike_:y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(n,e){let t=D(n,"a","div"),s=D(e,"b","div");[t,s]=ct(t,s);const r=ge(t,s),o=Ee(r),a=wr(s,o);return un(a,o,r)}const Ox=_({divNoNan_:b2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(n,e){const t=D(n,"t1","dot"),s=D(e,"t2","dot");I((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(I(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const a=V(t,[1,-1]),i=V(s,[-1,1]),c=_e(a,i);return V(c,[])}else if(t.rank===1&&s.rank===2){const a=V(t,[1,-1]),i=V(s,[s.shape[0],s.shape[1]]),c=_e(a,i);return V(c,[c.size])}else if(t.rank===2&&s.rank===1){const a=V(s,[-1,1]),i=_e(t,a);return V(i,[i.size])}else{const a=V(s,[s.shape[0],s.shape[1]]);return _e(t,a)}}const w2=_({dot_:x2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(n){const t={x:D(n,"x","elu")};return A.runKernel(ga,t)}const ri=_({elu_:v2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(n){let e=D(n,"x","erf");I(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=de(e,"float32"));const t={x:e};return A.runKernel(ya,t)}const Fx=_({erf_:k2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2(n){const t={x:D(n,"x","exp")};return A.runKernel(ba,t)}const ms=_({exp_:C2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(n,e=0){const t=D(n,"x","expandDims","string_or_numeric");I(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return A.runKernel(il,s,r)}const bn=_({expandDims_:N2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n){const t={x:D(n,"x","expm1")};return A.runKernel(xa,t)}const _x=_({expm1_:$2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(n,e){const t=D(n,"x","tile","string_or_numeric");I(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return A.runKernel(Ya,s,r)}const rr=_({tile_:I2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(n,e,t,s="float32"){e==null&&(e=n);const r=Te([n,e],s),o=n<=e?n:e;for(let i=0;i<o;++i)r.set(1,i,i);const a=V(r.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return rr(bn(a,0),[t[0],1,1]);if(t.length===2)return rr(bn(bn(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return rr(bn(bn(bn(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Px=_({eye_:S2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kp(n,e,t){const s={shape:n,value:e,dtype:t};return A.runKernel(Eh,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(n){const t={x:D(n,"x","floor")};return A.runKernel(wa,t)}const oi=_({floor_:T2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(n,e,t=0,s=0){const r=D(n,"x","gather"),o=D(e,"indices","gather","int32"),a={x:r,indices:o},i={axis:t,batchDims:s};return A.runKernel(ll,a,i)}const Bo=_({gather_:D2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,e){let t=D(n,"a","greater"),s=D(e,"b","greater");[t,s]=ct(t,s),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(ul,r)}const rs=_({greater_:E2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(n,e){let t=D(n,"a","greaterEqual"),s=D(e,"b","greaterEqual");[t,s]=ct(t,s),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(ka,r)}const vr=_({greaterEqual_:A2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(n){const t={input:D(n,"input","imag")};return A.runKernel(Fh,t)}const Cp=_({imag_:R2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(n){const t={x:D(n,"x","isFinite")};return A.runKernel(Na,t)}const F2=_({isFinite_:O2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n){const t={x:D(n,"x","isInf")};return A.runKernel($a,t)}const P2=_({isInf_:_2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(n){const t={x:D(n,"x","isNaN")};return A.runKernel(Ia,t)}const M2=_({isNaN_:L2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z2(n,e=.2){const s={x:D(n,"x","leakyRelu")},r={alpha:e};return A.runKernel(dl,s,r)}const Xl=_({leakyRelu_:z2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B2(n,e){let t=D(n,"a","less"),s=D(e,"b","less");[t,s]=ct(t,s),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(hl,r)}const Np=_({less_:B2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(n,e){let t=D(n,"a","lessEqual"),s=D(e,"b","lessEqual");[t,s]=ct(t,s),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(pl,r)}const io=_({lessEqual_:W2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return A.runKernel(_h,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n,e=5,t=1,s=1,r=.5){const o=D(n,"x","localResponseNormalization");I(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),I(It(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=V(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:a},l={depthRadius:e,bias:t,alpha:s,beta:r},u=A.runKernel(yl,c,l);return i?V(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Lx=_({localResponseNormalization_:U2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n){const t={x:D(n,"x","log")};return A.runKernel(Sa,t)}const Pn=_({log_:G2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(n){const t={x:D(n,"x","log1p")};return A.runKernel(Ta,t)}const Mx=_({log1p_:j2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,e){I(pd(n),()=>"The f passed in variableGrads(f) must be a function"),I(e==null||Array.isArray(e)&&e.every(l=>l instanceof fc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in A.registeredVariables)e.push(A.registeredVariables[l])}const s=t?e.filter(l=>!l.trainable):null,r=e.length;e=e.filter(l=>l.trainable),I(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:i}=A.gradients(n,e,null,o);I(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),I(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const c={};return e.forEach((l,u)=>{i[u]!=null&&(c[l.name]=i[u])}),s?.forEach(l=>c[l.name]=null),{value:a,grads:c}}function Os(n){return A.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n){const t={x:D(n,"x","neg")};return A.runKernel(Nl,t)}const bt=_({neg_:q2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n){const t={x:D(n,"x","softplus")};return A.runKernel(Ga,t)}const ai=_({softplus_:K2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(n){const e=D(n,"x","logSigmoid");return Os(s=>({value:bt(ai(bt(s))),gradFunc:a=>B(a,ao(bt(s)))}))(e)}const Y2=_({logSigmoid_:X2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n,e=null,t=!1){const r={x:D(n,"x","max")},o={reductionIndices:e,keepDims:t};return A.runKernel(bl,r,o)}const Cn=_({max_:J2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n,e){let t=D(n,"a","sub"),s=D(e,"b","sub");[t,s]=ct(t,s);const r={a:t,b:s};return A.runKernel(qa,r)}const xe=_({sub_:Z2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(n,e=null,t=!1){let s=D(n,"x","sum");s.dtype==="bool"&&(s=de(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return A.runKernel(Ll,r,o)}const be=_({sum_:Q2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n,e=-1){const t=D(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Os((r,o)=>{const i=Cn(r,e,!0),c=xe(r,i),l=xe(de(c,"float32"),Pn(be(ms(c),e,!0)));return o([l]),{value:l,gradFunc:(d,h)=>{const[p]=h,f=!0,m=ms(p);return xe(d,B(be(d,e,f),m))}}})(t)}const $p=_({logSoftmax_:eD});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ip(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function zx(n,e,t){const s=n.length+e.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)t.indexOf(i)===-1?r.push(n[o++]):r.push(e[a++]);return r}function Tt(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function pt(n,e){const t=e.map(s=>1);return zx(n,t,e)}function Pt(n,e,t){I(Ip(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function ut(n,e){if(Ip(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function co(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function ft(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(n,e=null,t=!1){const s=D(n,"x","logSumExp"),r=Ie(e,s.shape),o=Cn(s,r,!0),a=xe(s,o),i=ms(a),c=be(i,r),l=Pn(c),u=se(V(o,l.shape),l);if(t){const d=pt(u.shape,r);return V(u,d)}return u}const nD=_({logSumExp_:tD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e){const t=D(n,"a","logicalAnd","bool"),s=D(e,"b","logicalAnd","bool");Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(fl,r)}const ts=_({logicalAnd_:sD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(n){const t={x:D(n,"x","logicalNot","bool")};return A.runKernel(ml,t)}const Yl=_({logicalNot_:rD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,e){const t=D(n,"a","logicalOr","bool"),s=D(e,"b","logicalOr","bool");Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(gl,r)}const Sp=_({logicalOr_:oD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(n,e){const t=D(n,"a","logicalXor","bool"),s=D(e,"b","logicalXor","bool");return Se(t.shape,s.shape),ts(Sp(n,e),Yl(ts(n,e)))}const iD=_({logicalXor_:aD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(n,e,t,s,r){const o=D(n,"x","maxPool"),a=1;let i=o,c=!1;o.rank===3&&(c=!0,i=V(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),I(_t(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),r!=null&&I(It(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r},d=A.runKernel(xl,l,u);return c?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Jl=_({maxPool_:cD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e=[1,1,1],t,s,r,o="NDHWC"){const a=D(n,"x","maxPool3d");let i=a,c=!1;a.rank===4&&(c=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),I(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),I(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),r!=null&&I(It(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:i},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},d=A.runKernel(wl,l,u);return c?V(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Bx=_({maxPool3d_:lD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(n,e,t,s,r=!1){const a={x:D(n,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},c=A.runKernel(zh,a,i);return{result:c[0],indexes:c[1]}}const dD=_({maxPoolWithArgmax_:uD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n,e){let t=D(n,"a","maximum"),s=D(e,"b","maximum");[t,s]=ct(t,s),t.dtype==="bool"&&(t=de(t,"int32"),s=de(s,"int32")),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(Da,r)}const ws=_({maximum_:hD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n,e=null,t=!1){const r={x:D(n,"x","mean")},o={axis:e,keepDims:t};return A.runKernel(vl,r,o)}const lt=_({mean_:pD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n,e=null,t=!1){const r={x:D(n,"x","min")},o={axis:e,keepDims:t};return A.runKernel(kl,r,o)}const Wo=_({min_:fD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e){let t=D(n,"a","minimum"),s=D(e,"b","minimum");[t,s]=ct(t,s),t.dtype==="bool"&&(t=de(t,"int32"),s=de(s,"int32")),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel(Ea,r)}const Zl=_({minimum_:mD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n,e,t){I(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=D(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");I(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let i=0;i<s.rank;i++)I(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),I(e[i][0]>=0&&e[i][0]<=s.shape[i]-r&&e[i][1]>=0&&e[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},a={x:s};return A.runKernel(Cl,a,o)}const Wx=_({mirrorPad_:gD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e){let t=D(n,"a","mod"),s=D(e,"b","mod");[t,s]=ct(t,s);const r={a:t,b:s};return A.runKernel(Aa,r)}const Vx=_({mod_:yD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n){const e=D(n,"x","square"),t={};return A.runKernel("Square",{x:e},t)}const Ye=_({square_:bD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(n,e=null,t=!1){n=D(n,"x","moments");const s=Ie(e,n.shape),r=lt(n,s,t);let o=r.shape;t||(o=pt(r.shape,s));const a=Ye(xe(de(n,"float32"),V(r,o))),i=lt(a,s,t);return{mean:r,variance:i}}const Tp=_({moments_:xD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n,e,t,s=!1){const r=D(n,"logits","multinomial"),o=r.size,a=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const c={logits:a===1?V(r,[1,-1]):r},l={numSamples:e,seed:t,normalized:s},u=A.runKernel(Bh,c,l);return a===1?V(u,[u.size]):u}const vD=_({multinomial_:wD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n,e){let t=D(n,"a","notEqual"),s=D(e,"b","notEqual");[t,s]=ct(t,s),Se(t.shape,s.shape);const r={a:t,b:s};return A.runKernel($l,r)}const Vo=_({notEqual_:kD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(n,e="float32"){if(e==="complex64"){const s=ht(n,"float32"),r=ht(n,"float32");return lr(s,r)}const t=Mt(q(n),e);return A.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vs(n,e="float32"){if(e==="complex64"){const s=Vs(n,"float32"),r=ht(n,"float32");return lr(s,r)}const t=Pb(q(n),e);return A.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n){const t={x:D(n,"x","onesLike")};return A.runKernel(Il,t)}const dn=_({onesLike_:CD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(n,e,t=0){const s=D(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return A.runKernel(Dl,o,r)}const Ql=_({pad_:ND});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(n,e,t){const s=D(n,"x","spaceToBatchND");I(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),I(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),I(s.shape.reduce((a,i,c)=>c>0&&c<=e.length?a&&(i+t[c-1][0]+t[c-1][1])%e[c-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return A.runKernel(Ml,r,o)}const eu=_({spaceToBatchND_:$D});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(n,e,t,s,r,o){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=D(n,"x","maxPool");let i=a,c=!1;a.rank===3&&(c=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(_t(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const l=In(i.shape,e,o,r,s),u=[l.dilationHeight,l.dilationWidth];let d;s==="same"?d=TD([l.filterHeight,l.filterWidth],u):d=[[0,0],[0,0]];const h=u[0]===1&&u[1]===1,[p,f]=SD([l.inHeight,l.inWidth],u,d),m=h?s:"valid",g=h?i:eu(i,u,p),b=(t==="avg"?()=>Hl(g,e,o,m):()=>Jl(g,e,o,m))(),v=h?b:ql(b,u,f);return c?V(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function SD(n,e,t){const s=t.map(u=>u[0]),r=t.map(u=>u[1]),o=n.concat(s,r),a=e.map((u,d)=>(u-o[d]%u)%u),i=r.map((u,d)=>u+a[d]),c=e.map((u,d)=>[s[d],i[d]]),l=e.map((u,d)=>[0,a[d]]);return[c,l]}function TD(n,e){const s=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const DD=_({pool_:ID});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n,e){let t=D(n,"base","pow"),s=D(e,"exp","pow");[t,s]=ct(t,s);const r={a:t,b:s};return A.runKernel(Oa,r)}const hr=_({pow_:ED});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n,e){const t=D(n,"x","prelu"),s=D(e,"alpha","prelu"),r={x:t,alpha:s};return A.runKernel(El,r)}const tu=_({prelu_:AD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(n,e=null,t=!1){let s=D(n,"x","prod");s.dtype==="bool"&&(s=de(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return A.runKernel(Gh,r,o)}const Dp=_({prod_:RD});var Vi={exports:{}},OD=Vi.exports,zm;function FD(){return zm||(zm=1,(function(n){(function(e,t,s){function r(c){var l=this,u=i();l.next=function(){var d=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=d-(l.c=d|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(c),l.s0<0&&(l.s0+=1),l.s1-=u(c),l.s1<0&&(l.s1+=1),l.s2-=u(c),l.s2<0&&(l.s2+=1),u=null}function o(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function a(c,l){var u=new r(c),d=l&&l.state,h=u.next;return h.int32=function(){return u.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,u),h.state=function(){return o(u,{})}),h}function i(){var c=4022871197,l=function(u){u=u.toString();for(var d=0;d<u.length;d++){c+=u.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=a:this.alea=a})(OD,n)})(Vi)),Vi.exports}var Ui={exports:{}},_D=Ui.exports,Bm;function PD(){return Bm||(Bm=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xor128=a})(_D,n)})(Ui)),Ui.exports}var Gi={exports:{}},LD=Gi.exports,Wm;function MD(){return Wm||(Wm=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,u==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c.v=i.v,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xorwow=a})(LD,n)})(Gi)),Gi.exports}var ji={exports:{}},zD=ji.exports,Vm;function BD(){return Vm||(Vm=1,(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.x,d=c.i,h,p;return h=u[d],h^=h>>>7,p=h^h<<24,h=u[d+1&7],p^=h^h>>>10,h=u[d+3&7],p^=h^h>>>3,h=u[d+4&7],p^=h^h<<7,h=u[d+7&7],h=h^h<<13,p^=h^h<<9,u[d]=p,c.i=d+1&7,p};function l(u,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],u.x=p,u.i=0,h=256;h>0;--h)u.next()}l(c,i)}function o(i,c){return c.x=i.x.slice(),c.i=i.i,c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(u.x&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xorshift7=a})(zD,n)})(ji)),ji.exports}var Hi={exports:{}},WD=Hi.exports,Um;function VD(){return Um||(Um=1,(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.w,d=c.X,h=c.i,p,f;return c.w=u=u+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,c.i=h,f+(u^u>>>16)|0};function l(u,d){var h,p,f,m,g,y=[],b=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,b=Math.max(b,d.length)),f=0,m=-32;m<b;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=y[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(y[(d&&d.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],h=y[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,y[f]=p^h;u.w=g,u.X=y,u.i=f}l(c,i)}function o(i,c){return c.i=i.i,c.w=i.w,c.X=i.X.slice(),c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(u.X&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xor4096=a})(WD,n)})(Hi)),Hi.exports}var qi={exports:{}},UD=qi.exports,Gm;function GD(){return Gm||(Gm=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.b,h=c.c,p=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-p|0,c.d=p<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,i===Math.floor(i)?(c.a=i/4294967296|0,c.b=i|0):l+=i;for(var u=0;u<l.length+20;u++)c.b^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.a=i.a,c.b=i.b,c.c=i.c,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.tychei=a})(UD,n)})(qi)),qi.exports}var Uu={exports:{}};const jD={},HD=Object.freeze(Object.defineProperty({__proto__:null,default:jD},Symbol.toStringTag,{value:"Module"})),Ep=mk(HD);var jm;function qD(){return jm||(jm=1,(function(n){(function(e,t){var s=this,r=256,o=6,a=52,i="random",c=t.pow(r,o),l=t.pow(2,a),u=l*2,d=r-1,h;function p(x,w,N){var C=[];w=w==!0?{entropy:!0}:w||{};var $=y(g(w.entropy?[x,v(e)]:x??b(),3),C),S=new f(C),T=function(){for(var E=S.g(o),F=c,O=0;E<l;)E=(E+O)*r,F*=r,O=S.g(1);for(;E>=u;)E/=2,F/=2,O>>>=1;return(E+O)/F};return T.int32=function(){return S.g(4)|0},T.quick=function(){return S.g(4)/4294967296},T.double=T,y(v(S.S),e),(w.pass||N||function(E,F,O,L){return L&&(L.S&&m(L,S),E.state=function(){return m(S,{})}),O?(t[i]=E,F):E})(T,$,"global"in w?w.global:this==t,w.state)}t["seed"+i]=p;function f(x){var w,N=x.length,C=this,$=0,S=C.i=C.j=0,T=C.S=[];for(N||(x=[N++]);$<r;)T[$]=$++;for($=0;$<r;$++)T[$]=T[S=d&S+x[$%N]+(w=T[$])],T[S]=w;(C.g=function(E){for(var F,O=0,L=C.i,z=C.j,M=C.S;E--;)F=M[L=d&L+1],O=O*r+M[d&(M[L]=M[z=d&z+F])+(M[z]=F)];return C.i=L,C.j=z,O})(r)}function m(x,w){return w.i=x.i,w.j=x.j,w.S=x.S.slice(),w}function g(x,w){var N=[],C=typeof x,$;if(w&&C=="object")for($ in x)try{N.push(g(x[$],w-1))}catch{}return N.length?N:C=="string"?x:x+"\0"}function y(x,w){for(var N=x+"",C,$=0;$<N.length;)w[d&$]=d&(C^=w[d&$]*19)+N.charCodeAt($++);return v(w)}function b(){try{var x;return h&&(x=h.randomBytes)?x=x(r):(x=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(x)),v(x)}catch{var w=s.navigator,N=w&&w.plugins;return[+new Date,s,N,s.screen,v(e)]}}function v(x){return String.fromCharCode.apply(0,x)}if(y(t.random(),e),n.exports){n.exports=p;try{h=Ep}catch{}}})([],Math)})(Uu)),Uu.exports}var Gu,Hm;function KD(){if(Hm)return Gu;Hm=1;var n=FD(),e=PD(),t=MD(),s=BD(),r=VD(),o=GD(),a=qD();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=s,a.xor4096=r,a.tychei=o,Gu=a,Gu}var Ux=KD();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gx{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Ux.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class XD{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ux.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YD(n,e=0,t=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new Gx(e,t,s,!1,r),a=Te(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const JD=_({randomNormal_:YD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n,e=0,t=1,s="float32",r){const o=Te(n,s),a=new XD(e,t,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const ii=_({randomUniform_:ZD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Td(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return A.runKernel(jh,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n){const t={input:D(n,"input","real")};return A.runKernel(Hh,t)}const wc=_({real_:QD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n){const t={x:D(n,"x","reciprocal")};return A.runKernel(Fa,t)}const jx=_({reciprocal_:eE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n){const t={x:D(n,"x","relu")};return A.runKernel(_a,t)}const kr=_({relu_:tE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n){const t={x:D(n,"x","relu6")};return A.runKernel(Pa,t)}const Ap=_({relu6_:nE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,e){const s={x:D(n,"x","reverse")},r={dims:e};return A.runKernel(Fl,s,r)}const gs=_({reverse_:sE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n){const t={x:D(n,"x","round")};return A.runKernel(La,t)}const Hx=_({round_:rE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n){const t={x:D(n,"x","rsqrt")};return A.runKernel(Ma,t)}const Rp=_({rsqrt_:oE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ne(n,e){if((es(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&es(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ei(n,[],[],e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n){const t={x:D(n,"x","selu")};return A.runKernel(za,t)}const Op=_({selu_:aE});function iE(n,e,t,s,r,o=[1,1],a="NHWC"){const i=D(n,"x","separableConv2d"),c=D(e,"depthwiseFilter","separableConv2d"),l=D(t,"pointwiseFilter","separableConv2d");let u=i,d=!1;if(i.rank===3&&(d=!0,u=V(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");I(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),I(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),I(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),I(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),I(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const h=c.shape[2],p=c.shape[3];I(l.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${l.shape[2]}.`);const f=si(u,c,s,r,a,o),g=Rs(f,l,1,"valid",a);return d?V(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const qx=_({separableConv2d_:iE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cE(n,e){const t=D(n,"x","setdiff1d"),s=D(e,"y","setdiff1d");I(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),I(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),I(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),a=new Set(o);let i=0;for(let u=0;u<r.length;u++)a.has(r[u])||i++;const c=new $t([i],t.dtype),l=new $t([i],"int32");for(let u=0,d=0;u<r.length;u++)a.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]}const lE=cE;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n){const t={x:D(n,"x","sign")};return A.runKernel(Va,t)}const Kx=_({sign_:uE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(n){const t={x:D(n,"x","sin")};return A.runKernel(Ba,t)}const Fp=_({sin_:dE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n){const t={x:D(n,"x","sinh")};return A.runKernel(Wa,t)}const _p=_({sinh_:hE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n,e,t){const s=D(n,"x","slice1d");return I(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),je(s,[e],[t])}const Pp=_({slice1d_:pE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n,e,t){const s=D(n,"x","slice2d");return I(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),je(s,e,t)}const Xx=_({slice2d_:fE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n,e,t){const s=D(n,"x","slice3d");return I(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),je(s,e,t)}const Lp=_({slice3d_:mE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n,e,t){const s=D(n,"x","slice4d");return I(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),je(s,e,t)}const vc=_({slice4d_:gE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n,e=-1){const t=D(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return A.runKernel(Bl,s,r)}const nu=_({softmax_:yE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n){I(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return A.runKernel(Dh,e)}const Mp=_({fft_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n){I(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return A.runKernel(Oh,e)}const kc=_({ifft_:xE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=V(n,[t,e]);s=kc(r)}else{const r=[t,2*(e-1)],o=V(wc(n),[t,e]),a=V(Cp(n),[t,e]),i=gs(je(o,[0,1],[t,e-2]),1),c=B(gs(je(a,[0,1],[t,e-2]),1),Ne(-1)),l=Ot([o,i],1),u=Ot([a,c],1),d=V(lr(l,u),[r[0],r[1]]);s=kc(d)}if(s=wc(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=V(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const Yx=_({irfft_:wE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n,e,t=0){const r={x:D(n,"x","split")},o={numOrSizeSplits:e,axis:t};return A.runKernel(zl,r,o)}const an=_({split_:vE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n,e){I(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,r=je(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,r=Ot([n,ht(f)],n.shape.length-1),t=e}else r=n;const o=Ee(r),a=V(lr(r,o),[s,t]),i=Mp(a),c=Math.floor(t/2)+1,l=wc(i),u=Cp(i),d=an(l,[c,t-c],l.shape.length-1),h=an(u,[c,t-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,V(lr(d[0],h[0]),p)}const Jx=_({rfft_:kE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(n){const t={x:D(n,"x","sqrt")};return A.runKernel(ja,t)}const zt=_({sqrt_:CE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n,e){let t=D(n,"a","squaredDifference"),s=D(e,"b","squaredDifference");[t,s]=ct(t,s),Se(t.shape,s.shape);const r={a:t,b:s},o={};return A.runKernel(Ha,r,o)}const Zx=_({squaredDifference_:NE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(n,e){const t=D(n,"x","squeeze");return V(t,br(t.shape,e).newShape)}const Xr=_({squeeze_:$E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n,e=0){const t=Jb(n,"tensors","stack","string_or_numeric");I(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&I(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return A.runKernel(Tl,s,r)}const Nn=_({stack_:IE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n,e=0){const s={x:D(n,"x","step")},r={alpha:e};return A.runKernel(Ja,s,r)}const ci=_({step_:SE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n,e,t,s,r=0,o=0,a=0,i=0,c=0){const u={x:D(n,"x","stridedSlice")},d={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:c};return A.runKernel(Zh,u,d)}const Qx=_({stridedSlice_:TE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n){const t={x:D(n,"x","tan")};return A.runKernel(Ka,t)}const e0=_({tan_:DE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ln(n,e){hh(n);const t=Qa(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ei(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ki(n,e,t){if(hh(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Qa(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ei(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n,e=1,t=!0){const s=D(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},a={k:e,sorted:t},[i,c]=A.runKernel(Qh,o,a);return{values:i,indices:c}}const t0=_({topk_:EE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(n,e=0,t=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Gx(e,t,s,!0,r),a=Te(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const zp=_({truncatedNormal_:AE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n,e=0){const t=D(n,"x","unique","string_or_numeric");I(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,a]=A.runKernel(tp,s,r);return{values:o,indices:a}}const Dd=_({unique_:RE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(n,e,t){const s=D(n,"x","unsortedSegmentSum"),r=D(e,"segmentIds","unsortedSegmentSum","int32");I(It(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:t};return A.runKernel(Ul,o,a)}const n0=_({unsortedSegmentSum_:OE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e=0){const t=D(n,"x","unstack","string_or_numeric");I(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return A.runKernel(Vl,s,r)}const Mn=_({unstack_:FE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n,e=!0,t,s){return A.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bp(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=Te(n,"int32"),r=Te([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=s.indexToLoc(t[o]),i=o*n.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function PE(n){const e=D(n,"condition","whereAsync","bool"),t=await e.data(),s=Bp(e.shape,t);return n!==e&&e.dispose(),s}const LE=PE;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,e="euclidean",t=null,s=!1){n=D(n,"x","norm");const r=s0(n,e,t);let o=r.shape;if(s){const a=Ie(t,n.shape);o=pt(r.shape,a)}return V(r,o)}function s0(n,e,t=null){if(n.rank===0)return Vt(n);if(n.rank!==1&&t===null)return s0(V(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return be(Vt(n),t);if(e===1/0)return Cn(Vt(n),t);if(e===-1/0)return Wo(Vt(n),t);if(e==="euclidean"||e===2)return zt(be(hr(Vt(n),Ne(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Cn(be(Vt(n),t[0]),t[1]-1);if(e===1/0)return Cn(be(Vt(n),t[1]),t[0]);if(e===-1/0)return Wo(be(Vt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return zt(be(Ye(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Wp=_({norm_:ME});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,e,t){const s=D(n,"indices","scatterND","int32"),r=D(e,"updates","scatterND");cx(r,s,t);const o={indices:s,updates:r},a={shape:t};return A.runKernel(Xh,o,a)}const BE=_({scatterND_:zE});function WE(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n,e,t,s=0){const r=D(n,"sparseIndices","sparseToDense","int32"),o=D(e,"sparseValues","sparseToDense"),a=D(s,"defaultValue","sparseToDense",o.dtype);WE(r,o,t,a);const i={sparseIndices:r,sparseValues:o,defaultValue:a},c={outputShape:t};return A.runKernel(Jh,i,c)}const r0=_({sparseToDense_:VE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e){const t=D(e,"indices","gatherND","int32"),r={params:D(n,"x","gatherND"),indices:t};return A.runKernel(Rh,r)}const GE=_({gatherND_:UE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,e){if(e==null)return n.shape.slice();if(Le(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(n,e,t,s){const r=D(n,"x","dropout");if(I(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),I(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof it?r.clone():r;const o=jE(r,t),a=1-e,i=ge(oi(se(ii(o,0,1,"float32",s),a)),a);return B(r,i)}const qE=_({dropout_:HE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e,t,s,r,o="NHWC",a){let i=n;n.rank===3&&(i=V(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=V(e,[1,e.shape[0],e.shape[1],e.shape[2]])),I(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),I(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),I(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=o==="NHWC"?i.shape[3]:i.shape[1],u=o==="NHWC"?c.shape[3]:c.shape[1];I(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),I(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),a!=null&&I(It(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const d={x:i,dy:c},h={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:t};return A.runKernel(wh,d,h)}const Vp=_({conv2DBackpropFilter_:KE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return B(n,ci(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function ru(n,e){let t=e;const s=kt(n.shape,e.shape);return s.length>0&&(t=be(t,s)),V(t,n.shape)}function ou(n,e,t,s){if(e==="linear")return n;if(e==="relu")return kr(n);if(e==="elu")return ri(n);if(e==="relu6")return Ap(n);if(e==="prelu")return tu(n,t);if(e==="leakyrelu")return Xl(n,s);throw new Error(`Unknown fused activation ${e}.`)}const au=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(c=c||"linear",au(A.state.gradientDepth,c)===!1){let w=Rs(n,e,t,s,r,o,a);return i!=null&&(w=se(w,i)),ou(w,c,l,u)}const d=D(n,"x","conv2d"),h=D(e,"filter","conv2d");let p=d,f=!1;d.rank===3&&(f=!0,p=V(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),I(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),a!=null&&I(It(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),I(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),I(_t(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),I(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);const m=St(p.shape,h.shape,t,o,s,a);let g;i!=null&&(g=D(i,"bias","fused conv2d"),[g]=ct(g,d),Se(m.outShape,g.shape));let y;l!=null&&(y=D(l,"prelu weights","fused conv2d"));const b=(w,N)=>{const[C,$,S,T]=N,E=su(w,S,c);I(As(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const F=bp($.shape,E,C,t,s),O=Vp($,E,C.shape,t,s),L=[F,O];if(T!=null){const z=ru(T,E);L.push(z)}return L},v={x:p,filter:h,bias:g,preluActivationWeights:y},x={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:c,leakyreluAlpha:u};return i==null?Os((N,C,$)=>{let S=A.runKernel(dc,v,x);return $([C,N,S]),f&&(S=V(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:b}})(p,h):Os((N,C,$,S)=>{let T=A.runKernel(dc,v,x);return S([C,N,T,$]),f&&(T=V(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:b}})(p,h,g)}const o0=_({fusedConv2d_:XE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,e,t,s,r,o=[1,1],a){let i=n;n.rank===3&&(i=V(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:c},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:t};return A.runKernel(Ih,l,u)}const a0=_({depthwiseConv2dNativeBackpropFilter_:YE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n,e,t,s,r,o=[1,1],a){let i=e,c=!1;e.rank===3&&(c=!0,i=V(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:t},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},d=A.runKernel(Sh,l,u);return c?V(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const i0=_({depthwiseConv2dNativeBackpropInput_:JE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(au(A.state.gradientDepth,c)===!1){let w=si(n,e,t,s,r,o,a);return i!=null&&(w=se(w,i)),ou(w,c,l,u)}const d=D(n,"x","depthwiseConv2d"),h=D(e,"filter","depthwiseConv2d");let p=d,f=!1;d.rank===3&&(f=!0,p=V(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),I(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),I(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),o==null&&(o=[1,1]),I(_t(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),a!=null&&I(It(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${s}.`);const m=St(p.shape,h.shape,t,o,s,a,!0);let g;i!=null&&(g=D(i,"bias","fused conv2d"),[g]=ct(g,d),Se(m.outShape,g.shape));let y;l!=null&&(y=D(l,"prelu weights","fused depthwiseConv2d"));const b=(w,N)=>{I(As(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[C,$,S,T]=N,E=su(w,S,c),F=i0($.shape,E,C,t,s,o,a),O=a0($,E,C.shape,t,s,o,a);if(T!=null){const L=ru(g,E);return[F,O,L]}return[F,O]},v={x:p,filter:h,bias:g,preluActivationWeights:y},x={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:c,leakyreluAlpha:u};return i==null?Os((N,C,$)=>{let S=A.runKernel(hc,v,x);return $([C,N,S]),f&&(S=V(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:b}})(p,h):Os((N,C,$,S)=>{let T=A.runKernel(hc,v,x);return S([C,N,T,$]),f&&(T=V(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:b}})(p,h,g)}const QE=_({fusedDepthwiseConv2d_:ZE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(au(A.state.gradientDepth,o)===!1){let T=_e(n,e,t,s);return r!=null&&(T=se(T,r)),ou(T,o,a,i)}let c=D(n,"a","fused matMul"),l=D(e,"b","fused matMul");[c,l]=ct(c,l);const u=t?c.shape[c.rank-2]:c.shape[c.rank-1],d=s?l.shape[l.rank-1]:l.shape[l.rank-2],h=t?c.shape[c.rank-1]:c.shape[c.rank-2],p=s?l.shape[l.rank-2]:l.shape[l.rank-1],f=c.shape.slice(0,-2),m=l.shape.slice(0,-2),g=q(f),y=q(m);I(c.rank>=2&&l.rank>=2&&c.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`),I(Le(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${c.shape} and ${l.shape} must match.`),I(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${t} and transposeB=${s} must match.`);const b=c.shape.slice(0,-2).concat([h,p]),v=t?V(c,[g,u,h]):V(c,[g,h,u]),x=s?V(l,[y,p,d]):V(l,[y,d,p]);let w;r!=null&&(w=D(r,"bias","fused matMul"),[w]=ct(w,c),Se(b,w.shape));let N;a!=null&&(N=D(a,"prelu weights","fused matMul"));const C=(T,E)=>{const[F,O,L,z]=E,M=su(V(T,L.shape),L,o);let K,U;if(!t&&!s?(K=_e(M,O,!1,!0),U=_e(F,M,!0,!1)):!t&&s?(K=_e(M,O,!1,!1),U=_e(M,F,!0,!1)):t&&!s?(K=_e(O,M,!1,!0),U=_e(F,M,!1,!1)):(K=_e(O,M,!0,!0),U=_e(M,F,!0,!0)),r!=null){const H=ru(z,M);return[K,U,H]}else return[K,U]},$={a:v,b:x,bias:w,preluActivationWeights:N},S={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?Os((E,F,O)=>{const L=A.runKernel(uc,$,S);return O([E,F,L]),{value:V(L,b),gradFunc:C}})(v,x):Os((E,F,O,L)=>{const z=A.runKernel(uc,$,S);return L([E,F,z,O]),{value:V(z,b),gradFunc:C}})(v,x,w)}const Ed=_({fusedMatMul_:eA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,e,t,s,r="bilinear",o=0){const a=D(n,"image","cropAndResize"),i=D(e,"boxes","cropAndResize","float32"),c=D(t,"boxInd","cropAndResize","int32"),l=i.shape[0];I(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),I(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),I(c.rank===1&&c.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),I(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),I(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),I(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:a,boxes:i,boxInd:c},d={method:r,extrapolationValue:o,cropSize:s};return A.runKernel(Ch,u,d)}const nA=_({cropAndResize_:tA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n){const e=D(n,"image","flipLeftRight","float32");I(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return A.runKernel(Ah,t,{})}const rA=_({flipLeftRight_:sA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n,e,t=0,s=.5){const r=D(n,"image","rotateWithOffset","float32");I(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:e,fillValue:t,center:s};return A.runKernel(np,o,a)}const aA=_({rotateWithOffset_:oA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),I(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),I(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),I(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),I(e.rank===1,()=>"scores must be a 1D tensor"),I(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),I(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=D(n,"boxes","nonMaxSuppression"),a=D(e,"scores","nonMaxSuppression"),i=lo(o,a,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return A.runKernel(Wh,{boxes:o,scores:a},c)}const cA=_({nonMaxSuppression_:iA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e,t){const s=uA(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function uA(n,e,t){return hA(n,e,t||dA)}function dA(n,e){return n>e?1:n<e?-1:0}function hA(n,e,t){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=t(e,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Up(n,e,t,s,r){return Hp(n,e,t,s,r,0)}function Gp(n,e,t,s,r,o){return Hp(n,e,t,s,r,0,!1,o,!0)}function jp(n,e,t,s,r,o){return Hp(n,e,t,s,r,o,!0)}function Hp(n,e,t,s,r,o,a=!1,i=!1,c=!1){const l=[];for(let g=0;g<e.length;g++)e[g]>r&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(qm);const u=o>0?-.5/o:0,d=[],h=[];for(;d.length<t&&l.length>0;){const g=l.pop(),{score:y,boxIndex:b,suppressBeginIndex:v}=g;if(y<r)break;let x=!1;for(let w=d.length-1;w>=v;--w){const N=pA(n,b,d[w]);if(N>=s){x=!0;break}if(g.score=g.score*fA(s,u,N),g.score<=r)break}g.suppressBeginIndex=d.length,x||(g.score===y?(d.push(b),h.push(g.score)):g.score>r&&lA(l,g,qm))}const p=d.length,f=t-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=h),c&&(m.validOutputs=p),m}function pA(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-o)*(c-a),f=(d-l)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(o,l),g=Math.max(a,u),y=Math.min(i,d),b=Math.min(c,h),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function fA(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function qm(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function mA(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=D(n,"boxes","nonMaxSuppressionAsync"),a=D(e,"scores","nonMaxSuppressionAsync"),i=lo(o,a,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([o.data(),a.data()]),l=c[0],u=c[1],{selectedIndices:d}=Up(l,u,t,s,r);return o!==n&&o.dispose(),a!==e&&a.dispose(),Ln(d,"int32")}const gA=mA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=D(n,"boxes","nonMaxSuppression"),i=D(e,"scores","nonMaxSuppression"),c=lo(a,i,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l={boxes:a,scores:i},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},d=A.runKernel(Uh,l,u);return{selectedIndices:d[0],selectedScores:d[1]}}const bA=_({nonMaxSuppressionWithScore_:yA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xA(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=D(n,"boxes","nonMaxSuppressionAsync"),i=D(e,"scores","nonMaxSuppressionAsync"),c=lo(a,i,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l=await Promise.all([a.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h,selectedScores:p}=jp(u,d,t,s,r,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ln(h,"int32"),selectedScores:Ln(p)}}const wA=xA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=D(n,"boxes","nonMaxSuppression"),i=D(e,"scores","nonMaxSuppression"),c=lo(a,i,t,s,r,null),l=c.maxOutputSize,u=c.iouThreshold,d=c.scoreThreshold,h={boxes:a,scores:i},p={maxOutputSize:l,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:o},f=A.runKernel(Vh,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const kA=_({nonMaxSuppressionPadded_:vA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function CA(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=D(n,"boxes","nonMaxSuppressionAsync"),i=D(e,"scores","nonMaxSuppressionAsync"),c=lo(a,i,t,s,r,null),l=c.maxOutputSize,u=c.iouThreshold,d=c.scoreThreshold,[h,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Gp(h,p,l,u,d,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ln(f,"int32"),validOutputs:Ne(m,"int32")}}const NA=CA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n,e,t=!1,s=!1){const r=D(n,"images","resizeBilinear");I(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),I(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),I(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=V(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},l=A.runKernel(Ol,i,c);return a?V(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const c0=_({resizeBilinear_:$A});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,e,t=!1,s=!1){const r=D(n,"images","resizeNearestNeighbor");I(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),I(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),I(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),I(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=V(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},l=A.runKernel(Rl,i,c);return a?V(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const l0=_({resizeNearestNeighbor_:IA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n,e,t="nearest",s="constant",r=0,o){const a=D(n,"image","transform","float32"),i=D(e,"transforms","transform","float32");I(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),I(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),I(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const c={image:a,transforms:i},l={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return A.runKernel(ep,c,l)}const TA=_({transform_:SA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n,e,t){I(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),I(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=D(n,"a","bandPart");I(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=o),t<0&&(t=a);const i=V(Td(0,o,1,"int32"),[-1,1]),c=Td(0,a,1,"int32"),l=xe(i,c),u=ts(io(l,Ne(+e,"int32")),vr(l,Ne(-t,"int32"))),d=ht([o,a],s.dtype);return V(Nn(Mn(V(s,[-1,o,a])).map(h=>un(u,h,d))),r)}const EA=_({bandPart_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n){let e;if(Array.isArray(n)){e=!1,I(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)I(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=an(n,n.shape[0],0).map(r=>Xr(r,[0]));I(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(A.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=B(be(B(t[a],o)),t[a]);o=xe(o,i)}return ge(o,Wp(o,"euclidean"))}));return e?Nn(t,0):t}const RA=_({gramSchmidt_:AA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n,e=!1){if(I(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Km(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,l)=>c*l),s=Mn(V(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(c=>{const[l,u]=Km(c,e);r.push(l),o.push(u)});const a=V(Nn(r,0),n.shape),i=V(Nn(o,0),n.shape);return[a,i]}}function Km(n,e=!1){return A.tidy(()=>{I(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=Px(t),o=nr(n);const a=Ki([[1]],[1,1]);let i=nr(a);const c=t>=s?s:t;for(let l=0;l<c;++l){const u=o,d=i,h=r;[i,o,r]=A.tidy(()=>{const p=je(o,[l,l],[t-l,1]),f=Wp(p),m=je(o,[l,l],[1,1]),g=un(rs(m,0),Ki([[-1]]),Ki([[1]])),y=xe(m,B(g,f)),b=ge(p,y);b.shape[0]===1?i=nr(a):i=Ot([a,je(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const v=bt(ge(_e(g,y),f)),x=je(o,[l,0],[t-l,s]),w=B(v,i),N=Ue(i);if(l===0)o=xe(x,_e(w,_e(N,x)));else{const S=xe(x,_e(w,_e(N,x)));o=Ot([je(o,[0,0],[l,s]),S],0)}const C=Ue(w),$=je(r,[0,l],[t,r.shape[1]-l]);if(l===0)r=xe($,_e(_e($,i),C));else{const S=xe($,_e(_e($,i),C));r=Ot([je(r,[0,0],[t,l]),S],1)}return[i,o,r]}),ve([u,d,h])}return!e&&t>s&&(r=je(r,[0,0],[t,s]),o=je(o,[0,0],[s,s])),[r,o]})}const FA=_({qr_:OA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or={flipLeftRight:rA,resizeNearestNeighbor:l0,resizeBilinear:c0,rotateWithOffset:aA,cropAndResize:nA,nonMaxSuppression:cA,nonMaxSuppressionAsync:gA,nonMaxSuppressionWithScore:bA,nonMaxSuppressionWithScoreAsync:wA,nonMaxSuppressionPadded:kA,nonMaxSuppressionPaddedAsync:NA,transform:TA},_A={bandPart:EA,gramSchmidt:RA,qr:FA};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Us extends oo{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return ve(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return H2(e,t)}dispose(){this.iterations_!=null&&ve(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ne(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Us,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qp extends Us{constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:P(()=>Ee(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:P(()=>Ee(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const c=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;P(()=>{const u=se(B(c,this.rho),B(Ye(i),1-this.rho)),d=B(ge(zt(se(l,this.epsilon)),zt(se(c,this.epsilon))),i),h=se(B(l,this.rho),B(Ye(d),1-this.rho));c.assign(u),l.assign(h);const p=se(B(d,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ve(this.accumulatedGrads.map(e=>e.variable)),ve(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}qp.className="Adadelta";Z(qp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kp extends Us{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:P(()=>kp(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const i=this.accumulatedGrads[r].variable;P(()=>{const c=se(i,Ye(a));i.assign(c);const l=se(B(ge(a,zt(se(c,A.backend.epsilon()))),-this.learningRate),o);o.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ve(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Kp.className="Adagrad";Z(Kp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xp extends Us{constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],P(()=>{this.accBeta1=Ne(t).variable(),this.accBeta2=Ne(s).variable()}),r==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);P(()=>{const s=xe(1,this.accBeta1),r=xe(1,this.accBeta2);t.forEach((o,a)=>{const i=A.registeredVariables[o],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:P(()=>Ee(i).variable(c))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:P(()=>Ee(i).variable(c))});const l=Array.isArray(e)?e[a].tensor:e[o];if(l==null)return;const u=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,h=se(B(u,this.beta1),B(l,1-this.beta1)),p=se(B(d,this.beta2),B(Ye(l),1-this.beta2)),f=ge(h,s),m=ge(p,r);u.assign(h),d.assign(p);const g=se(B(ge(f,se(zt(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(B(this.accBeta1,this.beta1)),this.accBeta2.assign(B(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ve(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ve(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),P(()=>{this.accBeta1.assign(hr(this.beta1,this.iterations_+1)),this.accBeta2.assign(hr(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Xp.className="Adam";Z(Xp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yp extends Us{constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],P(()=>{this.iteration=Ne(0).variable(),this.accBeta1=Ne(t).variable()}),r==null&&(this.epsilon=A.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);P(()=>{const s=xe(1,this.accBeta1),r=ge(-this.learningRate,se(B(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=A.registeredVariables[o],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Ee(i).variable(c)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Ee(i).variable(c)});const l=Array.isArray(e)?e[a].tensor:e[o];if(l==null)return;const u=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,h=se(B(u,this.beta1),B(l,1-this.beta1)),p=B(d,this.beta2),f=Vt(l),m=ws(p,f);u.assign(h),d.assign(m);const g=se(B(ge(r,s),ge(h,se(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(se(this.iteration,1)),this.accBeta1.assign(B(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ve(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ve(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Yp.className="Adamax";Z(Yp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iu extends Us{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const a=A.registeredVariables[s];P(()=>{const i=se(B(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=At(Ne(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}iu.className="SGD";Z(iu);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jp extends iu{constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Ne(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:P(()=>Ee(o).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(e)?e[r].tensor:e[s];i!=null&&P(()=>{let c;const l=se(B(this.m,a),i);this.useNesterov?c=se(B(this.c,se(i,B(l,this.m))),o):c=se(B(this.c,l),o),a.assign(l),o.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ve(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Jp.className="Momentum";Z(Jp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zp extends Us{constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=A.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=A.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:P(()=>Ee(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:P(()=>Ee(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:P(()=>Ee(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const c=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;P(()=>{const u=se(B(c,this.decay),B(Ye(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,h=se(B(d,this.decay),B(i,1-this.decay)),p=ge(B(i,this.learningRate),zt(xe(u,se(Ye(h),this.epsilon)))),f=se(B(l,this.momentum),p);c.assign(u),d.assign(h),l.assign(f);const m=xe(o,f);o.assign(m)}else{const d=se(B(c,this.decay),B(Ye(i),1-this.decay)),h=se(B(l,this.momentum),ge(B(i,this.learningRate),zt(se(d,this.epsilon))));c.assign(d),l.assign(h);const p=xe(o,h);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ve(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ve(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ve(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Zp.className="RMSProp";Z(Zp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qs{static sgd(e){return new iu(e)}static momentum(e,t,s=!1){return new Jp(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new Zp(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new Xp(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new qp(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new Yp(e,t,s,r,o)}static adagrad(e,t=.1){return new Kp(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar={sgd:qs.sgd,momentum:qs.momentum,adadelta:qs.adadelta,adagrad:qs.adagrad,rmsprop:qs.rmsprop,adamax:qs.adamax,adam:qs.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function ju(){return new Promise(n=>PA(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(n,e){const t=n[0].length;n.forEach((r,o)=>{I(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),I(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<t;a++)I(a===e||r[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function ps(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ef=30;function cu(n){return n<=ef?n:fd(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tf(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/e[a],e[a]]);r=r.concat(n.slice(o+1))}return r}function ui(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function di(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function nf(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function sf(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lu=1.7580993408473768,uu=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rf=.3275911,of=.254829592,af=-.284496736,cf=1.421413741,lf=-1.453152027,uf=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(...n){Y().getBool("IS_TEST")||console.warn(...n)}function LA(...n){Y().getBool("IS_TEST")||console.log(...n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ys(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function u0(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function d0(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function h0(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function df(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function p0(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function f0(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function m0(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}function hf(n,e,t=0){let s=[];if(typeof e=="number")I(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);I(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,c)=>c>0?i+c:i);e[o]=n.shape[t]-a}I(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g0(n,e){let t=!1,s;for(n<=ef?(s=n,t=!0):s=fd(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=fd(n,s+1);return s}function y0(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function pf(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],i=[];let c=1,l=1,u=1;for(let d=0;d<s;++d)i.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<t;d++)i.push(n.shape[d]),l*=n.shape[d];for(let d=s;d<r;d++)i.push(e.shape[d]);for(let d=t+1;d<o;d++)i.push(n.shape[d]),u*=n.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:a,outputShape:i}}const MA=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:pf,computeOutShape:y0,segOpComputeOptimalWindowSize:g0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ff(n){try{return n.map(e=>Hr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function b0(n){return n.map(e=>Za(e))}const zA=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:of,ERF_A2:af,ERF_A3:cf,ERF_A4:lf,ERF_A5:uf,ERF_P:rf,PARALLELIZE_THRESHOLD:ef,SELU_SCALE:uu,SELU_SCALEALPHA:lu,applyActivation:ou,assertAndGetBroadcastShape:Se,assertAxesAreInnerMostDims:Pt,assertParamsConsistent:Qp,assignToTypedArray:p0,axesAreInnerMostDims:Ip,calculateShapes:ti,combineLocations:zx,complexWithEvenIndex:d0,complexWithOddIndex:h0,computeConv2DInfo:St,computeConv3DInfo:Ws,computeDefaultPad:mp,computeDilation2DInfo:ni,computeOptimalWindowSize:cu,computeOutAndReduceShapes:Tt,computeOutShape:ps,computePool2DInfo:In,computePool3DInfo:bs,convertConv2DDataFormat:xs,eitherStridesOrDilationsAreOne:_t,expandShapeToKeepDim:pt,exponent:m0,exponents:f0,fromStringArrayToUint8:b0,fromUint8ToStringArray:ff,getAxesPermutation:ut,getBroadcastDims:zo,getComplexWithIndex:df,getFusedBiasGradient:ru,getFusedDyActivation:su,getImageCenter:tf,getInnerMostAxes:ft,getPermuted:ui,getReductionAxes:kt,getReshaped:li,getReshapedPermuted:di,getSliceBeginCoords:nf,getSliceSize:sf,getUndoAxesPermutation:co,log:LA,mergeRealAndImagArrays:ys,prepareAndValidate:cp,prepareSplitSize:hf,segment_util:MA,shouldFuse:au,slice_util:eT,splitRealAndImagArrays:u0,tupleValuesAreOne:As,upcastType:ln,validateInput:cx,validateUpdateShape:ix,warn:uo},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x0={kernelName:Gc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,ci(de(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA={kernelName:sa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Ye(de(t,"float32")),r=zt(xe(Ne(1),s));return bt(ge(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA={kernelName:ra,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=zt(xe(Ye(de(t,"float32")),1));return ge(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA={kernelName:ro,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(t.shape,s.shape);return{a:()=>{let i=n;const c=kt(t.shape,r);return c.length>0&&(i=be(i,c)),V(i,t.shape)},b:()=>{let i=n;const c=kt(s.shape,r);return c.length>0&&(i=be(i,c)),V(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA={kernelName:jc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA={kernelName:Hc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA={kernelName:qc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ee(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA={kernelName:oa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,zt(xe(Ne(1),Ye(de(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA={kernelName:aa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=zt(se(Ne(1),Ye(de(t,"float32"))));return ge(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA={kernelName:la,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(t.shape,s.shape);return{a:()=>{const i=se(Ye(t),Ye(s));let c=B(n,ge(s,i));const l=kt(t.shape,r);return l.length>0&&(c=be(c,l)),V(c,t.shape)},b:()=>{const i=se(Ye(t),Ye(s));let c=bt(B(n,ge(t,i)));const l=kt(s.shape,r);return l.length>0&&(c=be(c,l)),V(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA={kernelName:ia,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,se(Ye(de(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YA={kernelName:ca,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,xe(Ne(1),Ye(de(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,e,t,s,r,o){const a=D(n,"dy","avgPool3dGrad"),i=D(e,"input","avgPool3dGrad");let c=a,l=i,u=!1;i.rank===4&&(u=!0,c=V(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=V(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),I(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),o!=null&&I(It(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const d={dy:c,input:l},h={filterSize:t,strides:s,pad:r,dimRoundingMode:o},p=A.runKernel(yh,d,h);return u?V(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const ZA=_({avgPool3dGrad_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QA={kernelName:Xc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:i}=t;return{x:()=>ZA(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eR(n,e,t,s,r){const o=D(n,"dy","avgPoolGrad"),a=D(e,"input","avgPoolGrad");I(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,c=o,l=!1;a.rank===3&&(l=!0,i=V(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=V(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),I(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const u={dy:c,input:i},d={filterSize:t,strides:s,pad:r},h=A.runKernel(gh,u,d);return l?V(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const tR=_({avgPoolGrad_:eR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR={kernelName:Kc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:a}=t;return{x:()=>tR(n,s,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR={kernelName:Yc,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:a}=t;return!o&&!a?{a:()=>_e(n,r,!1,!0),b:()=>_e(s,n,!0,!1)}:!o&&a?{a:()=>_e(n,r,!1,!1),b:()=>_e(n,s,!0,!1)}:o&&!a?{a:()=>_e(r,n,!1,!0),b:()=>_e(s,n,!1,!1)}:{a:()=>_e(r,n,!0,!0),b:()=>_e(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rR={kernelName:Jc,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>eu(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR={kernelName:JI,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,a=Array.from(o);for(let c=r.length-1;c>=0;c--)if(r[c]===o[c])a[c]=1;else if(r[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const i=[];for(let c=0;c<a.length;c++)a[c]>1&&i.push(c);return{x:()=>be(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR={kernelName:ua,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR={kernelName:da,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR={kernelName:ha,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>un(ts(vr(s,r),io(s,o)),n,Ee(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lR={kernelName:Zc,inputsToSave:["x"],gradFunc:x0.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR={kernelName:Qc,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(c=>c.shape),{axis:r}=t,o=Ie(r,e[0].shape)[0],a=s.map(c=>c[o]);return an(n,a,o).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR={kernelName:el,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:a,pad:i,dataFormat:c}=t;return I(As(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>bp(s.shape,n,r,a,i,c),filter:()=>Vp(s,n,r.shape,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR={kernelName:tl,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:a,dataFormat:i,dimRoundingMode:c}=t;return{dy:()=>Rs(n,r,o,a,i,1,c),filter:()=>Vp(n,s,r.shape,o,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,e,t,s,r){let o=n;n.rank===4&&(o=V(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=V(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),I(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),I(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),I(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),I(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),I(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const i={x:o,dy:a},c={strides:s,pad:r,filterShape:t};return A.runKernel(vh,i,c)}const fR=_({conv3DBackpropFilter_:pR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR={kernelName:nl,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;I(As(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=e;return{x:()=>a2(a.shape,n,i,r,o),filter:()=>fR(a,n,i.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gR={kernelName:pa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(bt(Fp(de(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yR={kernelName:fa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(_p(de(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR={kernelName:sl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:a}=t;return{x:()=>{const i=ut([r],s.rank);let c=vp(n,r,o,!a);return i!=null&&(c=Ue(c,i)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xR={kernelName:rl,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=t,i=s??[1,1];I(As(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[c,l]=e;return I(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),I(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),I(c.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),I(_t(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),a!=null&&I(It(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`),{x:()=>i0(c.shape,n,l,r,o,s,a),filter:()=>a0(c,n,l.shape,r,o,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wR={kernelName:ol,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>A.runKernel(md,o,t),filter:()=>A.runKernel(gd,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR={kernelName:ga,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>A.runKernel(Th,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kR={kernelName:ya,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=B(ms(bt(Ye(t))),2/Math.sqrt(Math.PI));return{x:()=>B(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR={kernelName:ba,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NR={kernelName:il,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>V(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R={kernelName:xa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,ms(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IR={kernelName:wa,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SR={kernelName:va,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(t.shape,s.shape);return{a:()=>{const i=ge(n,de(s,"float32")),c=kt(t.shape,r);return c.length>0?V(be(i,c),t.shape):i},b:()=>{let i=B(n,de(t,"float32"));const c=kt(s.shape,r);c.length>0&&(i=V(be(i,c),s.shape));const l=Ye(s);return bt(ge(i,de(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TR={kernelName:cl,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,a,i]=e,c=i??Ne(1),l=kt(o.shape,r.shape),u=[];if(o.rank===1){for(let x=0;x<r.shape.length-1;++x)u.push(r.shape[x]);u.push(1)}const d=xe(r,o),h=B(n,c),p=Rp(se(a,Ne(s))),f=B(B(B(p,p),p),Ne(-.5));return{x:()=>o.rank===1?V(B(B(n,rr(V(p,[1,1,1,o.shape[0]]),u)),c),r.shape):V(B(B(n,p),c),r.shape),mean:()=>{let x=B(B(p,Ne(-1)),h);return o.rank===1&&(x=be(x,l)),V(x,o.shape)},variance:()=>{let x=B(B(f,d),h);return o.rank===1&&(x=be(x,l)),V(x,o.shape)},scale:()=>{const x=B(d,p);let w=B(n,x);return o.rank===1&&(w=be(w,l)),V(w,o.shape)},offset:()=>{let x=n;return o.rank===1&&(x=be(x,l)),V(x,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DR={kernelName:ll,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o}=t,a=Ie(o,s.shape)[0];return{x:()=>{const c=s.shape,l=r.size,u=c.slice(0,a),d=u.length,h=c.slice(o,c.length).slice(1),p=h.length,f=Xm(0,d),m=Xm(d+1,d+1+p),g=Ym([u,[l],h]),y=V(n,g),b=V(r,[l]),v=Ym([[d],f,m]),x=Ue(y,v);let w=n0(x,b,s.shape[a]);const N=co(v);return w=Ue(w,N),w},indices:()=>r}}};function Xm(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function Ym(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER={kernelName:ka,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Ee(t),b:()=>Ee(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AR={kernelName:Ca,gradFunc:n=>({x:()=>de(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR={kernelName:Na,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OR={kernelName:$a,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FR={kernelName:Ia,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _R={kernelName:dl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=rs(s,0);return{x:()=>un(o,n,B(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PR={kernelName:Ta,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,se(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LR={kernelName:Sa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,de(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR={kernelName:ZI,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const a=ms(s);return xe(n,B(be(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(n,e,t,s=5,r=1,o=1,a=.5){const i={x:n,y:e,dy:t},c={depthRadius:s,bias:r,alpha:o,beta:a};return A.runKernel(Ph,i,c)}const BR=_({localResponseNormalizationBackprop_:zR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WR={kernelName:yl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:a,alpha:i,beta:c}=t;return{x:()=>BR(s,r,n,o,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w0(n,e,t,s){return e.rank<t.rank&&(e=V(e,pt(e.shape,s))),n.rank<t.rank&&(n=V(n,pt(n.shape,s))),{x:()=>B(n,de(wr(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jm={kernelName:bl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],a=e[1],i=Ie(r,o.shape),c=w0(n,a,o,i);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VR={kernelName:Da,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>B(n,de(vr(t,s),"float32")),b:()=>B(n,de(Np(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(n,e,t,s,r,o,a){const i=D(n,"dy","maxPool3dGrad"),c=D(e,"input","maxPool3dGrad"),l=D(t,"output","maxPool3dGrad");let u=i,d=c,h=l,p=!1;c.rank===4&&(p=!0,u=V(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=V(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=V(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),I(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),I(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),I(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),a!=null&&I(It(o),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const f={dy:u,input:d,output:h},m={filterSize:s,strides:r,pad:o,dimRoundingMode:a},g=A.runKernel(Mh,f,m);return p?V(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const GR=_({maxPool3dGrad_:UR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jR={kernelName:wl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=t;return{x:()=>GR(n,s,r,o,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e,t,s,r,o,a){const i=D(n,"dy","maxPoolGrad"),c=D(e,"input","maxPoolGrad"),l=D(t,"output","maxPoolGrad");I(c.rank===i.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${i.rank})`),I(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),I(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),a!=null&&I(It(o),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const u={dy:i,input:c,output:l},d={filterSize:s,strides:r,pad:o,dimRoundingMode:a};return A.runKernel(Lh,u,d)}const qR=_({maxPoolGrad_:HR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KR={kernelName:xl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:a,pad:i}=t;return{x:()=>qR(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XR={kernelName:vl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=Ie(r,s.shape),i=Tt(s.shape,o)[1],c=q(i);return{x:()=>{const u=s.shape.slice();o.forEach(p=>{u[p]=1});const d=V(n,u);return ge(B(d,Vs(s.shape,"float32")),c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YR={kernelName:kl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,a]=e,i=Ie(r,o.shape),c=w0(n,a,o,i);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JR={kernelName:Ea,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>B(n,de(io(t,s),"float32")),b:()=>B(n,de(rs(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZR={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(a=>a[0]);return{x:()=>je(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QR={kernelName:Aa,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(t.shape,s.shape);return{a:()=>{const i=kt(t.shape,r);return i.length>0?V(be(n,i),t.shape):n},b:()=>{const i=B(n,bt(oi(ge(t,s)))),c=kt(s.shape,r);return c.length>0?V(be(i,c),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eO={kernelName:Ra,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(t.shape,s.shape);return{a:()=>{const i=B(n,de(s,"float32")),c=kt(t.shape,r);return c.length>0?V(be(i,c),t.shape):i},b:()=>{const i=B(n,de(t,"float32")),c=kt(s.shape,r);return c.length>0?V(be(i,c),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO={kernelName:Nl,gradFunc:n=>({x:()=>bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO={kernelName:Sl,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>ht(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sO={kernelName:Il,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rO={kernelName:Tl,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return Mn(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zm={kernelName:Dl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(a=>a[0]);return{x:()=>je(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO={kernelName:Oa,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,a=s,i=Se(o.shape,a.shape);return{a:()=>{const u=de(a,"float32");let d=B(n,B(u,hr(o,xe(u,Ne(1)))));const h=kt(o.shape,i);return h.length>0&&(d=be(d,h)),V(d,o.shape)},b:()=>{const u=rs(o,0),d=un(u,Pn(o),Ee(o));let h=B(n,B(r,d));const p=kt(a.shape,i);return p.length>0&&(h=be(h,p)),V(h,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aO={kernelName:El,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=rs(t,0);return{x:()=>un(r,n,B(n,s)),alpha:()=>{let o=un(r,Ee(n),B(n,t));const a=kt(s.shape,n.shape);return a.length>0&&(o=be(o,a)),V(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iO={kernelName:ma,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(t.shape,s.shape);return{a:()=>{const i=ge(n,de(s,"float32")),c=kt(t.shape,r);return c.length>0?V(be(i,c),t.shape):i},b:()=>{let i=B(n,de(t,"float32"));const c=kt(s.shape,r);c.length>0&&(i=V(be(i,c),s.shape));const l=Ye(s);return bt(ge(i,de(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cO={kernelName:Fa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,bt(Ye(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lO={kernelName:Pa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=B(io(t,6),ci(t));return{x:()=>B(n,de(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uO={kernelName:_a,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,de(ci(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO={kernelName:Al,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>V(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO={kernelName:Ol,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>A.runKernel(Kh,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO={kernelName:Rl,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>A.runKernel(qh,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO={kernelName:Fl,gradFunc:(n,e,t)=>{const{dims:s}=t,r=Ie(s,n.shape);return{x:()=>gs(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO={kernelName:La,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gO={kernelName:Ma,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>bt(ge(n,B(hr(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yO={kernelName:_l,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>de(Ee(t),"float32"),t:()=>B(n,de(t,n.dtype)),e:()=>B(n,de(Yl(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO={kernelName:za,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=rs(t,Ne(0)),r=Ne(lu),o=Ne(uu),a=B(n,o),i=B(B(n,r),ms(de(t,"float32")));return un(s,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xO={kernelName:Ua,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,B(t,xe(Ne(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO={kernelName:Va,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(Kl(de(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kO={kernelName:Wa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(wp(de(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CO={kernelName:Pl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,a=s.shape,[i,c]=jl(s,r,o),l=[];for(let u=0;u<n.rank;u++)l.push([i[u],a[u]-i[u]-c[u]]);return{x:()=>Ql(n,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NO={kernelName:Bl,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,a=B(n,s);return{logits:()=>xe(a,B(be(a,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O={kernelName:Ga,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,ao(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qm={kernelName:Ml,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>ql(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eg={kernelName:zl,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>Ot(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IO={kernelName:ja,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,B(zt(de(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SO={kernelName:Yh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(n,B(de(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO={kernelName:Ha,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ne(2);return{a:()=>B(n,B(r,xe(t,s))),b:()=>B(n,B(r,xe(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO={kernelName:Ja,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EO={kernelName:qa,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(t.shape,s.shape);return{a:()=>{let i=n;const c=kt(t.shape,r);return c.length>0&&(i=be(i,c)),V(i,t.shape)},b:()=>{let i=n;const c=kt(s.shape,r);return c.length>0&&(i=be(i,c)),V(bt(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AO={kernelName:Ll,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;Ie(o,s.shape).forEach(l=>{r[l]=1});const i=V(n,r),c=B(i,Vs(s.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RO={kernelName:Ka,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ge(n,Ye(Kl(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OO={kernelName:Xa,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>B(xe(Ne(1),Ye(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FO={kernelName:Ya,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let a=Ee(s);if(s.rank===1)for(let i=0;i<r[0];++i)a=se(a,je(n,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let c=0;c<r[1];++c)a=se(a,je(n,[i*s.shape[0],c*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let c=0;c<r[1];++c)for(let l=0;l<r[2];++l)a=se(a,je(n,[i*s.shape[0],c*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let c=0;c<r[1];++c)for(let l=0;l<r[2];++l)for(let u=0;u<r[3];++u)a=se(a,je(n,[i*s.shape[0],c*s.shape[1],l*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _O={kernelName:Wl,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=co(r);return{x:()=>Ue(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PO={kernelName:Vl,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Nn(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LO={kernelName:Ul,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>MO(n,t)}}};function MO(n,e){const t=ws(e,Ee(e)),s=Bo(n,t);let r=vr(e,Ne(0,"int32"));const o=s.rank-r.rank;for(let i=0;i<o;++i)r=bn(r,i+1);r=ts(r,Vs(s.shape,"bool"));const a=Ee(s);return un(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO={kernelName:Gl,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BO=[x0,BA,WA,VA,UA,GA,jA,HA,qA,KA,XA,YA,QA,nR,sR,rR,oR,aR,iR,cR,lR,uR,hR,dR,mR,gR,yR,bR,xR,wR,iO,vR,kR,CR,NR,$R,SR,IR,TR,DR,ER,AR,RR,OR,FR,_R,PR,LR,MR,WR,Jm,Jm,VR,jR,KR,XR,YR,JR,ZR,QR,eO,tO,nO,sO,rO,Zm,Zm,oO,aO,cO,lO,uO,dO,hO,pO,fO,mO,gO,yO,bO,xO,wO,vO,kO,CO,NO,$O,Qm,Qm,eg,eg,IO,TO,SO,DO,EO,AO,RO,OO,FO,_O,PO,LO,zO];for(const n of BO)QI(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.abs=function(){return this.throwIfDisposed(),Vt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.acos=function(){return this.throwIfDisposed(),wx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.acosh=function(){return this.throwIfDisposed(),vx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.add=function(n){return this.throwIfDisposed(),se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.all=function(n,e){return this.throwIfDisposed(),fp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.any=function(n,e){return this.throwIfDisposed(),gc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.argMax=function(n){return this.throwIfDisposed(),yc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.argMin=function(n){return this.throwIfDisposed(),kx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asScalar=function(){return this.throwIfDisposed(),I(this.size===1,()=>"The array must have only 1 element."),V(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asType=function(n){return this.throwIfDisposed(),de(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as1D=function(){return this.throwIfDisposed(),V(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as2D=function(n,e){return this.throwIfDisposed(),V(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),V(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),V(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),V(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asin=function(){return this.throwIfDisposed(),Cx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asinh=function(){return this.throwIfDisposed(),Nx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atan=function(){return this.throwIfDisposed(),$x(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atan2=function(n){return this.throwIfDisposed(),Ix(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atanh=function(){return this.throwIfDisposed(),Sx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Hl(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),ql(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),Kr(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.broadcastTo=function(n){return this.throwIfDisposed(),xc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cast=function(n){return this.throwIfDisposed(),de(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.ceil=function(){return this.throwIfDisposed(),Dx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Qt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof it&&(n=[n]),Ot([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),yp(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),xp(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),Rs(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cos=function(){return this.throwIfDisposed(),Kl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cosh=function(){return this.throwIfDisposed(),wp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),vp(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),Ax(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),si(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),Rx(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.divNoNan=function(n){return this.throwIfDisposed(),Ox(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.div=function(n){return this.throwIfDisposed(),ge(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.dot=function(n){return this.throwIfDisposed(),w2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.elu=function(){return this.throwIfDisposed(),ri(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.equal=function(n){return this.throwIfDisposed(),wr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.erf=function(){return this.throwIfDisposed(),Fx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.exp=function(){return this.throwIfDisposed(),ms(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.expandDims=function(n){return this.throwIfDisposed(),bn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.expm1=function(){return this.throwIfDisposed(),_x(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.fft=function(){return this.throwIfDisposed(),Mp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.flatten=function(){return this.throwIfDisposed(),V(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.floor=function(){return this.throwIfDisposed(),oi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.floorDiv=function(n){return this.throwIfDisposed(),pp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.gather=function(n,e){return this.throwIfDisposed(),Bo(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.greaterEqual=function(n){return this.throwIfDisposed(),vr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.greater=function(n){return this.throwIfDisposed(),rs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.ifft=function(){return this.throwIfDisposed(),kc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.irfft=function(){return this.throwIfDisposed(),Yx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isFinite=function(){return this.throwIfDisposed(),F2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isInf=function(){return this.throwIfDisposed(),P2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isNaN=function(){return this.throwIfDisposed(),M2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Xl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.lessEqual=function(n){return this.throwIfDisposed(),io(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.less=function(n){return this.throwIfDisposed(),Np(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),Lx(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSigmoid=function(){return this.throwIfDisposed(),Y2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSoftmax=function(n){return this.throwIfDisposed(),$p(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),nD(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.log=function(){return this.throwIfDisposed(),Pn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.log1p=function(){return this.throwIfDisposed(),Mx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalAnd=function(n){return this.throwIfDisposed(),ts(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalNot=function(){return this.throwIfDisposed(),Yl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalOr=function(n){return this.throwIfDisposed(),Sp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalXor=function(n){return this.throwIfDisposed(),iD(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),_e(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),Jl(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.max=function(n,e){return this.throwIfDisposed(),Cn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.maximum=function(n){return this.throwIfDisposed(),ws(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mean=function(n,e){return this.throwIfDisposed(),lt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.min=function(n,e){return this.throwIfDisposed(),Wo(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.minimum=function(n){return this.throwIfDisposed(),Zl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),Wx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mod=function(n){return this.throwIfDisposed(),Vx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mul=function(n){return this.throwIfDisposed(),B(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.neg=function(){return this.throwIfDisposed(),bt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Wp(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.notEqual=function(n){return this.throwIfDisposed(),Vo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),ip(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.onesLike=function(){return this.throwIfDisposed(),dn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.pad=function(n,e){return this.throwIfDisposed(),Ql(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.pool=function(n,e,t,s,r){return this.throwIfDisposed(),DD(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.pow=function(n){return this.throwIfDisposed(),hr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.prelu=function(n){return this.throwIfDisposed(),tu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.prod=function(n,e){return this.throwIfDisposed(),Dp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reciprocal=function(){return this.throwIfDisposed(),jx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.relu=function(){return this.throwIfDisposed(),kr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.relu6=function(){return this.throwIfDisposed(),Ap(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reshapeAs=function(n){return this.throwIfDisposed(),V(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reshape=function(n){return this.throwIfDisposed(),V(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),c0(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),l0(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reverse=function(n){return this.throwIfDisposed(),gs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.rfft=function(){return this.throwIfDisposed(),Jx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.round=function(){return this.throwIfDisposed(),Hx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.rsqrt=function(){return this.throwIfDisposed(),Rp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.selu=function(){return this.throwIfDisposed(),Op(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),qx(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sigmoid=function(){return this.throwIfDisposed(),ao(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sign=function(){return this.throwIfDisposed(),Kx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sin=function(){return this.throwIfDisposed(),Fp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sinh=function(){return this.throwIfDisposed(),_p(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.slice=function(n,e){return this.throwIfDisposed(),je(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.softmax=function(n){return this.throwIfDisposed(),nu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.softplus=function(){return this.throwIfDisposed(),ai(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),eu(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.split=function(n,e){return this.throwIfDisposed(),an(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sqrt=function(){return this.throwIfDisposed(),zt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.square=function(){return this.throwIfDisposed(),Ye(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Zx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.squeeze=function(n){return this.throwIfDisposed(),Xr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof it?[this,n]:[this,...n];return Nn(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.step=function(n){return this.throwIfDisposed(),ci(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.stridedSlice=function(n,e,t,s,r,o,a,i){return this.throwIfDisposed(),Qx(this,n,e,t,s,r,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sub=function(n){return this.throwIfDisposed(),xe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sum=function(n,e){return this.throwIfDisposed(),be(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tan=function(){return this.throwIfDisposed(),e0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tanh=function(){return this.throwIfDisposed(),gp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tile=function(n){return this.throwIfDisposed(),rr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toBool=function(){return this.throwIfDisposed(),de(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toFloat=function(){return this.throwIfDisposed(),de(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toInt=function(){return this.throwIfDisposed(),de(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.topk=function(n,e){return this.throwIfDisposed(),t0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.transpose=function(n){return this.throwIfDisposed(),Ue(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unique=function(n){return this.throwIfDisposed(),Dd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),n0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unstack=function(n){return this.throwIfDisposed(),Mn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.where=function(n,e){return this.throwIfDisposed(),un(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.zerosLike=function(){return this.throwIfDisposed(),Ee(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Hu;function yt(){return Hu==null&&(Hu=nT().epsilon()),Hu}function zn(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qn.prototype)}}class wn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wn.prototype)}}class R extends Error{constructor(e){super(e),Object.setPrototypeOf(this,R.prototype)}}class ke extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ke.prototype)}}class mf extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mf.prototype)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pr(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Kn(n,e){if(!n)throw new mf(e)}function tg(n,e){let t=0;for(const s of n)s===e&&t++;return t}function qt(n){return n.length===1?n[0]:n}function Qe(n){return Array.isArray(n)?n:[n]}function is(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ys(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let mn={};function gf(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Ad(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Ad(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Ad(s))}}}function hi(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let a;if(o in t)a=t[o];else if(o in mn)a=mn[o];else if(a=e[o],a==null)throw new R(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new R(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,c;if(a in t?[i,c]=t[a]:a in mn?[i,c]=mn.className:a in e&&([i,c]=e[a]),i==null)throw new R(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const l={};for(const p of Object.keys(mn))l[p]=mn[p];for(const p of Object.keys(t))l[p]=t[p];const u=o.config;u.customObjects=l;const d=Object.assign({},mn);for(const p of Object.keys(t))mn[p]=t[p];Ad(o.config);const h=c(i,o.config,t,r);return mn=Object.assign({},d),h}else{const l=Object.assign({},mn);for(const d of Object.keys(t))mn[d]=t[d];const u=new i(o.config);return mn=Object.assign({},l),u}}}function WO(n,e){return n<e?-1:n>e?1:0}function Di(n,e){return-1*WO(n,e)}function Ts(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function VO(n){if(n==null)throw new R(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Cr(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new R(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function yf(n,e,t=0,s=1/0){return Kn(t>=0),Kn(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function Nt(n,e){Array.isArray(n)?(I(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>Nt(t,`element ${s+1} of ${e}`))):I(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${v0(n)}.`)}function v0(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>v0(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function UO(n,e){let t=Ht(),s;return(...o)=>{const a=Ht();return a-t<e||(t=a,s=n(...o)),s}}function k0(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bf(n,e){return P(()=>zt(be(B(n,n),e,!0)))}class pi extends oo{getConfig(){return{}}}class C0 extends pi{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>{const t=bf(e,this.axis),s=Qt(t,0,this.maxValue);return B(e,ge(s,se(yt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}C0.className="MaxNorm";Z(C0);class N0 extends pi{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>ge(e,se(yt(),bf(e,this.axis))))}getConfig(){return{axis:this.axis}}}N0.className="UnitNorm";Z(N0);class $0 extends pi{apply(e){return kr(e)}}$0.className="NonNeg";Z($0);class I0 extends pi{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>{const t=bf(e,this.axis),s=se(B(this.rate,Qt(t,this.minValue,this.maxValue)),B(1-this.rate,t));return B(e,ge(s,se(yt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}I0.className="MinMaxNorm";Z(I0);const ng={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function xt(n){return gf(n)}function sg(n,e={}){return hi(n,xn.getMap().classNameMap,e,"constraint")}function wt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in ng?ng[n]:n,config:{}};return sg(t)}else return n instanceof pi?n:sg(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GO=["channelsFirst","channelsLast"],jO=["nearest","bilinear"],HO=["valid","same","causal"],qO=["max","avg"],KO=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Rr=new Map;function dt(n){Cr(GO,"DataFormat",n)}function XO(n){Cr(jO,"InterpolationFormat",n)}function hn(n){Cr(HO,"PaddingMode",n)}function S0(n){Cr(qO,"PoolMode",n)}const Fo=[],rg="/";function ar(n,e){Fo.push(n);try{const t=e();return Fo.pop(),t}catch(t){throw Fo.pop(),t}}function YO(){return Fo.length===0?"":Fo.join(rg)+rg}function T0(n){if(!E0(n))throw new Error("Not a valid tensor name: '"+n+"'");return YO()+n}function D0(n){if(!E0(n))throw new Error("Not a valid tensor name: '"+n+"'");Rr.has(n)||Rr.set(n,0);const e=Rr.get(n);if(Rr.set(n,Rr.get(n)+1),e>0){const t=`${n}_${e}`;return Rr.set(t,1),t}else return n}const JO=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function E0(n){return!!n.match(JO)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZO(n){return n===parseInt(n.toString(),10)}function Ds(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function A0(n){return n=Array.isArray(n)?new Float32Array(n):n,Ln(n)}function Yr(n){return Wo(A0(n)).dataSync()[0]}function Fs(n){return Cn(A0(n)).dataSync()[0]}function Bn(n,e){if(e<n)throw new R(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fi(n,e){return n.asType(e)}function mi(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),n.reshape(t)}function QO(n,e){return P(()=>{if(n.shape.length!==2)throw new R(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=mi(n,1);return Rd(t,[1,e,1])})}function eF(n){const e=[Ds(n.shape)];return n.reshape(e)}function tF(n){if(n.rank<=1)throw new R(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Ds(n.shape,1)];return n.reshape(e)}function ir(n,e,t){return P(()=>{switch(n.rank){case 1:return Pp(n,e,t);case 2:return Xx(n,[e,0],[t,n.shape[1]]);case 3:return Lp(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return vc(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return je(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return je(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new R(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function qu(n,e,t){return P(()=>{switch(n.rank){case 1:return Pp(n,e,t);case 2:return Xx(n,[0,e],[n.shape[0],t]);case 3:return Lp(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return vc(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new R(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Ei(n,e,t,s){return P(()=>{switch(n.rank){case 1:return Pp(n,e,t);case 2:switch(s){case 1:return ir(n,e,t);case 2:return qu(n,e,t);default:throw new R(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ir(n,e,t);case 2:return Lp(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return qu(n,e,t);default:throw new R(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ir(n,e,t);case 2:return vc(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return vc(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return qu(n,e,t);default:throw new R(`The axis is not within the rank of the tensor ${s}`)}default:throw new R(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function xf(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),Ot(n,e)}function og(n,e){switch(n.rank){case 1:return qT([n,e]);case 2:return XT([n,e],0);case 3:return JT([n,e],0);case 4:return QT([n,e],0);default:throw new R(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Rd(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new R(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return rr(n,e)}function du(n,e=0,t=1,s,r){return JD(n,e,t,s,r)}function Qn(n,e,t,s){if(n.rank<2||e.rank<2)throw new ke(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new ke(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return Ed({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Od(n.rank,s,zn()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=n.reshape([-1,o]);const a=e.shape.slice(),i=a.pop(),c=a.pop(),l=[...a,i],u=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=e.transpose(u).reshape([c,-1]);const d=[...r,...l];return Ed({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Od(n.rank,s,zn()):null,activation:t}).reshape(d)}}function R0(n,e,t){return P(()=>(Array.isArray(e)?e=Ln(e,"int32"):e=e.toInt(),Bo(n,e,t)))}function gi(n){return B(n,n)}function Od(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new R(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(n<3)return e;throw new R(`Unsupported input rank by biasAdd: ${e.rank}`)}function os(n,e,t){return P(()=>(t==null&&(t=zn()),dt(t),n.add(Od(n.rank,e,t))))}function nF(n,e=1){if(e!==1)throw new ke(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return ri(n)}function sF(n){return P(()=>ge(n,Vt(n).add(1)))}function O0(n,e,t,s){return P(()=>qE(n,e,t,s))}function rF(n){return P(()=>{const e=se(.5,B(.2,n));return Qt(e,0,1)})}function yi(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const oF=["fanIn","fanOut","fanAvg"],aF=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iF(n){Cr(oF,"FanMode",n)}function cF(n){Cr(aF,"Distribution",n)}class Sn extends oo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class F0 extends Sn{apply(e,t){return ht(e,t)}}F0.className="Zeros";Z(F0);class wf extends Sn{apply(e,t){return Vs(e,t)}}wf.className="Ones";Z(wf);class _0 extends Sn{constructor(e){if(super(),typeof e!="object")throw new R(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new R(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return P(()=>B(Ne(this.value),Vs(e,t)))}getConfig(){return{value:this.value}}}_0.className="Constant";Z(_0);class P0 extends Sn{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ii(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}P0.className="RandomUniform";Z(P0);class L0 extends Sn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ke(`randomNormal does not support dType ${t}.`);return du(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}L0.className="RandomNormal";Z(L0);class M0 extends Sn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ke(`truncatedNormal does not support dType ${t}.`);return zp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}M0.className="TruncatedNormal";Z(M0);class z0 extends Sn{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return P(()=>{if(e.length!==2||e[0]!==e[1])throw new R("Identity matrix initializer can only be used for 2D square matrices.");return B(this.gain,Px(e[0]))})}getConfig(){return{gain:this.gain}}}z0.className="Identity";Z(z0);function lF(n,e="channelsLast"){let t,s;if(dt(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Ds(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Ds(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Ds(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class en extends Sn{constructor(e){if(super(),e.scale<0)throw new R(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,iF(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,cF(this.distribution),this.seed=e.seed}apply(e,t){const s=lF(e),r=s[0],o=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(r+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new ke(`${this.getClassName()} does not support dType ${t}.`);return zp(e,0,i,t,this.seed)}else{const i=Math.sqrt(3*a);return ii(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}en.className="VarianceScaling";Z(en);class vf extends en{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return en.className}}vf.className="GlorotUniform";Z(vf);class kf extends en{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return en.className}}kf.className="GlorotNormal";Z(kf);class Cf extends en{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return en.className}}Cf.className="HeNormal";Z(Cf);class Nf extends en{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return en.className}}Nf.className="HeUniform";Z(Nf);class $f extends en{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return en.className}}$f.className="LeCunNormal";Z($f);class If extends en{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return en.className}}If.className="LeCunNormal";Z(If);class B0 extends Sn{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new ke("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return P(()=>{if(e.length<2)throw new ke("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,r=du(s,0,1,"float32");let o=_A.gramSchmidt(r);return e[0]>e[1]&&(o=o.transpose()),B(this.gain,o)})}getConfig(){return{gain:this.gain,seed:this.seed}}}B0.className="Orthogonal";Z(B0);const ag={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ig(n,e={}){return hi(n,xn.getMap().classNameMap,e,"initializer")}function ot(n){return gf(n)}function et(n){if(typeof n=="string"){const e=n in ag?ag[n]:n;if(e==="GlorotNormal")return new kf;if(e==="GlorotUniform")return new vf;if(e==="HeNormal")return new Cf;if(e==="HeUniform")return new Nf;if(e==="LeCunNormal")return new $f;if(e==="LeCunUniform")return new If;{const t={};return t.className=e,t.config={},ig(t)}}else return n instanceof Sn?n:ig(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let uF=0;function W0(){return uF++}const Ai={};function hu(n=""){return n in Ai||(Ai[n]=0),Ai[n]+=1,n+Ai[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fd(n){return Array.isArray(n)&&Array.isArray(n[0])}function Cc(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ce(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new R(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Ke(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new R(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nc(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cg="Variable";class dF{constructor(e,t="float32",s=cg,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=W0(),s=s??cg,this.originalName=T0(s),this.name=D0(this.originalName),this.trainable_=r,this.constraint=o,this.val=_E(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),hF(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function hF(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function _d(n){return n.map(e=>e.read())}function Sf(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Jn{constructor(e,t,s,r,o,a,i){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=i,this.id=W0(),a!=null&&(this.originalName=T0(a),this.name=D0(this.originalName)),this.rank=t.length}}let pF=0;class pu{constructor(e,t){this.callArgs=t,this.id=pF++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fF=0;class Ae extends oo{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fF++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=is(s)+"_"+hu(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new wn(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new R(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return qt(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return qt(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new qn(`Layer ${this.name} is not connected, no input to return.`);return qt(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new qn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return qt(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Qe(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=Qe(this.inputSpec);if(e.length!==t.length)throw new R(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const r=e[s],o=t[s];if(o==null)continue;const a=r.rank;if(o.ndim!=null&&a!==o.ndim)throw new R(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new R(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new R(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new R(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const i=r.shape;for(const c in o.axes){const l=Number(c),u=o.axes[c],d=l>=0?i[l]:i[i.length+l];if(u!=null&&[u,null].indexOf(d)===-1)throw new R(`Input ${s} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${i}.`)}}if(o.shape!=null)for(let i=0;i<o.shape.length;++i){const c=o.shape[i],l=r.shape[i];if(c!=null&&l!=null&&c!==l)throw new R(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Qe(e);let r=!0;for(const a of s)if(!(a instanceof Jn)){r=!1;break}let o=!0;for(const a of s)if(a instanceof Jn){o=!1;break}if(r===o)throw new R("Arguments to apply() must be all SymbolicTensors or all Tensors");return ar(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const i of Qe(e))a.push(i.shape);this.build(qt(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let a=this.call(e,t);const i=Qe(a),c=[];for(let l of i)s.indexOf(l)!==-1&&(l=l.clone()),c.push(l);if(a=qt(c),this.activityRegularizer!=null)throw new ke("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=mF(e),i=this.computeOutputShape(a);let c;const l=gF(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?c=i.map((u,d)=>new Jn(l,u,this,Qe(e),t,this.name,d)):c=new Jn(l,i,this,Qe(e),t,this.name),this.addInboundNode(e,c,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new ke("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new qn(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new qn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new wn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Nc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return _d(e?this.trainableWeights:this.weights)}setWeights(e){P(()=>{const t=this.weights;if(t.length!==e.length)throw new R(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=_d(t);for(let o=0;o<r.length;++o){const a=r[o],i=t[o],c=e[o];if(!Le(a.shape,c.shape))throw new R(`Layer weight shape ${a.shape} not compatible with provided weight shape ${c.shape}`);s.push([i,c])}Sf(s)})}addWeight(e,t,s,r,o,a,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new R(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=et("zeros"));const c=r.apply(t,s),l=new dF(c,s,e,a,i);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Qe(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,r,o,a,i=null){const c=Qe(e);t=Qe(t),s=Qe(s),r=Qe(r),o=Cc(o),a=Cc(a);const l=[],u=[],d=[];for(const h of c)l.push(h.sourceLayer),u.push(h.nodeIndex),d.push(h.tensorIndex);new pu({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:c,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function mF(n){n=Qe(n);const e=[];for(const t of n)e.push(t.shape);return qt(e)}function gF(n){return"float32"}function V0(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const a=s.inputTensors[o],i=s.inboundLayers[o],c=s.nodeIndices[o],l=V0(a,i,c);for(const u of l)r.indexOf(u)===-1&&r.push(u)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bi extends Ae{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:hu("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new R("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new R("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new R("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Jn(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new pu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new R(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}bi.className="InputLayer";Z(bi);function yF(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new R("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new bi({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ks(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const a=o;e.push(a.data()),t.push(r),s.push(a)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];ve(s)}}function U0(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var lg;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(lg||(lg={}));const bF=125;class Uo{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class xF{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class wF extends Uo{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const i=P(()=>se(this.totals[r],B(o,s)));this.totals[r]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:P(()=>{const r=B(ge(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),At(t[s])}))}}class vF extends Uo{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const c=a[i];e.push(c.data()),t.push(o),s.push(i)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class kF extends Uo{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=bF),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");hd(this.yieldEvery)&&(this.maybeWait=UO(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Ks(s),r.push(this.yield(e,t,s))),r.push(ju()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ks(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Ks(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(ju()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ks(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Ks(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(ju()):hd(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Ks(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ks(e),await this.trainEnd(e))}}function G0(n,e){return n==null&&(n={}),n instanceof Uo?[n]:Array.isArray(n)&&n[0]instanceof Uo?n:Qe(n).map(s=>new kF(s,e))}class gn{constructor(){}static registerCallbackConstructor(e,t){I(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),gn.checkForDuplicate(t),gn.constructors[e]==null&&(gn.constructors[e]=[]),gn.constructors[e].push(t)}static checkForDuplicate(e){for(const t in gn.constructors)gn.constructors[+t].forEach(r=>{if(r===e)throw new R("Duplicate callback constructor.")})}static clear(){gn.constructors={}}static createCallbacks(e){const t=[];for(const s in gn.constructors){const r=+s;e>=r&&t.push(...gn.constructors[r])}return t.map(s=>new s)}}gn.constructors={};function j0(n,e,t,s,r,o,a,i,c){const l=new vF,u=[new wF,...gn.createCallbacks(e)];n!=null&&u.push(...n),u.push(l);const d=new xF(u);return d.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:e,doValidation:i,metrics:c}),{callbackList:d,history:l}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fs(n,e={},t=!1){return hi(n,xn.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $c(n,e){return P(()=>{n.dtype!=="float32"&&(n=n.asType("float32"));const t=be(gi(n),e,!0),s=kp(t.shape,yt()),r=zt(ws(t,s));return ge(n,r)})}function fu(n,e){return P(()=>lt(gi(xe(e,n)),-1))}function Tf(n,e){return P(()=>lt(Vt(xe(e,n)),-1))}function Df(n,e){return P(()=>{const t=xe(n,e),s=Qt(Vt(n),yt(),Number.MAX_VALUE),r=Vt(ge(t,s));return B(100,lt(r,-1))})}function CF(n,e){return P(()=>{const t=Qt(e,yt(),Number.MAX_VALUE),s=Pn(se(1,t)),r=Qt(n,yt(),Number.MAX_VALUE),o=Pn(se(1,r));return lt(gi(xe(s,o)),-1)})}function NF(n,e){return P(()=>{const t=ws(0,xe(1,B(n,e)));return lt(gi(t),-1)})}function $F(n,e){return P(()=>{const t=ws(0,xe(1,B(n,e)));return lt(t,-1)})}function IF(n,e){return P(()=>{const t=be(B(n,e),-1),s=Cn(B(xe(1,n),e),-1);return ws(0,se(1,xe(s,t)))})}function SF(n,e){return P(()=>{const t=Math.log(2),s=xe(e,n),r=xe(se(s,ai(B(-2,s))),t);return lt(r,-1)})}function Go(n,e,t=!1){return P(()=>{if(t)e=nu(e);else{const s=be(e,e.shape.length-1,!0);e=ge(e,s)}return e=Qt(e,yt(),1-yt()),bt(be(B(n.toFloat(),Pn(e)),e.shape.length-1))})}function Ic(n,e,t=!1){return P(()=>{const s=oi(eF(n)).toInt();e=Qt(e,yt(),1-yt());const r=e.shape,o=ip(s,r[r.length-1]).reshape(r);return Go(o,e,t)})}function TF(n,e){if(!Le(n.shape,e.shape))throw new R(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return P(()=>{const t=e.relu(),s=e.abs().neg();return t.sub(e.mul(n)).add(s.exp().log1p())})}function mu(n,e){return P(()=>{let t;return t=Qt(e,yt(),1-yt()),t=Pn(ge(t,xe(1,t))),lt(TF(n,t),-1)})}function DF(n,e){return P(()=>{const t=Qt(n,yt(),1),s=Qt(e,yt(),1);return be(B(n,Pn(ge(t,s))),-1)})}function EF(n,e){return P(()=>{const t=Pn(se(yt(),e));return lt(xe(e,B(n,t)),-1)})}function H0(n,e){return P(()=>{const t=$c(n,-1),s=$c(e,-1),r=B(t,s);return bt(be(r,-1))})}const Sc={meanSquaredError:fu,meanAbsoluteError:Tf,meanAbsolutePercentageError:Df,meanSquaredLogarithmicError:CF,squaredHinge:NF,hinge:$F,categoricalHinge:IF,logcosh:SF,categoricalCrossentropy:Go,sparseCategoricalCrossentropy:Ic,binaryCrossentropy:mu,kullbackLeiblerDivergence:DF,poisson:EF,cosineProximity:H0};function Ku(n){if(typeof n=="string"){if(n in Sc)return Sc[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new R(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function q0(n,e){return P(()=>{const t=B(.5,dn(e)),s=fi(rs(e,t),n.dtype);return lt(wr(n,s),-1)})}function K0(n,e){return P(()=>fi(wr(yc(n,-1),yc(e,-1)),"float32"))}function AF(n,e){return P(()=>ts(n.equal(1),e.equal(1)).sum().cast("float32"))}function RF(n,e){return P(()=>ts(n.equal(0),e.equal(1)).sum().cast("float32"))}function OF(n,e){return P(()=>{const t=AF(n,e),s=RF(n,e),r=t.add(s);return un(rs(r,0),t.div(r),0).cast("float32")})}function FF(n,e){return mu(n,e)}function _F(n,e){return n.rank===e.rank&&(n=n.squeeze([n.rank-1])),e=e.argMax(-1),e.dtype!==n.dtype&&(e=e.asType(n.dtype)),wr(n,e).asType("float32")}const PF=fu,LF=fu,MF=Tf,zF=Tf,BF=Df,WF=Df,X0=Go,VF=H0,Y0=Ic,Tc={binaryAccuracy:q0,categoricalAccuracy:K0,precision:OF,categoricalCrossentropy:X0,sparseCategoricalCrossentropy:Y0,mse:PF,MSE:LF,mae:MF,MAE:zF,mape:BF,MAPE:WF,cosine:VF};function UF(n){if(typeof n=="string"&&n in Tc)return Tc[n];if(typeof n!="string"&&n!=null)return n;throw new R(`Unknown metric ${n}`)}function Ri(n){if(Kn(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Sc))if(Sc[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(Tc))if(Tc[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function GF(n){const e={Adagrad:()=>Ar.adagrad(.01),Adadelta:()=>Ar.adadelta(1,.95,yt()),Adam:()=>Ar.adam(.001,.9,.999,yt()),Adamax:()=>Ar.adamax(.002,.9,.999,yt(),0),RMSProp:()=>Ar.rmsprop(.001,.9,0,yt()),SGD:()=>Ar.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new R(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ug=1*1024*1024;function dg(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Pd(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>ug&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${ug}.`)}}function Pd(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Pd(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Pd(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jF(n,e,t,s=console.log){const r=qF(n),o=["Layer (type)","Output shape","Param #"];r?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(u=>Math.floor(e*u)));let a;if(!r){o.push("Receives inputs"),a=[];for(const u in n.nodesByDepth)a.push(...n.nodesByDepth[u])}s("_".repeat(e)),Dc(o,t,s),s("=".repeat(e));const i=n.layers;for(let u=0;u<i.length;++u)r?KF(i[u],t,s):XF(i[u],t,a,s),s((u===i.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const c=HF(n),l=Nc(n.nonTrainableWeights);s(`Total params: ${c+l}`),s(`Trainable params: ${c}`),s(`Non-trainable params: ${l}`),s("_".repeat(e))}function HF(n){let e;return n.collectedTrainableWeights!=null?e=Nc(n.collectedTrainableWeights):e=Nc(n.trainableWeights),e}function qF(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function Dc(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function KF(n,e,t){let s;try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,o=n.getClassName(),a=[`${r} (${o})`,s,n.countParams().toString()];Dc(a,e,t)}function XF(n,e,t,s){let r;try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const u of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){const h=u.inboundLayers[d].name,p=u.nodeIndices[d],f=u.tensorIndices[d];o.push(`${h}[${p}][${f}]`)}const a=n.name,i=n.getClassName(),c=o.length===0?"":o[0],l=[`${a} (${i})`,r,n.countParams().toString(),c];Dc(l,e,s);for(let u=1;u<o.length;++u)Dc(["","","",o[u]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function J0(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Ld(n,e){if(n===null)return null;if(typeof n=="string")return Ys(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];J0(e,r,o)?t.push(o):t.push(Ld(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=Ys(s);t[o]=Ld(r,o)}}return t}}function Md(n,e){if(n==null)return null;if(typeof n=="string")return is(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];J0(e,r,o)?t.push(o):t.push(Md(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=is(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=Md(r,s)}return t}}/** @license See the LICENSE file. */const Z0="3.3.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YF(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return de(e,n.dtype)}catch{throw new R(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Ss{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ss)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=YF(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new R(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Jn){if(this.id2Value[e.id]==null)throw new R(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new R(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Jn){if(this.id2Value[e.id]==null)throw new R(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new R(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ve(this.id2Mask)}}const Xu={},hg={};function Ao(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),c=[],l=e.names();for(const f of i)l.indexOf(f)!==-1?c.push(e.getValue(f)):c.push(null);const u=i.join(",")+"|"+e.names().join(",");let d,h;if(Xu[u]==null){const f=JF(a,e);d=f.sorted,h=f.recipientCounts,Xu[u]=d,hg[u]=h}d=Xu[u],h={},r||Object.assign(h,hg[u]);const p=new Ss(e);for(let f=0;f<d.length;++f){const m=d[f],g=m.sourceLayer;if(g instanceof bi)continue;const y=[],b=[],v=[];let x=!1;for(const S of m.inputs){const T=p.getValue(S),E=p.getMask(S);y.push(T),b.push(E),E!=null&&(x=!0),r||(h[S.name]--,h[S.name]===0&&!e.hasKey(S)&&i.indexOf(S.name)===-1&&!T.isDisposed&&S.sourceLayer.stateful!==!0&&v.push(T))}x&&(t=t||{},t.mask=b[0]);const w=Qe(g.apply(y,t));let N=null;g.supportsMasking&&(N=g.computeMask(y,b));const C=QF(m),$=Array.isArray(C)?C:[C];for(let S=0;S<$.length;++S){p.hasKey($[S])||p.add($[S],w[S],Array.isArray(N)?N[0]:N);const T=i.indexOf($[S].name);T!==-1&&(c[T]=w[S])}r||ve(v)}return p.disposeMasks(),o?c:c[0]}function JF(n,e){I(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=pg(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:a,recipientMap:i}=pg(o,e);for(const c of a)r.has(c.name)||(t.push(c),r.add(c.name));for(const c in i)s[c]==null&&(s[c]=new Set),i[c].forEach(l=>s[c].add(l))}}return{sorted:t,recipientCounts:ZF(s)}}function ZF(n){const e={};for(const t in n)e[t]=n[t].size;return e}function pg(n,e){const t=new Set,s=[],r={};for(const i of e.names())t.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(t.has(i.name)){o.pop();continue}const c=a[a.length-1]===o.length-1;if(i.inputs.length===0||c)o.pop(),s.push(i),t.add(i.name),c&&a.pop();else{a.push(o.length-1);for(const l of i.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(i.name),!t.has(l.name)&&o.push(l)}}return{sorted:s,recipientMap:r}}function QF(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class An extends Ae{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=hu(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ts(this.inputs).length!==this.inputs.length)throw new R(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Ts(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const v=b.sourceLayer,x=b.nodeIndex,w=b.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(w)}for(const b of this.inputs){const v=b.sourceLayer,x=b.nodeIndex,w=b.tensorIndex;Kn(x===0,"input layer has >1 nodes"),Kn(w===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const v=this.inputLayers[b];if(!(v instanceof bi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const t={},s={},r={},o={},a={},i=[],c=(b,v,x,w,N,C)=>{(w==null||N==null||C==null)&&(w=b.sourceLayer,N=b.nodeIndex,C=b.tensorIndex);const $=w.inboundNodes[N];if(x.indexOf($)!==-1)throw new wn(`The tensor ${b.name} at layer "${w.name}" is part of a cycle.`);if(v.indexOf($)!==-1)return;this.containerNodes.add(An.nodeKey(w,N)),w.id in a||(a[w.id]=Object.keys(a).length),x.indexOf($)===-1&&x.push($);const S=$.inboundLayers.length;for(let T=0;T<S;T++){const E=$.inputTensors[T],F=$.inboundLayers[T],O=$.nodeIndices[T],L=$.tensorIndices[T];c(E,v,x,F,O,L)}for(v.push($);x.indexOf($)>=0;)x.splice(x.indexOf($),1);i.push($)},l=[],u=[];for(const b of this.outputs)c(b,l,u);const d=i.slice().reverse();for(const b of d){s[b.id]=b,b.id in t||(t[b.id]=0);let v=t[b.id];const x=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];v=Math.max(v,x),r[b.outboundLayer.id]=v,o[b.outboundLayer.id]=b.outboundLayer,t[b.id]=v;for(let w=0;w<b.inboundLayers.length;w++){const N=b.inboundLayers[w],C=b.nodeIndices[w],$=N.inboundNodes[C],S=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(v+1,S),s[$.id]=$}}const h={};for(const b in t){const v=t[b];v in h||(h[v]=[]),h[v].push(s[b])}const p={};for(const b in r){const v=r[b];v in p||(p[v]=[]),p[v].push(o[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(Di);this.layers=[];for(const b of f){const v=p[b];v.sort((x,w)=>{const N=a[x.id],C=a[w.id];return N<C?-1:N>C?1:0});for(const x of v)x instanceof An&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=p,f=Object.keys(h).map(b=>parseInt(b,10)).sort(Di);const m=this.inputs.slice(),g=[];for(const b of f)for(const v of h[b]){const x=v.outboundLayer;if(x!=null){for(const w of v.inputTensors)if(m.indexOf(w)===-1)throw new wn(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${x.name}". The following previous layers were accessed without issue: ${g}`);for(const w of v.outputTensors)m.push(w);g.push(x.name)}}this.nodesByDepth=h;const y=this.layers.map(b=>b.name);for(const b of y){const v=y.filter(x=>x===b).length;if(v!==1)throw new wn(`The name "${b}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new pu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new R("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;for(const a of this.layers)for(const i of a.weights){if(s[i.originalName]!=null)throw new R(`Duplicate weight name: ${i.originalName}`);s[i.originalName]=i,r++}const o=[];for(const a in e){let i=a;if(s[a]==null){const c=a.split("/");i=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[i]!=null)o.push([s[i],e[a]]);else if(t)throw new R(`Provided weight data has no target variable: ${a}`);delete s[i]}if(t){const a=[];for(const i in s)a.push(i);if(a.length>0)throw new R(`${a.length} of ${r} weights are not set: ${a}`)}Sf(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Z0}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Md(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return P(()=>{e=Qe(e);const s=new Ss;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return Ao(this.outputs,s,t)})}computeMask(e,t){return P(()=>{e=Qe(e);let s;return t==null?s=pr(null,e.length):s=Qe(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=Cc(e);if(t.length!==this.inputLayers.length)throw new R(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<t.length;i++){const c=this.inputLayers[i],l=t[i],u=c.name+"_0_0";s[u]=l}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Di);if(r.length>1)for(const i of r){const c=this.nodesByDepth[i];for(const l of c){const u=l.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const d=[];for(let m=0;m<l.inboundLayers.length;m++){const g=l.inboundLayers[m],y=l.nodeIndices[m],b=l.tensorIndices[m],v=`${g.name}_${y}_${b}`,x=s[v];d.push(x)}const h=u.computeOutputShape(qt(d)),p=Cc(h),f=u.inboundNodes.indexOf(l);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const c=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=this.outputLayersTensorIndices[i],d=`${c.name}_${l}_${u}`;a.push(d)}for(let i=0;i<a.length;i++){const c=a[i];Kn(c in s),o.push(s[c])}return qt(o)}runInternalGraph(e,t){t==null&&(t=pr(null,e.length));const s={};for(let c=0;c<this.inputs.length;++c){const l=this.inputs[c],u=e[c],d=t[c];s[l.id]=[u,d]}const r=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(Di);for(const c of r){const l=this.nodesByDepth[c];for(const u of l){const d=u.outboundLayer,h=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,y,b,v;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[x,w]=f[0];m.mask==null&&(m.mask=w),b=Qe(d.call(x,m)),v=Qe(d.computeMask(x,w)),g=[x],y=[w]}else g=f.map(x=>x[0]),y=f.map(x=>x[1]),m.mask==null&&(m.mask=y),b=Qe(d.call(g,m)),v=Qe(d.computeMask(g,y));if(d.activityRegularizer)throw new ke("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<p.length;++x){const w=p[x],N=b[x],C=v[x];s[w.id]=[N,C]}}}}const o=[],a=[],i=[];for(const c of this.outputs){Kn(c.id in s,`Could not compute output ${c.name} : ${c.id}`);const[l,u]=s[c.id];i.push(l.shape),o.push(l),a.push(u)}return[o,a,i]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof An?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=An.nodeKey(r,o);this.containerNodes.has(a)&&(t[a]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new R(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new R("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new R(`No such layer: ${e}`)}calculateLosses(){return P(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=An.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),c=a.getConfig(),l=[];for(let d=0;d<a.inboundNodes.length;d++){const h=a.inboundNodes[d],p=An.nodeKey(a,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const y=h.inboundLayers[g],b=h.nodeIndices[g],v=h.tensorIndices[g],x=An.nodeKey(y,b);let w=t[x];w==null&&(w=0),m.push([y.name,w,v,f])}l.push(m)}}}const u={};u.name=a.name,u.className=i,u.config=c,u.inboundNodes=l,s.push(u)}e.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],c=this.inputLayersNodeIndices[a],l=An.nodeKey(i,c);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);const d=this.inputLayersTensorIndices[a];r.push([i.name,u,d])}e.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],c=this.outputLayersNodeIndices[a],l=An.nodeKey(i,c);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);const d=this.outputLayersTensorIndices[a];o.push([i.name,u,d])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function c(g,y){const b=[];let v;for(const x of y){const w=x[0],N=x[1],C=x[2];if(v=x[3]==null?{}:x[3],!(w in o)){i(g,y);return}const $=o[w];if($.inboundNodes.length<=N){i(g,y);return}const S=$.inboundNodes[N];b.push(S.outputTensors[C])}b.length>0&&g.apply(qt(b),v)}function l(g){const y=g.name,b=fs(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(r),o[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new R(`Corrupted configuration, expected array for nodeData: ${x}`);i(b,x)})}const u=t.name,d=t.layers;for(const g of d)l(g);for(;!VO(a);)for(const g of d){const y=o[g.name];if(y.name in a){const b=a[y.name];delete a[y.name];for(const v of b)c(y,v)}}const h=[],p=[],f=t.inputLayers;for(const g of f){const y=g[0],b=g[1],v=g[2];Kn(y in o);const w=o[y].inboundNodes[b].outputTensors;h.push(w[v])}const m=t.outputLayers;for(const g of m){const y=g[0],b=g[1],v=g[2];Kn(y in o);const w=o[y].inboundNodes[b].outputTensors;p.push(w[v])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new R("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){P(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function e_(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function Q0(n,e){return e_(n,e,"classWeight")}async function ew(n,e,t,s){if(t!=null){const r=P(()=>{if(n.shape.length===1)return n.clone();if(n.shape.length===2){if(n.shape[1]>1)return n.argMax(1);if(n.shape[1]===1)return n.reshape([n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());ve(r);const a=[];return o.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Ln(a,"float32")}else return null}function t_(n,e){return B(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const n_=32;function tw(n,e){let t,s;const r=e;t=r.xs,s=r.ys,I(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=fg("input",n.inputNames,t),a=fg("output",n.outputNames,s),i=o[0].shape[0];I(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),I(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let c=0;c<o.length;c++)I(o[c].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[c]} has ${o[c].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let c=0;c<a.length;c++)I(a[c].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[c]} has ${a[c].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function fg(n,e,t){if(t instanceof it)return[t];if(Array.isArray(t))return I(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new R(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function s_(n){if(n.length===3)throw new ke("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function r_(n,e,t){const s=t.batchesPerEpoch!=null;if(I(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),I(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),I(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),I(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),I(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,a;if(r)if(mg(t.validationData))I(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=s_(t.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),c=n.getDedupedMetricsNames();let l;r?l=c.slice().concat(c.map(g=>"val_"+g)):l=c.slice();const u=G0(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:h,history:p}=j0(u,d,t.epochs,null,null,o_(e,t),null,r,l);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await h.onEpochBegin(f);let y=0,b=0;for(s||(m=await e.iterator());!s||y<t.batchesPerEpoch;){const v=await m.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){const{xs:x,ys:w}=tw(n,v.value),N={};N.batch=b,N.size=x[0].shape[0],await h.onBatchBegin(b,N);const C=[];if(t.classWeight!=null){const T=Q0(t.classWeight,n.outputNames);for(let E=0;E<T.length;++E)C.push(await ew(w[E],null,T[E]))}const $=x.concat(w).concat(C),S=i($);ve($);for(let T=0;T<c.length;++T){const E=c[T],F=S[T];N[E]=F,At(F)}await h.onBatchEnd(b,N),U0(N),b++,y++}if(s?y>=t.batchesPerEpoch:v.done){if(r){let x;mg(t.validationData)?x=Qe(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):x=Qe(n.evaluate(o,a,{batchSize:t.validationBatchSize==null?n_:t.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)g[`val_${n.metricsNames[w]}`]=x[w]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function o_(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function mg(n){return typeof n.iterator=="function"}function a_(n){return typeof n.next=="function"}async function i_(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new ke("Verbose mode is not implemented yet.");I(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=a_(e)?e:await e.iterator();let i=0,c=0;for(;!s||c<t.batches;){const l=await a.next();if(o=P(()=>{if(l.value){const{xs:u,ys:d}=tw(n,l.value),h=u.concat(d),p=P(()=>r(h));if(ve(h),c===0)for(let m=0;m<p.length;++m)o.push(Ne(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=P(()=>se(o[m],B(f,g))),c>0&&ve(y)}ve(p),i+=f,++c}return o}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<o.length;++l){const u=o[l];o[l]=ge(o[l],i),ve(u)}return qt(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zd(n){I(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Ro(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>ir(s,e,t-e)):ir(n,e,t-e)}function Ef(n,e){return P(()=>n==null?null:Array.isArray(n)?n.map(t=>Ef(t,e)):R0(n,e.dtype==="int32"?e:e.toInt()))}function Bd(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}async function c_(n,e,t,s,r,o,a,i,c,l,u,d,h,p,f){r==null&&(r=32),o==null&&(o=1),u==null&&(u=!0),h==null&&(h=0);let m=!1;c!=null&&l!=null&&(m=!0);const g=n.checkNumSamples(t,r,p,"steps_per_epoch");let y;g!=null&&(y=Bn(0,g)),a==null&&(a=1);const{callbackList:b,history:v}=j0(i,a,o,h,g,p,r,m,d);b.setModel(n),n.history=v,await b.onTrainBegin(),n.stopTraining_=!1;for(let x=h;x<o;++x){await b.onEpochBegin(x);const w={};{if(u==="batch")throw new ke("batch shuffling is not implemneted yet");u&&zI(y);const N=Ln(y),C=Bd(g,r);for(let $=0;$<C.length;++$){const S={};if(await b.onBatchBegin($,S),P(()=>{const T=C[$][0],E=C[$][1],F=ir(N,T,E-T);S.batch=$,S.size=E-T;const O=Ef(t,F),L=e(O);for(let z=0;z<s.length;++z){const M=s[z],K=L[z];S[M]=K,At(K)}if($===C.length-1&&m){const z=n.testLoop(c,l,r);for(let M=0;M<s.length;++M){const K=s[M],U=z[M];At(U),w["val_"+K]=U}}}),await b.onBatchEnd($,S),U0(S),n.stopTraining_)break}N.dispose()}if(await b.onEpochEnd(x,w),n.stopTraining_)break}return await b.onTrainEnd(),await n.history.syncData(),n.history}async function l_(n,e,t,s={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;let r,o,a,i,c,l,u;try{const d=s.batchSize==null?32:s.batchSize;zd(d);const p=await n.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,d);r=p[0],o=p[1],u=p[2];let f=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)a=s.validationData[0],i=s.validationData[1];else throw s.validationData.length===3?new ke("validationData including sample weights is not supported yet."):new R(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const $=await n.standardizeUserData(a,i,null,null,!0,d);c=$[0],l=$[1],m=c.concat(l)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;const C=Math.floor(r[0].shape[0]*(1-s.validationSplit)),$=r[0].shape[0];c=Ro(r,C,$),r=Ro(r,0,C),l=Ro(o,C,$),o=Ro(o,0,C),m=c.concat(l)}else s.validationSteps!=null&&(f=!0);const g=r.concat(o).concat(u);n.checkTrainableWeightsConsistency();const y=n.makeTrainFunction(),b=n.getDedupedMetricsNames();let v,x;f?(n.makeTestFunction(),v=n.testFunction,x=b.slice().concat(b.map(C=>"val_"+C))):(v=null,m=[],x=b.slice());const w=G0(s.callbacks,s.yieldEvery);return await c_(n,y,g,b,d,s.epochs,s.verbose,w,v,m,s.shuffle,x,s.initialEpoch,null,null)}finally{n.isTraining=!1,er(r,e),er(o,t),er(c,a),er(l,i),u!=null&&ve(u)}}function nw(n){const e=[];n instanceof it&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(mi(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function er(n,e){if(n==null)return;const t=[];if(e instanceof it)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof it)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function u_(n){return n instanceof it}function Wd(n){return Array.isArray(n)}function gg(n){return!u_(n)&&!Wd(n)}function yg(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(Wd(n)&&n.length>0)a=!0;else if(gg(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new R(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let o;if(gg(n)){n=n,o=[];for(const a of e){if(n[a]==null)throw new R(`No data provided for "${a}". Need data for each key in: ${e}`);o.push(n[a])}}else if(Wd(n)){if(n=n,n.length!==e.length)throw new R(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new R(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=nw(o),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new R(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let c=0;c<t[a].length;++c){if(c===0&&!s)continue;const l=i.shape[c],u=t[a][c];if(u!=null&&u>=0&&l!==u)throw new R(`Error when checking ${r}: expected ${e[a]} to have shape [${t[a]}], but got array with shape [${i.shape}].`)}}return o}function d_(n,e,t){const s=Ts(n.map(o=>o.shape[0]));s.sort();const r=Ts(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new R(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new R(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Le(s,r))throw new R(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function h_(n,e,t){const s=[fu,mu,Go];for(let r=0;r<n.length;++r){const o=n[r],a=e[r],i=t[r];if(a!=null){if(a===Go&&o.shape[o.shape.length-1]===1)throw new R(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const c=o.shape.slice(1),l=i.slice(1);for(let u=0;u<c.length;++u){const d=c[u],h=l[u];if(h!=null&&d!==h)throw new R(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function bg(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new R(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new R(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new R(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let c=0;c<t[a].length;++c){if(c===0&&!s)continue;const l=i.shape[c],u=t[a][c];if(u!=null&&u!==l)throw new R(`Error when checking ${r}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function p_(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const f_="layers-model";class Br extends An{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new R("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");jF(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=GF(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Us))throw new R("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new R(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Ku(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new R(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Ku(i))}else{const a=Ku(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],c=this.outputNames[a];this.feedOutputNames.push(c),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ar("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=p_(e.metrics,this.outputNames),o=(a,i,c)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([c,a])};ar("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=r[a];(l=>{let d,h,p;for(const f of l){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===mu?["accuracy","acc"].indexOf(f)!==-1?h=q0:["crossentropy","ce"].indexOf(f)!==-1&&(h=FF):this.lossFunctions[a]===Ic?["accuracy","acc"].indexOf(f)!==-1?h=_F:["crossentropy","ce"].indexOf(f)!==-1&&(h=Y0):["accuracy","acc"].indexOf(f)!==-1?h=K0:["crossentropy","ce"].indexOf(f)!==-1&&(h=X0);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=h,d=""+y}else p=UF(f),d=""+Ri(f);let m;ar(d,()=>{m=p}),o(a,d,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;zd(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const i=a[0].concat(a[1]);this.makeTestFunction();const c=this.testFunction,l=this.testLoop(c,i,r,s.verbose,s.steps);return qt(l)}finally{er(a[0],e),er(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),i_(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new R(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new R(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new R("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),a=new Ss;if(e instanceof it&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new R(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)a.add(this.inputs[c],e[c])}else for(const c of this.inputs){const l=e[c.name];if(l==null)throw new R(`No value is provided for the model's input ${c.name}`);a.add(c,l)}const i=Ao(o,a);return s?i:i[0]}retrieveSymbolicTensors(e){const t=pr(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],a=o.map(i=>i.name);for(let i=0;i<e.length;++i){const c=a.indexOf(e[i]);if(c!==-1&&(t[i]=o[c],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,a)=>{o==null&&r.push(e[a])}),new R(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return P(()=>{const r=this.checkNumSamples(e);if(s)throw new ke("Verbose predictLoop() is not implemented yet.");const o=Bd(r,t),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)P(()=>{const l=o[i][0],u=o[i][1],d=Ro(e,l,u),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new Ss(h);return Ao(this.outputs,p)}).forEach((l,u)=>a[u].push(l));return qt(a.map(i=>Ot(i,0)))})}predict(e,t={}){const s=nw(e);bg(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return zd(r),this.predictLoop(s,r)}finally{er(s,e)}}predictOnBatch(e){bg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new wn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===Ic?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(e=yg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yg(t,this.feedOutputNames,o,!1,"target"),d_(e,t),h_(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new R(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,a){const[i,c]=this.standardizeUserDataXY(e,t,o,a);if(s!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){const u=Q0(r,this.outputNames);l=[];for(let d=0;d<u.length;++d)l.push(await ew(c[d],null,u[d]))}return[i,c,l]}testLoop(e,t,s,r=0,o){return P(()=>{const a=this.checkNumSamples(t,s,o,"steps"),i=[];if(r>0)throw new ke("Verbose mode is not implemented yet.");if(o!=null)throw new ke("steps mode in testLoop() is not implemented yet");{const c=Bd(a,s),l=Ln(Bn(0,a));for(let u=0;u<c.length;++u){const d=c[u][0],h=c[u][1],p=ir(l,d,h-d),f=Ef(t,p),m=e(f);if(u===0)for(let g=0;g<m.length;++g)i.push(Ne(0));for(let g=0;g<m.length;++g){const y=m[g];i[g]=se(i[g],B(h-d,y))}}for(let u=0;u<i.length;++u)i[u]=ge(i[u],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(tg(e,r)>1){const a=tg(e.slice(0,s),r);o+=`_${a}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new Ss(d),p=Ao(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);o[m]!=null&&(y=t_(y,o[m]));const b=lt(y);t.push(b),m===0?f=y:f=se(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const y=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=lt(y(r[b],p[b]))}At(g),a.push(g)}return f=lt(f),this.calculateLosses().forEach(m=>{f=se(f,m)}),f},c=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(i,!0,c)].concat(a)}}makeTestFunction(){this.testFunction=e=>P(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:r[l]});const i=new Ss(a),c=Ao(this.outputs,i);for(let l=0;l<this.lossFunctions.length;++l){const u=this.lossFunctions[l],d=lt(u(o[l],c[l]));l===0?s=d:s=se(s,d),t.push(s)}for(let l=0;l<this.metricsTensors.length;++l){const u=this.metricsTensors[l][0],d=this.metricsTensors[l][1],h=lt(u(o[d],c[d]));t.push(h)}return t})}async fit(e,t,s={}){return l_(this,e,t,s)}async fitDataset(e,t){return r_(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],i=this.makeTrainFunction()(r.concat(o)),c=[];for(const l of i){const u=await l.data();c.push(u[0])}return ve(i),qt(c)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||t.push({name:r[a].originalName,tensor:o[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Lm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Lm().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=is(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>is(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=is(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[is(Ri(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>is(Ri(e)));{const e={};for(const t in this.metrics)e[t]=is(Ri(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ld(e.optimizer_config),s=fs(t);let r;if(typeof e.loss=="string")r=Ys(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>Ys(a));else if(e.loss!=null){r={};for(const a in e.loss)r[a]=Ys(e.loss[a])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(a=>Ys(a));else if(e.metrics!=null){o={};for(const a in e.metrics)o[a]=Ys(e.metrics[a])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const l=Qb(e);if(l.length===0)throw new R(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new R(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new R("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Am(this.getNamedWeights(t)),i={modelTopology:this.toJSON(null,!1),format:f_,generatedBy:`TensorFlow.js tfjs-layers v${Z0}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const l="optimizer",{data:u,specs:d}=await Am(await this.optimizer.getWeights(),l);s.specs.push(...d),s.data=Zb([s.data,u])}return this.userDefinedMetadata!=null&&(dg(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,e.save(i)}setUserDefinedMetadata(e){dg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Br.className="Model";Z(Br);class sw extends Br{}sw.className="Functional";Z(sw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jo extends Br{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:hu("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new R(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof jo||e instanceof Br;let s;if(t){if(s=e,s.outputs.length!==1)throw new R("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new R("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new R("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=yF({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new R(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new R("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=V0(this.outputs[0])}this.inboundNodes=[],new pu({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ke(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Br({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new wn("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new R("Legacy serialization format not supported yet.");o=t}else I(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof jo))throw new ke(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const c of o){const u=fs(c,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),i.add(u)}return i}set stopTraining(e){if(this.model==null)throw new R("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new R("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}jo.className="Sequential";Z(jo);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let nn=class extends oo{getConfig(){return{}}};class rw extends nn{apply(e,t=1){return nF(e,t)}}rw.className="elu";Z(rw);class ow extends nn{apply(e){return Op(e)}}ow.className="selu";Z(ow);class aw extends nn{apply(e){return kr(e)}}aw.className="relu";Z(aw);class iw extends nn{apply(e){return P(()=>Zl(6,kr(e)))}}iw.className="relu6";Z(iw);class cw extends nn{apply(e){return e}}cw.className="linear";Z(cw);class lw extends nn{apply(e){return ao(e)}}lw.className="sigmoid";Z(lw);class uw extends nn{apply(e){return rF(e)}}uw.className="hardSigmoid";Z(uw);class dw extends nn{apply(e){return ai(e)}}dw.className="softplus";Z(dw);class hw extends nn{apply(e){return sF(e)}}hw.className="softsign";Z(hw);class pw extends nn{apply(e){return gp(e)}}pw.className="tanh";Z(pw);let Af=class extends nn{apply(e,t=-1){return nu(e,t)}};Af.className="softmax";Z(Af);class fw extends nn{apply(e,t=-1){return $p(e,t)}}fw.className="logSoftmax";Z(fw);class mw extends nn{apply(e,t=1){return P(()=>ao(e.mul(t)).mul(e))}}mw.className="swish";Z(mw);function _s(n){return n.getClassName()}function Yu(n,e={}){return hi(n,xn.getMap().classNameMap,e,"activation")}function Ps(n){if(n==null){const e={};return e.className="linear",e.config={},Yu(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Yu(e)}else return n instanceof nn?n:Yu(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function m_(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class gw extends oo{}class yw extends gw{constructor(e){super(),m_(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return P(()=>{let t=ht([1]);return this.hasL1&&(t=se(t,be(B(this.l1,Vt(e))))),this.hasL2&&(t=se(t,be(B(this.l2,gi(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}yw.className="L1L2";Z(yw);const xg={l1l2:"L1L2"};function He(n){return gf(n)}function wg(n,e={}){return hi(n,xn.getMap().classNameMap,e,"regularizer")}function tt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in xg?xg[n]:n,config:{}};return wg(t)}else return n instanceof gw?n:wg(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bw extends Ae{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ce(e);let s=kr(e);return this.maxValue!=null&&(s=Qt(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}bw.className="ReLU";Z(bw);class xw extends Ae{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ce(e);return Xl(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xw.className="LeakyReLU";Z(xw);class ww extends Ae{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=et(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=tt(e.alphaRegularizer),this.alphaConstraint=wt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new R(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ke(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Rt({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Ce(e),tu(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ot(this.alphaInitializer),alphaRegularizer:He(this.alphaRegularizer),alphaConstraint:xt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}ww.className="PReLU";Z(ww);let vw=class extends Ae{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new ke(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ce(e);return ri(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};vw.className="ELU";Z(vw);class kw extends Ae{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Ce(e);return s.mul(fi(s.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}kw.className="ThresholdedReLU";Z(kw);class Cw extends Ae{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Af().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=Ce(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Cw.className="Softmax";Z(Cw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wr(n,e,t){if(typeof n=="number")return pr(n,e);if(n.length!==e)throw new R(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!ZO(r))throw new R(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Fn(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let a;return t==="same"?a=n:a=n-o+1,Math.floor((a+s-1)/s)}function Oi(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Fs([t-e,0]);else if(s==="same")n=n*e;else throw new R(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rf(n,e){return P(()=>(dt(e),e==="channelsFirst"?Ue(n,[0,2,3,1]):n))}function Nw(n,e){return P(()=>(dt(e),e==="channelsFirst"?Ue(n,[0,2,3,4,1]):n))}function g_(n,e,t,s=1,r="valid",o,a=1){return P(()=>{if(o==null&&(o=zn()),dt(o),n.shape.length!==3)throw new R(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new R(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new R(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(n=Ue(n,[0,2,1])),r==="causal")throw new ke("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=yp(n,e,s,r==="same"?"same":"valid","NWC",a);return t!=null&&(i=os(i,t)),i})}function vg(n,e,t,s=[1,1],r="valid",o,a,i=null){return P(()=>{if(o==null&&(o=zn()),dt(o),n.rank!==3&&n.rank!==4)throw new R(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new R(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let c=Rf(n,o);if(r==="causal")throw new ke("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=o0({x:c,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),o==="channelsFirst"&&(c=Ue(c,[0,3,1,2])),c})}function y_(n,e,t,s=[1,1,1],r="valid",o,a){return P(()=>{if(o==null&&(o=zn()),dt(o),n.rank!==4&&n.rank!==5)throw new R(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new R(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=Nw(n,o);if(r==="causal")throw new ke("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ex(i,e,s,r==="same"?"same":"valid","NDHWC",a),t!=null&&(i=os(i,t)),o==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}class gu extends Ae{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",gu.verifyArgs(t),this.rank=e,Nt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ke(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Wr(t.kernelSize,e,"kernelSize"),this.strides=Wr(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,hn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,dt(this.dataFormat),this.activation=Ps(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=et(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=wt(t.biasConstraint),this.biasRegularizer=tt(t.biasRegularizer),this.activityRegularizer=tt(t.activityRegularizer),this.dilationRate=Wr(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new R(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new R(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new R(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Kn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!yf(e.kernelSize,"number",1,3))throw new R(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:_s(this.activation),useBias:this.useBias,biasInitializer:ot(this.biasInitializer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),biasConstraint:xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class ho extends gu{constructor(e,t){super(e,t),this.kernel=null,ho.verifyArgs(t),this.filters=t.filters,Nt(this.filters,"filters"),this.kernelInitializer=et(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=wt(t.kernelConstraint),this.kernelRegularizer=tt(t.kernelRegularizer)}build(e){e=Ke(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new R(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return P(()=>{e=Ce(e);let s;const r=this.bias==null?null:this.bias.read(),o=k0(this.activation.getClassName());if(o!=null&&this.rank===2)s=vg(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=g_(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=vg(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=y_(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ke("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Ke(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const a=Fn(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ot(this.kernelInitializer),kernelRegularizer:He(this.kernelRegularizer),kernelConstraint:xt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new R(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class xi extends ho{constructor(e){super(2,e),xi.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!yf(e.kernelSize,"number",1,2))throw new R(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}xi.className="Conv2D";Z(xi);class yu extends ho{constructor(e){super(3,e),yu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new R(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}yu.className="Conv3D";Z(yu);class $w extends xi{constructor(e){if(super(e),this.inputSpec=[new Rt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new R(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ke(e),e.length!==4)throw new R("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new R("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Rt({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return P(()=>{let s=Ce(e);if(s.shape.length!==4)throw new R(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const c=r[a],l=r[i],u=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=Oi(c,h,u,this.padding),m=Oi(l,p,d,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Ue(s,[0,2,3,1]));let y=xp(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Ue(y,[0,3,1,2])),this.bias!=null&&(y=os(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=Ke(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],c=this.strides[0],l=this.strides[1];return t[s]=this.filters,t[r]=Oi(t[r],c,a,this.padding),t[o]=Oi(t[o],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}$w.className="Conv2DTranspose";Z($w);class Iw extends ho{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new R("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new R("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new R(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=et(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=tt(t.depthwiseRegularizer),this.depthwiseConstraint=wt(t.depthwiseConstraint),this.pointwiseInitializer=et(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=tt(t.pointwiseRegularizer),this.pointwiseConstraint=wt(t.pointwiseConstraint)}build(e){if(e=Ke(e),e.length<this.rank+2)throw new R(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new R(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Rt({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return P(()=>{e=Ce(e);let s;if(this.rank===1)throw new ke("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),s=qx(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=os(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ue(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ot(this.depthwiseInitializer),e.pointwiseInitializer=ot(this.pointwiseInitializer),e.depthwiseRegularizer=He(this.depthwiseRegularizer),e.pointwiseRegularizer=He(this.pointwiseRegularizer),e.depthwiseConstraint=xt(this.depthwiseConstraint),e.pointwiseConstraint=xt(this.pointwiseConstraint),e}}Iw.className="SeparableConv";class Sw extends Iw{constructor(e){super(2,e)}}Sw.className="SeparableConv2D";Z(Sw);class bu extends ho{constructor(e){super(1,e),bu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!yf(e.kernelSize,"number",1,1))throw new R(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}bu.className="Conv1D";Z(bu);class Tw extends Ae{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return P(()=>{if(e=Ce(e),this.dataFormat==="channelsLast"){const s=Ei(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ei(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Ei(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ei(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Tw.className="Cropping2D";Z(Tw);class Dw extends Ae{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,dt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,XO(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return P(()=>{let s=Ce(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Ue(s,[0,2,3,1]);const o=this.size[0]*r[2],a=this.size[1]*r[3],i=this.interpolation==="nearest"?s.resizeNearestNeighbor([o,a]):s.resizeBilinear([o,a]);return Ue(i,[0,3,1,2])}else{const o=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?s.resizeNearestNeighbor([o,a]):s.resizeBilinear([o,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Dw.className="UpSampling2D";Z(Dw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function b_(n,e,t=[1,1],s="valid",r,o){return P(()=>{r==null&&(r=zn()),dt(r);let a=Rf(n,r);if(n.rank!==4)throw new R(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new R(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=si(a,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(a=Ue(a,[0,3,1,2])),a})}class Ew extends gu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=et(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=wt(e.depthwiseConstraint),this.depthwiseRegularizer=tt(e.depthwiseRegularizer)}build(e){if(e=Ke(e),e.length<4)throw new R(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new R(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return P(()=>{e=Ce(e);let s=b_(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=os(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Ke(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Fn(t,this.kernelSize[0],this.padding,this.strides[0]),a=Fn(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,a]:[e[0],o,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ot(this.depthwiseInitializer),e.depthwiseRegularizer=He(this.depthwiseRegularizer),e.depthwiseConstraint=xt(this.depthwiseRegularizer),e}}Ew.className="DepthwiseConv2D";Z(Ew);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Aw(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new R("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function Rw(n,e,t,s=!1,r,o,a=!1,i=!1){return P(()=>{const c=e.shape.length;if(c<3)throw new R(`Input should be at least 3D, but is ${c}D.`);const l=[1,0].concat(Bn(2,c));e=Ue(e,l),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=r.asType("bool").asType("float32"),r.rank===c-1&&(r=bn(r,-1)),r=Ue(r,l)),s&&(e=gs(e,0),r!=null&&(r=gs(r,0)));const u=[];let d,h=t;const p=e.shape[0],f=Mn(e);let m;r!=null&&(m=Mn(r));for(let y=0;y<p;++y){const b=f[y],v=P(()=>n(b,h));if(r==null)d=v[0],h=v[1];else{const x=P(()=>{const w=m[y],N=dn(w).sub(w),C=v[0].mul(w).add(h[0].mul(N)),$=h.map((S,T)=>v[1][T].mul(w).add(S.mul(N)));return{output:C,newStates:$}});d=x.output,h=x.newStates}i&&u.push(d)}let g;return i&&(g=Nn(u,1)),[d,g,h]})}class Gs extends Ae{constructor(e){super(e);let t;if(e.cell==null)throw new R("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new _f({cells:e.cell}):t=e.cell,t.stateSize==null)throw new R("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Rt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Bn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Fd(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const a of t)o.push([e[0],a]);return[r].concat(o)}else return r}computeMask(e,t){return P(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new ke("Constants support is not implemented in RNN yet.");Fd(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Rt({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Le(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new R(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new Rt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){P(()=>{if(!this.stateful)throw new qn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new R("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>ht([s,r])):this.states_=[ht([s,this.cell.stateSize])];else if(e==null)ve(this.states_),this.keptStates!=null&&(ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>ht([s,r])):this.states_[0]=ht([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new R(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ve(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[s,a];if(!Le(o.shape,i))throw new R(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>At(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Aw(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let a=[],i=[];if(s!=null){t.initialState=s,a=a.concat(s),this.stateSpec=[];for(const l of s)this.stateSpec.push(new Rt({shape:l.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Jn){const l=[e].concat(a),u=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=u;const h=super.apply(l,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return P(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=Ce(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new R(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},l=Rw((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),u=l[0],d=l[1],h=l[2];this.stateful&&this.resetStates(h,r);const p=this.returnSequences?d:u;return this.returnState?[p].concat(h):p})}getInitialState(e){return P(()=>{let t=ht(e.shape);return t=be(t,[1,2]),t=mi(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Rd(t,[1,s]):t):this.cell.stateSize>1?[Rd(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Gs.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign({},s,e,t)}static fromConfig(e,t,s={}){const r=t.cell,o=fs(r,s);return new e(Object.assign(t,{cell:o}))}}Gs.className="RNN";Z(Gs);class xu extends Ae{}class Of extends xu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Nt(this.units,"units"),this.activation=Ps(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tt(e.kernelRegularizer),this.recurrentRegularizer=tt(e.recurrentRegularizer),this.biasRegularizer=tt(e.biasRegularizer),this.kernelConstraint=wt(e.kernelConstraint),this.recurrentConstraint=wt(e.recurrentConstraint),this.biasConstraint=wt(e.biasConstraint),this.dropout=Yr([1,Fs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Yr([1,Fs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ke(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return P(()=>{if(e=e,e.length!==2)throw new R(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ls({ones:()=>dn(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ls({ones:()=>dn(s),rate:this.recurrentDropout,training:r}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=Qn(B(e,a),this.kernel.read()):o=Qn(e,this.kernel.read()),this.bias!=null&&(o=os(o,this.bias.read())),i!=null&&(s=B(s,i));let c=se(o,Qn(s,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:_s(this.activation),useBias:this.useBias,kernelInitializer:ot(this.kernelInitializer),recurrentInitializer:ot(this.recurrentInitializer),biasInitializer:ot(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:xt(this.kernelConstraint),recurrentConstraint:xt(this.recurrentConstraint),biasConstraint:xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Of.className="SimpleRNNCell";Z(Of);class Ow extends Gs{constructor(e){e.cell=new Of(e),super(e)}call(e,t){return P(()=>{this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}Ow.className="SimpleRNN";Z(Ow);class Ff extends xu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new R("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Nt(this.units,"units"),this.activation=Ps(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ps(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tt(e.kernelRegularizer),this.recurrentRegularizer=tt(e.recurrentRegularizer),this.biasRegularizer=tt(e.biasRegularizer),this.kernelConstraint=wt(e.kernelConstraint),this.recurrentConstraint=wt(e.recurrentConstraint),this.biasConstraint=wt(e.biasConstraint),this.dropout=Yr([1,Fs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Yr([1,Fs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ke(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return P(()=>{if(e=e,e.length!==2)throw new R(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ls({ones:()=>dn(e),rate:this.dropout,training:s,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ls({ones:()=>dn(r),rate:this.recurrentDropout,training:s,count:3}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(e=B(e,o[0]));let u=Qn(e,this.kernel.read());this.useBias&&(u=os(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=B(r,a[0]));const d=this.recurrentKernel.read(),[h,p]=an(d,[2*this.units,this.units],d.rank-1),f=Qn(r,h),[m,g,y]=an(u,3,u.rank-1),[b,v]=an(f,2,f.rank-1);i=this.recurrentActivation.apply(se(m,b)),c=this.recurrentActivation.apply(se(g,v));const x=Qn(B(c,r),p);l=this.activation.apply(se(y,x));const w=se(B(i,r),B(se(1,bt(i)),l));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:_s(this.activation),recurrentActivation:_s(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ot(this.kernelInitializer),recurrentInitializer:ot(this.recurrentInitializer),biasInitializer:ot(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:xt(this.kernelConstraint),recurrentConstraint:xt(this.recurrentConstraint),biasConstraint:xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Ff.className="GRUCell";Z(Ff);class Fw extends Gs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ff(e),super(e)}call(e,t){return P(()=>{this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}Fw.className="GRU";Z(Fw);class wu extends xu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Nt(this.units,"units"),this.activation=Ps(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ps(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=tt(e.kernelRegularizer),this.recurrentRegularizer=tt(e.recurrentRegularizer),this.biasRegularizer=tt(e.biasRegularizer),this.kernelConstraint=wt(e.kernelConstraint),this.recurrentConstraint=wt(e.recurrentConstraint),this.biasConstraint=wt(e.biasConstraint),this.dropout=Yr([1,Fs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Yr([1,Fs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ke(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;r=new(t=class extends Sn{apply(c,l){const u=o.apply([a]),d=new wf().apply([a]),h=o.apply([a*2]);return og(og(u,d),h)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return P(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new R(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ls({ones:()=>dn(e),rate:this.dropout,training:s,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ls({ones:()=>dn(r),rate:this.recurrentDropout,training:s,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,u,d;0<this.dropout&&this.dropout<1&&(e=B(e,a[0]));let h=Qn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=B(r,i[0])),h=se(h,Qn(r,this.recurrentKernel.read())),this.useBias&&(h=os(h,this.bias.read()));const[p,f,m,g]=an(h,4,h.rank-1);c=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),u=se(B(l,o),B(c,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=B(d,this.activation.apply(u));return[y,y,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:_s(this.activation),recurrentActivation:_s(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ot(this.kernelInitializer),recurrentInitializer:ot(this.recurrentInitializer),biasInitializer:ot(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:He(this.kernelRegularizer),recurrentRegularizer:He(this.recurrentRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:xt(this.kernelConstraint),recurrentConstraint:xt(this.recurrentConstraint),biasConstraint:xt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}wu.className="LSTMCell";Z(wu);class _w extends Gs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wu(e),super(e)}call(e,t){return P(()=>{this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}_w.className="LSTM";Z(_w);class _f extends xu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return P(()=>{e=e;let s=e.slice(1);const r=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(s.splice(0,i.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const c=this.cells[i];s=r[i],i===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=c.call(a,t),o.push(a.slice(1))}s=[];for(const i of o.slice().reverse())s.push(...i);return[a[0]].concat(s)})}build(e){Fd(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{ar(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign({},e,r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(fs(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return _d(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let a=0;a<s.weights.length;++a)t.push([s.weights[a],o[a]])}Sf(t)}}_f.className="StackedRNNCells";Z(_f);function Ls(n){const{ones:e,rate:t,training:s=!1,count:r=1}=n,o=()=>O0(e(),t),a=()=>yi(o,e,s);return!r||r<=1?At(a().clone()):Array(r).fill(void 0).map(a).map(c=>At(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var x_=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class Pw extends Gs{constructor(e){if(e.unroll)throw new ke("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ke("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Rt({ndim:5})]}call(e,t){return P(()=>{if(this.cell.dropoutMask!=null&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new R("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return P(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],a=ht(o);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){P(()=>{if(!this.stateful)throw new qn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new R("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ht(o)):this.states_=[ht(o)];else if(e==null)ve(this.states_),this.keptStates!=null&&(ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ht(o)):this.states_[0]=ht(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new R(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ve(this.states_);for(let i=0;i<this.states_.length;++i){const c=e[i],l=o;if(!Le(c.shape,l))throw new R(`State ${i} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${c.shape}`);this.states_[i]=c}}this.states_=this.states_.map(i=>At(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:a,dilationRate:i}=this.cell,c=t==="channelsFirst",l=e[c?3:2],u=e[c?4:3],d=Fn(l,r[0],o,a[0],i[0]),h=Fn(u,r[1],o,a[1],i[1]);return[...e.slice(0,2),...c?[s,d,h]:[d,h,s]]}}Pw.className="ConvRNN2D";class Pf extends wu{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Nt(this.filters,"filters"),this.kernelSize=Wr(s,2,"kernelSize"),this.kernelSize.forEach(c=>Nt(c,"kernelSize")),this.strides=Wr(r||1,2,"strides"),this.strides.forEach(c=>Nt(c,"strides")),this.padding=o||"valid",hn(this.padding),this.dataFormat=a||"channelsLast",dt(this.dataFormat),this.dilationRate=Wr(i||1,2,"dilationRate"),this.dilationRate.forEach(c=>Nt(c,"dilationRate"))}build(e){var t;e=Ke(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new R(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,a=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const l=this.biasInitializer,u=this.filters;c=new(t=class extends Sn{apply(h,p){const f=l.apply([u]),m=Vs([u]),g=l.apply([u*2]);return xf([f,m,g])}},t.className="CustomInit",t)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return P(()=>{if(e.length!==3)throw new R(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ls({ones:()=>dn(r),rate:this.dropout,training:s,count:i}));const c=this.dropoutMask,l=(X,J,j)=>!J||!J[j]?X:B(J[j],X);let u=l(r,c,0),d=l(r,c,1),h=l(r,c,2),p=l(r,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ls({ones:()=>dn(o),rate:this.recurrentDropout,training:s,count:i}));const f=this.recurrentDropoutMask;let m=l(o,f,0),g=l(o,f,1),y=l(o,f,2),b=l(o,f,3);const v=3,[x,w,N,C]=an(this.kernel.read(),i,v),[$,S,T,E]=this.useBias?an(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,$,this.padding),d=this.inputConv(d,w,S,this.padding),h=this.inputConv(h,N,T,this.padding),p=this.inputConv(p,C,E,this.padding);const[F,O,L,z]=an(this.recurrentKernel.read(),i,v);m=this.recurrentConv(m,F),g=this.recurrentConv(g,O),y=this.recurrentConv(y,L),b=this.recurrentConv(b,z);const M=this.recurrentActivation.apply(se(u,m)),K=this.recurrentActivation.apply(se(d,g)),U=se(B(K,a),B(M,this.activation.apply(se(h,y)))),H=B(this.recurrentActivation.apply(se(p,b)),this.activation.apply(U));return[H,H,U]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=x_(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},s,r)}inputConv(e,t,s,r){const o=Rs(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?os(o,s,this.dataFormat):o}recurrentConv(e,t){return Rs(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Pf.className="ConvLSTM2DCell";Z(Pf);class Lw extends Pw{constructor(e){const t=new Pf(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Lw.className="ConvLSTM2D";Z(Lw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Lf extends Ae{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return P(()=>{this.invokeCallHook(e,t);const s=Ce(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return yi(()=>O0(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Lf.className="Dropout";Z(Lf);class Mw extends Lf{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Mw.className="SpatialDropout1D";Z(Mw);class zw extends Ae{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Nt(this.units,"units"),this.activation=Ps(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=wt(e.kernelConstraint),this.biasConstraint=wt(e.biasConstraint),this.kernelRegularizer=tt(e.kernelRegularizer),this.biasRegularizer=tt(e.biasRegularizer),this.activityRegularizer=tt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ke(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ke(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return P(()=>{this.invokeCallHook(e,t);const s=Ce(e),r=k0(this.activation.getClassName());let o;return r!=null?o=Qn(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Qn(s,this.kernel.read()),this.bias!=null&&(o=os(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:_s(this.activation),useBias:this.useBias,kernelInitializer:ot(this.kernelInitializer),biasInitializer:ot(this.biasInitializer),kernelRegularizer:He(this.kernelRegularizer),biasRegularizer:He(this.biasRegularizer),activityRegularizer:He(this.activityRegularizer),kernelConstraint:xt(this.kernelConstraint),biasConstraint:xt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}zw.className="Dense";Z(zw);class Bw extends Ae{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ke(e);for(const t of e.slice(1))if(t==null)throw new R(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ds(e,1)]}call(e,t){return P(()=>{this.invokeCallHook(e,t);let s=Ce(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=s.transpose(r)}return tF(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Bw.className="Flatten";Z(Bw);class Ww extends Ae{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ps(e.activation)}call(e,t){return P(()=>{this.invokeCallHook(e,t);const s=Ce(e);return this.activation.apply(s)})}getConfig(){const e={activation:_s(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Ww.className="Activation";Z(Ww);class Vw extends Ae{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return P(()=>(e=Ce(e),QO(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Vw.className="RepeatVector";Z(Vw);class Uw extends Ae{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,a=null;for(let c=0;c<r.length;++c){const l=r[c];if(this.isUnknown(l))if(a===null)a=c;else throw new R("Can only specifiy one unknown dimension.");else o*=l}const i=Ds(e);if(a!==null){if(o===0||i%o!==0)throw new R(s);r[a]=i/o}else if(i!==o)throw new R(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return P(()=>{this.invokeCallHook(e,t);const s=Ce(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return s.reshape(o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Uw.className="Reshape";Z(Uw);class Gw extends Ae{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Bn(1,e.dims.length+1);if(!Le(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Rt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ke(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return Ue(Ce(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Gw.className="Permute";Z(Gw);class jw extends Ae{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Ce(e);return gc(Vo(s,this.maskValue),-1)}call(e,t){return P(()=>{this.invokeCallHook(e,t);const s=Ce(e),a=gc(Vo(s,this.maskValue),-1,!0);return s.mul(a.asType(s.dtype))})}}jw.className="Masking";Z(jw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hw extends Ae{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Qe(e.inputLength))}this.inputDim=e.inputDim,Nt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Nt(this.outputDim,"outputDim"),this.embeddingsInitializer=et(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=tt(e.embeddingsRegularizer),this.activityRegularizer=tt(e.activityRegularizer),this.embeddingsConstraint=wt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return P(()=>this.maskZero?(e=Ce(e),Vo(e,Ee(e))):null)}computeOutputShape(e){if(e=Ke(e),this.inputLength==null)return[...e,this.outputDim];const t=Qe(this.inputLength);if(t.length!==e.length-1)throw new R(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],a=e[r+1];if(o!=null&&a!=null&&o!==a)throw new R(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=a),s++}}return[e[0],...t,this.outputDim]}call(e,t){return P(()=>{this.invokeCallHook(e,t);let s=Ce(e);return s.dtype!=="int32"&&(s=fi(s,"int32")),R0(this.embeddings.read(),s.as1D()).reshape(Ke(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ot(this.embeddingsInitializer),embeddingsRegularizer:He(this.embeddingsRegularizer),activityRegularizer:He(this.activityRegularizer),embeddingsConstraint:xt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Hw.className="Embedding";Z(Hw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nr extends Ae{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ke}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],a=t[r];if(o==null||a==null||o<0||a<0)s.push(null);else if(o===1)s.push(a);else if(a===1)s.push(o);else{if(o!==a)throw new R("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ke(e)]),e=e,e.length<2)throw new R(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Ts(t),t.length>1)throw new R(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const a=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&Ts(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return P(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Fs(r);for(let a of e){const i=a.rank;for(let c=0;c<o-i;++c)a=mi(a,1);s.push(a)}return this.mergeFunction(s)}else{let o=!1;for(const c of e){const l=c.rank;if(l==null){const u=c.shape,d=u[0],h=u.slice(1).concat([d]);let p=c.reshape([d].concat(Ds(u.slice(1))));p=Ue(p,[1,0]),p=p.reshape(h),s.push(p),o=!0}else if(l>1){const u=Bn(1,l).concat([0]);s.push(Ue(c,u)),o=!0}else s.push(c)}let a=this.mergeFunction(s);const i=a.rank;if(o){if(i==null){const c=a.shape,l=c.length,u=c[l-1],d=[u].concat(c.slice(0,c.length-1));a=Ue(a.reshape([-1,u]),[1,0]).reshape(d)}else if(i>1){const c=[i-1].concat(Bn(0,i-1));a=Ue(a,c)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Ts(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return P(()=>{if(t==null)return null;if(!Array.isArray(t))throw new R("`mask` should be an Array");if(!Array.isArray(e))throw new R("`inputs` should be an Array");if(t.length!==e.length)throw new R(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:bn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=ts(s,t[r]);return s})}}class qw extends Nr{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=se(t,e[s]);return t})}}qw.className="Add";Z(qw);class Kw extends Nr{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=B(t,e[s]);return t})}}Kw.className="Multiply";Z(Kw);class Xw extends Nr{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=se(t,e[s]);return B(1/e.length,t)})}}Xw.className="Average";Z(Xw);class Yw extends Nr{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=ws(t,e[s]);return t})}}Yw.className="Maximum";Z(Yw);class Jw extends Nr{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Zl(t,e[s]);return t})}}Jw.className="Minimum";Z(Jw);class Zw extends Nr{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new R("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let a=!1;for(const i of s)if(Le(i,o)){a=!0;break}a||s.push(o)}if(s.length>1)throw new R("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return P(()=>xf(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new R("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new R("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new R("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new R(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return P(()=>{let s=!0;if(t.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(dn(e[a]).asType("bool")):t[a].rank<e[a].rank?r.push(bn(t[a],-1)):r.push(t[a]);const o=Ot(r,this.axis);return fp(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Zw.className="Concatenate";Z(Zw);function Io(n,e){for(;n<0;)n+=e;return n}function w_(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new ke("batchDot is not implemented for tensors of 4D or higher rank yet");if(I(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),I(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new ke("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return P(()=>{let a;if(s>r){a=s-r;const c=[];for(let l=0;l<a;++l)c.push(1);e=e.reshape(e.shape.concat(c))}else if(r>s){a=r-s;const c=[];for(let l=0;l<a;++l)c.push(1);n=n.reshape(n.shape.concat(c))}else a=0;let i;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?i=n.mul(e).sum(o[0]):i=n.transpose([1,0]).mul(e).sum(o[1]);else{const c=o[0]!==n.shape.length-1,l=o[1]===e.shape.length-1;i=n.matMul(e,c,l)}if(a>0){let c;s>r?c=s+r-3:c=s-1;const l=[];for(let u=c;u<c+a;++u)l.push(u);i=i.squeeze(l)}return i.shape.length===1&&(i=i.expandDims(1)),i})}class Qw extends Nr{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){I(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new ke("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new R(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new R(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,a)=>Io(o,e[a].shape.length)):r=[Io(this.axes,t.shape.length),Io(this.axes,s.shape.length)],this.normalize&&(t=$c(t,r[0]),s=$c(s,r[1])),w_(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[Io(this.axes,e.length),Io(this.axes,t.length)],s}computeOutputShape(e){I(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new ke("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Qw.className="Dot";Z(Qw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class e1 extends Ae{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return P(()=>{this.invokeCallHook(e,t);const s=Ce(e);return yi(()=>du(s.shape,0,this.stddev).add(s),()=>s,t.training||!1)})}}e1.className="GaussianNoise";Z(e1);class t1 extends Ae{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return P(()=>{this.invokeCallHook(e,t);const s=Ce(e);return this.rate>0&&this.rate<1?yi(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return s.mul(du(s.shape,1,o))},()=>s,t.training||!1):s})}}t1.className="GaussianDropout";Z(t1);class n1 extends Ae{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ce(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return P(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return yi(()=>{const o=Ce(e),i=-1.6732632423543772*1.0507009873554805;let c=vr(ii(s),this.rate);c=fi(c,"float32");const l=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-l*i*this.rate;return o.mul(c).add(c.add(-1).mul(i)).mul(l).add(u)},()=>Ce(e),t.training||!1)}return e})}}n1.className="AlphaDropout";Z(n1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ho(n,e,t,s,r,o=.001){let a;if(n.rank===2)a=PT(n,e,t,s,r,o);else if(n.rank===3)a=MT(n,e,t,s,r,o);else if(n.rank===4)a=BT(n,e,t,s,r,o);else throw new ke(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function v_(n,e,t,s,r=.001){return P(()=>{const o=Tp(n,s),a=o.mean,i=o.variance;return[Ho(n,a,i,t,e,r),a,i]})}function k_(n,e,t,s,r=.001){return P(()=>{const o=Tp(n,s),a=o.mean,i=o.variance,c=[];for(const f of Bn(0,n.rank))s.indexOf(f)!==-1?c.push(1):c.push(n.shape[f]);const l=a.reshape(c),u=i.reshape(c),d=e==null?null:e.reshape(c),h=t==null?null:t.reshape(c);return[Ho(n,l,u,h,d,r),a,i]})}function C_(n,e,t,s,r=.001){return Le(s.slice().sort(),Bn(0,n.rank-1))?v_(n,e,t,s,r):k_(n,e,t,s,r)}class s1 extends Ae{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=et(e.betaInitializer||"zeros"),this.gammaInitializer=et(e.gammaInitializer||"ones"),this.movingMeanInitializer=et(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=et(e.movingVarianceInitializer||"ones"),this.betaConstraint=wt(e.betaConstraint),this.gammaConstraint=wt(e.gammaConstraint),this.betaRegularizer=tt(e.betaRegularizer),this.gammaRegularizer=tt(e.gammaRegularizer)}build(e){e=Ke(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new R(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Rt({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return P(()=>{const s=t.training==null?!1:t.training,r=Ce(e),o=r.shape,a=o.length,i=Bn(0,a),c=this.axis>=0?this.axis:this.axis+a;i.splice(c,1);const l=pr(1,a);l[c]=o[c];const u=i.slice();u.sort();const d=!Le(u,Bn(0,a).slice(0,a-1)),h=()=>{if(d){const b=this.movingMean.read().reshape(l),v=this.movingVariance.read().reshape(l),x=this.center?this.beta.read().reshape(l):null,w=this.scale?this.gamma.read().reshape(l):null;return Ho(r,b,v,x,w,this.epsilon)}else return Ho(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=C_(r,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,v,x)=>{P(()=>{const w=1-x,N=b.read(),C=N.sub(v).mul(w);b.write(N.sub(C))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ot(this.betaInitializer),gammaInitializer:ot(this.gammaInitializer),movingMeanInitializer:ot(this.movingMeanInitializer),movingVarianceInitializer:ot(this.movingVarianceInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer),betaConstraint:xt(this.betaConstraint),gammaConstraint:xt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}s1.className="BatchNormalization";Z(s1);class r1 extends Ae{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=et(e.betaInitializer||"zeros"),this.gammaInitializer=et(e.gammaInitializer||"ones"),this.betaRegularizer=tt(e.betaRegularizer),this.gammaRegularizer=tt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ke(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Ts(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=Ce(e),r=s.shape,o=r.length;return P(()=>{let{mean:i,variance:c}=Tp(s,this.axis,!0);const l=pr(1,o);for(const m of this.axis)l[m]=r[m];const u=m=>m!=null&&m.shape.length!==o&&this.axis!==[o-1]?m.reshape(l):m;let d=u(this.gamma.read()),h=u(this.beta.read());const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return i=i.tile(p),c=c.tile(p),d=d.tile(f),h=h.tile(f),Ho(s,i,c,h,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ot(this.betaInitializer),gammaInitializer:ot(this.gammaInitializer),betaRegularizer:He(this.betaRegularizer),gammaRegularizer:He(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}r1.className="LayerNormalization";Z(r1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N_(n,e,t){return P(()=>{if(n.rank!==4)throw new R(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new R("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=zn()),t!=="channelsLast"&&t!=="channelsFirst")throw new R(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Ql(n,s)})}class o1 extends Ae{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?zn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new R(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new R(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new R(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){e=Ke(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return P(()=>N_(Ce(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}o1.className="ZeroPadding2D";Z(o1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vu(n,e,t,s,r,o){return P(()=>{dt(r),S0(o),hn(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=zn()),o==null&&(o="max"),n=Rf(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=Jl(n,e,t,i):a=Hl(n,e,t,i),r==="channelsFirst"&&(a=Ue(a,[0,3,1,2])),a})}function a1(n,e,t,s,r,o){return P(()=>{dt(r),S0(o),hn(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=zn()),o==null&&(o="max"),n=Nw(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=Bx(n,e,t,i):a=Tx(n,e,t,i),r==="channelsFirst"&&(a=Ue(a,[0,4,1,2,3])),a})}class i1 extends Ae{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new R(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Nt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new R(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Nt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,hn(this.padding),this.inputSpec=[new Rt({ndim:3})]}computeOutputShape(e){e=Ke(e);const t=Fn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return P(()=>{this.invokeCallHook(e,t),e=mi(Ce(e),2);const s=this.poolingFunction(Ce(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Xr(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class c1 extends i1{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return dt(o),hn(r),vu(e,t,s,r,o,"max")}}c1.className="MaxPooling1D";Z(c1);class l1 extends i1{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return dt(o),hn(r),vu(e,t,s,r,o,"avg")}}l1.className="AveragePooling1D";Z(l1);class u1 extends Ae{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new R(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Nt(this.poolSize,"poolSize"),Nt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,dt(this.dataFormat),hn(this.padding),this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){e=Ke(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Fn(t,this.poolSize[0],this.padding,this.strides[0]),s=Fn(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return P(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class d1 extends u1{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return dt(o),hn(r),vu(e,t,s,r,o,"max")}}d1.className="MaxPooling2D";Z(d1);class h1 extends u1{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return dt(o),hn(r),vu(e,t,s,r,o,"avg")}}h1.className="AveragePooling2D";Z(h1);class p1 extends Ae{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new R(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Nt(this.poolSize,"poolSize"),Nt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,dt(this.dataFormat),hn(this.padding),this.inputSpec=[new Rt({ndim:5})]}computeOutputShape(e){e=Ke(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Fn(t,this.poolSize[0],this.padding,this.strides[0]),s=Fn(s,this.poolSize[1],this.padding,this.strides[1]),r=Fn(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return P(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class f1 extends p1{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return dt(o),hn(r),a1(e,t,s,r,o,"max")}}f1.className="MaxPooling3D";Z(f1);class m1 extends p1{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return dt(o),hn(r),a1(e,t,s,r,o,"avg")}}m1.className="AveragePooling3D";Z(m1);class g1 extends Ae{constructor(e){super(e),this.inputSpec=[new Rt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ke}}class y1 extends g1{constructor(e){super(e||{})}call(e,t){return P(()=>{const s=Ce(e);return lt(s,1)})}}y1.className="GlobalAveragePooling1D";Z(y1);class b1 extends g1{constructor(e){super(e||{})}call(e,t){return P(()=>{const s=Ce(e);return Cn(s,1)})}}b1.className="GlobalMaxPooling1D";Z(b1);class x1 extends Ae{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,dt(this.dataFormat),this.inputSpec=[new Rt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ke}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class w1 extends x1{call(e,t){return P(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?lt(s,[1,2]):lt(s,[2,3])})}}w1.className="GlobalAveragePooling2D";Z(w1);class v1 extends x1{call(e,t){return P(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?Cn(s,[1,2]):Cn(s,[2,3])})}}v1.className="GlobalMaxPooling2D";Z(v1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class k1 extends Ae{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=fs(r,s);delete t.layer;const a={layer:o};return Object.assign(a,t),new e(a)}}class C1 extends k1{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ke(e),e.length<3)throw new R(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ke(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return P(()=>(e=Ce(e),Rw((a,i)=>[Ce(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}C1.className="TimeDistributed";Z(C1);function $_(n){Cr(KO,"BidirectionalMergeMode",n)}const I_="concat";class N1 extends k1{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=fs(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=fs(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?I_:e.mergeMode,$_(this.mergeMode),e.weights)throw new ke("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):qt(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=Aw(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const a=[],i=[];if(s!=null){const l=s.length;if(l%2>0)throw new R("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,a.push(...s);const u=s.map(d=>new Rt({shape:d.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),i.push(...u)}if(r!=null)throw new ke("Support for constants in Bidirectional layers is not implemented yet.");const c=a[0]instanceof Jn;for(const l of a)if(l instanceof Jn!==c)throw new R("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const l=[e].concat(a),u=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=u;const h=super.apply(l,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return P(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const c=s.slice(0,s.length/2),l=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:c})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=gs(o,1));let i;return this.mergeMode==="concat"?i=xf([r,o]):this.mergeMode==="sum"?i=se(r,o):this.mergeMode==="ave"?i=B(.5,se(r,o)):this.mergeMode==="mul"?i=B(r,o):this.mergeMode==null&&(i=[r,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ar(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ar(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=fs(t.layer);if(delete t.layer,t.numConstants!=null)throw new ke("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}N1.className="Bidirectional";Z(N1);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Rn;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Rn||(Rn={}));var kg;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(kg||(kg={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_={};function $1(n){return S_[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,c=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd;if(o.type==="tensor")return Kt(e.inputNames[o.inputIndexStart],t,s,r);if(o.type==="tensors")return e.inputNames.slice(i,c).map(h=>Kt(h,t,s,r));const l=Kt(e.inputNames.slice(i)[0],t,s,r),u=l.dataSync();return o.type==="number"?u[0]:kn(l.shape,u)}const a=e.attrParams[n];return a&&a.value}function Kt(n,e,t,s){const[r,o]=Yt(n);if(s!=null){const i=s.getHashTableHandleByName(r);if(i!=null)return i}const a=t.currentContextIds.find(i=>!!e[Ec(r,i)]);return a!==void 0?e[Ec(r,a)][o]:void 0}function T_(n,e,t){return e[Ec(n,t.currentContextId)]}function cs(n,e){const[t,s]=Yt(n);return[Ec(t,e&&e.currentContextId),s]}function Ec(n,e){return e?`${n}-${e}`:n}function Yt(n){const e=n.split(":");return e.length===1?[n,0]:[e[0],Number(e[e.length-1])]}function Xi(n,e,t){let s=k("pad",n,e,t);if(s==="explicit"){s=k("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function ls(n){return n.kept?n:nr(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],E_=Object.freeze(Object.defineProperty({__proto__:null,json:D_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],R_=Object.freeze(Object.defineProperty({__proto__:null,json:A_},Symbol.toStringTag,{value:"Module"})),O_=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],F_=Object.freeze(Object.defineProperty({__proto__:null,json:O_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const __=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P_=Object.freeze(Object.defineProperty({__proto__:null,json:__},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],M_=Object.freeze(Object.defineProperty({__proto__:null,json:L_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B_=Object.freeze(Object.defineProperty({__proto__:null,json:z_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],V_=Object.freeze(Object.defineProperty({__proto__:null,json:W_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],G_=Object.freeze(Object.defineProperty({__proto__:null,json:U_},Symbol.toStringTag,{value:"Module"})),j_=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],H_=Object.freeze(Object.defineProperty({__proto__:null,json:j_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],K_=Object.freeze(Object.defineProperty({__proto__:null,json:q_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Y_=Object.freeze(Object.defineProperty({__proto__:null,json:X_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Z_=Object.freeze(Object.defineProperty({__proto__:null,json:J_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],eP=Object.freeze(Object.defineProperty({__proto__:null,json:Q_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tP=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],nP=Object.freeze(Object.defineProperty({__proto__:null,json:tP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sP=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],rP=Object.freeze(Object.defineProperty({__proto__:null,json:sP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oP=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],aP=Object.freeze(Object.defineProperty({__proto__:null,json:oP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iP=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],cP=Object.freeze(Object.defineProperty({__proto__:null,json:iP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cg{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[E_,R_,F_,P_,M_,B_,V_,Y_,K_,G_,Z_,eP,nP,rP,aP,cP,H_],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],a=[],i=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?o.push(m[g.name]):(g.input==null||g.input.length===0)&&a.push(m[g.name]),m),{});let c=[];const l=[];let u={},d={};t!=null&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(m=>{const g=i[m];g.inputNames.forEach(y=>{const[b]=cs(y);g.inputs.push(i[b]),i[b].children.push(g)})}),Object.keys(d).length===0?h.forEach(m=>{const g=i[m];g.children.length===0&&l.push(g)}):Object.keys(d).forEach(m=>{const[g]=cs(m),y=i[g];y!=null&&(y.signatureKey=d[m],l.push(y))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{const[g]=cs(m),y=i[g];y&&(y.signatureKey=u[m],c.push(y))}):c=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:i,inputs:c,outputs:l,weights:o,placeholders:r,signature:t,functions:p};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=$1(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.substr(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const a=o.type;let i;switch(o.type){case"string":i=Vd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Vd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=Xd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Xd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=Gd(e.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=Gd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=Kd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Kd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=Ud(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ud(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=Jd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Jd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=qd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=qd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=Yd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Yd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=jd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=jd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=Hd(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Hd(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=Ng(e.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=Ng(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:i,type:a},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&r.push(d[h.name]),d),{}));const a=[],i=[];e.signature.inputArg.forEach(d=>{const[h]=cs(d.name),p={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Mf(d.type),type:"dtype"}},children:[]};p.signatureKey=d.name,a.push(p),o[h]=p}),Object.keys(o).forEach(d=>{const h=o[d];h.inputNames.forEach(p=>{const[f]=cs(p);h.inputs.push(o[f]),o[f].children.push(h)})});const l=e.ret;e.signature.outputArg.forEach(d=>{const[h,p]=cs(l[d.name]),f=o[h];f!=null&&(f.defaultOutput=p,i.push(f))});const u=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:r,placeholders:s,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function lP(n){const e=Y().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function I1(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):lP(n);return e?t:t.toLowerCase()}function Vd(n,e,t,s=!1){const r=n[e];return r!=null?I1(r.s,s):t}function Ud(n,e,t){const s=n[e];return s?s.b:t}function Gd(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function Mf(n){switch(typeof n=="string"&&(n=Rn[n]),n){case Rn.DT_FLOAT:return"float32";case Rn.DT_INT32:case Rn.DT_INT64:case Rn.DT_INT8:case Rn.DT_UINT8:return"int32";case Rn.DT_BOOL:return"bool";case Rn.DT_DOUBLE:return"float32";case Rn.DT_STRING:return"string";default:return null}}function Ng(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function jd(n,e,t){const s=n[e];return s&&s.type?Mf(s.type):t}function Hd(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>Mf(r)):t}function S1(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function qd(n,e,t){const s=n[e];return s&&s.shape?S1(s.shape):t}function Kd(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function Xd(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>I1(o,s)):t}function Yd(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>S1(r)):t}function Jd(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uP{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return Kt(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return Kt(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return Gd(this.node.rawAttrs,e,t);if(s.s!=null)return Vd(this.node.rawAttrs,e,t);if(s.b!=null)return Ud(this.node.rawAttrs,e,t);if(s.shape!=null)return qd(this.node.rawAttrs,e,t);if(s.type!=null)return jd(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return Kd(this.node.rawAttrs,e,t);if(s.list.s!=null)return Xd(this.node.rawAttrs,e,t);if(s.list.shape!=null)return Yd(this.node.rawAttrs,e,t);if(s.list.b!=null)return Jd(this.node.rawAttrs,e,t);if(s.list.type!=null)return Hd(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dP=(n,e,t)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[se(k("a",n,e,t),k("b",n,e,t))];case"AddN":return[dT(k("tensors",n,e,t))];case"FloorMod":case"Mod":return[Vx(k("a",n,e,t),k("b",n,e,t))];case"Mul":return[B(k("a",n,e,t),k("b",n,e,t))];case"RealDiv":case"Div":return[ge(k("a",n,e,t),k("b",n,e,t))];case"DivNoNan":return[Ox(k("a",n,e,t),k("b",n,e,t))];case"FloorDiv":return[pp(k("a",n,e,t),k("b",n,e,t))];case"Sub":return[xe(k("a",n,e,t),k("b",n,e,t))];case"Minimum":return[Zl(k("a",n,e,t),k("b",n,e,t))];case"Maximum":return[ws(k("a",n,e,t),k("b",n,e,t))];case"Pow":return[hr(k("a",n,e,t),k("b",n,e,t))];case"SquaredDifference":return[Zx(k("a",n,e,t),k("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hP=(n,e,t)=>{switch(n.op){case"Abs":case"ComplexAbs":return[Vt(k("x",n,e,t))];case"Acos":return[wx(k("x",n,e,t))];case"Acosh":return[vx(k("x",n,e,t))];case"Asin":return[Cx(k("x",n,e,t))];case"Asinh":return[Nx(k("x",n,e,t))];case"Atan":return[$x(k("x",n,e,t))];case"Atan2":return[Ix(k("x",n,e,t),k("y",n,e,t))];case"Atanh":return[Sx(k("x",n,e,t))];case"Ceil":return[Dx(k("x",n,e,t))];case"Complex":return[lr(k("real",n,e,t),k("imag",n,e,t))];case"Cos":return[Kl(k("x",n,e,t))];case"Cosh":return[wp(k("x",n,e,t))];case"Elu":return[ri(k("x",n,e,t))];case"Erf":return[Fx(k("x",n,e,t))];case"Exp":return[ms(k("x",n,e,t))];case"Expm1":return[_x(k("x",n,e,t))];case"Floor":return[oi(k("x",n,e,t))];case"Log":return[Pn(k("x",n,e,t))];case"Log1p":return[Mx(k("x",n,e,t))];case"Imag":return[Cp(k("x",n,e,t))];case"Neg":return[bt(k("x",n,e,t))];case"Reciprocal":return[jx(k("x",n,e,t))];case"Real":return[wc(k("x",n,e,t))];case"Relu":return[kr(k("x",n,e,t))];case"Round":return[Hx(k("x",n,e,t))];case"Selu":return[Op(k("x",n,e,t))];case"Sigmoid":return[ao(k("x",n,e,t))];case"Sin":return[Fp(k("x",n,e,t))];case"Sign":return[Kx(k("x",n,e,t))];case"Sinh":return[_p(k("x",n,e,t))];case"Softplus":return[ai(k("x",n,e,t))];case"Sqrt":return[zt(k("x",n,e,t))];case"Square":return[Ye(k("x",n,e,t))];case"Tanh":return[gp(k("x",n,e,t))];case"Tan":return[e0(k("x",n,e,t))];case"ClipByValue":return[Qt(k("x",n,e,t),k("clipValueMin",n,e,t),k("clipValueMax",n,e,t))];case"Relu6":return[Ap(k("x",n,e,t))];case"Rsqrt":return[Rp(Kt(n.inputNames[0],e,t))];case"Prod":return[Dp(k("x",n,e,t),k("axes",n,e,t))];case"LeakyRelu":return[Xl(k("x",n,e,t),k("alpha",n,e,t))];case"Prelu":return[tu(k("x",n,e,t),k("alpha",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yn(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){I(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];I(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function $g(n){return!(typeof n=="number"||n.some(e=>e<0))}function So(n,e,t){let s=Zd(n,t);const r=!$g(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=Zd(o.shape,s)}),!$g(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Zd(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pP{constructor(e,t,s,r,o,a,i){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Ne(0),At(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),yn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,At(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return tr([],[0].concat(this.elementShape));const s=this.readMany(e);return yn(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Nn(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return tr([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return yn(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Ot(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Mn(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(c=>(s+=c,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,a=[];P(()=>{t=V(t,[1,s,o]);for(let c=0;c<e.length;++c){const u=[0,c===0?0:r[c-1],0],d=[1,e[c],o];a[c]=V(je(t,u,d),this.elementShape)}return a});const i=[];for(let c=0;c<e.length;c++)i[c]=c;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class po{constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e?.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);yn(t,o.shape,"TensorList shape mismatch: "),At(o)}),this.idTensor=Ne(0),this.maxNumElements=r,At(this.idTensor)}get id(){return this.idTensor.id}copy(){return new po([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);yn(e,this.elementShape,"TensorList shape mismatch: ");const r=So(this.elementShape,this.tensors,e);return P(()=>{const o=this.tensors.map(a=>V(a,r));return Nn(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=So(this.elementShape,this.tensors,e),r=this.tensors.pop();return yn(r.shape,e,"TensorList shape mismatch: "),V(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(yn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");At(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);yn(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=So(this.elementShape,this.tensors,t);return V(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);yn(this.elementShape,t.shape,"TensorList shape mismatch: "),At(t),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);yn(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=So(this.elementShape,this.tensors,s);return e.length===0?tr([],[0].concat(r)):P(()=>{const o=e.map(a=>V(this.tensors[a],r));return Nn(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);yn(this.elementShape,t,"TensorList shape mismatch: ");const s=So(this.elementShape,this.tensors,t);return this.size()===0?tr([],[0].concat(s)):P(()=>{const r=this.tensors.map(o=>V(o,s));return Ot(r,0)})}}function fP(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);yn(r,e,"TensorList shape mismatch: ");const o=Mn(n);return new po(o,e,s)}function mP(n,e,t){return new po([],n,e,t)}function gP(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new po([],t,n.dtype,s),a=Mn(n,0);return e.forEach((i,c)=>{o.setItem(i,a[c])}),o}function yP(n,e,t){let s=0;const r=e.map(u=>(s+=u,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=Zd(o,t),i=s===0?0:n.size/s,c=P(()=>{const u=[];n=V(n,[1,s,i]);for(let d=0;d<e.length;++d){const p=[0,d===0?0:r[d-1],0],f=[1,e[d],i];u[d]=V(je(n,p,f),a)}return n.dispose(),u}),l=new po([],t,n.dtype,e.length);for(let u=0;u<c.length;u++)l.setItem(u,c[u]);return l}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bP=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=k("thenBranch",n,e,t),r=k("elseBranch",n,e,t),o=k("cond",n,e,t),a=k("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=k("body",n,e,t),r=k("cond",n,e,t),o=k("args",n,e,t),a=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),i=o.map(u=>u.id);let c=await a[0].data();a.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let l=o;for(;c[0];){const u=l;l=await t.functionMap[s].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);const d=l.map(p=>p.id);u.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});const h=await t.functionMap[r].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);c=await h[0].data(),h.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return l}case"LoopCond":{const s=k("pred",n,e,t);return[ls(s)]}case"Switch":{const s=k("pred",n,e,t);let r=k("data",n,e,t);return r.kept||(r=ls(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>Kt(r,e,t)!==void 0);if(s){const r=Kt(s,e,t);return[ls(r)]}return}case"Enter":{const s=k("frameName",n,e,t),r=k("tensor",n,e,t);return t.enterFrame(s),[ls(r)]}case"Exit":{const s=k("tensor",n,e,t);return t.exitFrame(),[ls(s)]}case"NextIteration":{const s=k("tensor",n,e,t);return t.nextIteration(),[ls(s)]}case"TensorArrayV3":{const s=k("size",n,e,t),r=k("dtype",n,e,t),o=k("elementShape",n,e,t),a=k("dynamicSize",n,e,t),i=k("clearAfterRead",n,e,t),c=k("identicalElementShapes",n,e,t),l=k("name",n,e,t),u=new pP(l,r,s,o,c,a,i);return t.addTensorArray(u),[u.idTensor,Ne(1)]}case"TensorArrayWriteV3":{const s=k("tensorArrayId",n,e,t),r=k("index",n,e,t),o=k("tensor",n,e,t),a=t.getTensorArray(s.id);return a.write(r,o),[a.idTensor]}case"TensorArrayReadV3":{const s=k("tensorArrayId",n,e,t),r=k("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=k("tensorArrayId",n,e,t),r=k("indices",n,e,t),o=k("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=k("tensorArrayId",n,e,t),r=k("indices",n,e,t),o=k("tensor",n,e,t),a=t.getTensorArray(s.id);return a.scatter(r,o),[a.idTensor]}case"TensorArrayConcatV3":{const s=k("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=k("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=k("tensorArrayId",n,e,t),r=k("tensor",n,e,t),o=k("lengths",n,e,t),a=t.getTensorArray(s.id);return a.split(o,r),[a.idTensor]}case"TensorArraySizeV3":{const s=k("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Ne(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=k("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=k("tensorListId",n,e,t),r=k("index",n,e,t),o=k("tensor",n,e,t),a=t.getTensorList(s.id);return a.setItem(r,o),[a.idTensor]}case"TensorListGetItem":{const s=k("tensorListId",n,e,t),r=k("index",n,e,t),o=k("elementShape",n,e,t),a=k("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=k("indices",n,e,t),r=k("tensor",n,e,t),o=k("elementShape",n,e,t),a=k("numElements",n,e,t),i=gP(r,s,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=k("elementShape",n,e,t),r=k("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=k(o,n,e,t),i=mP(s,r,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=k("tensorListId",n,e,t),r=k("indices",n,e,t),o=k("elementShape",n,e,t),a=k("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,a,o)]}case"TensorListStack":{const s=k("tensorListId",n,e,t),r=k("elementShape",n,e,t),o=k("elementDType",n,e,t),a=k("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,a)]}case"TensorListFromTensor":{const s=k("tensor",n,e,t),r=k("elementShape",n,e,t),o=k("elementDType",n,e,t),a=fP(s,r,o);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const s=k("tensorListId",n,e,t),r=t.getTensorList(s.id),o=k("dtype",n,e,t),a=k("elementShape",n,e,t);return[r.concat(o,a)]}case"TensorListPushBack":{const s=k("tensorListId",n,e,t),r=k("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=k("tensorListId",n,e,t),r=k("elementShape",n,e,t),o=k("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=k("tensor",n,e,t),r=k("elementShape",n,e,t),o=k("lengths",n,e,t),a=yP(s,o,r);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig(n,e,t){const[s,r]=k("fusedOps",n,e,t),o=s==="biasadd",a=r==="prelu",i=s==="fusedbatchnorm",c=k("numArgs",n,e,t);if(o){if(a&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=k("strides",n,e,t),u=Xi(n,e,t),d=k("dataFormat",n,e,t).toUpperCase(),h=k("dilations",n,e,t),[p,f]=k("args",n,e,t),m=k("leakyreluAlpha",n,e,t);return{stride:l,pad:u,dataFormat:d,dilations:h,biasArg:p,preluArg:f,activationFunc:r,leakyreluAlpha:m}}const xP=(n,e,t)=>{switch(n.op){case"Conv1D":{const s=k("stride",n,e,t),r=k("pad",n,e,t),o=k("dataFormat",n,e,t).toUpperCase(),a=k("dilation",n,e,t);return[yp(k("x",n,e,t),k("filter",n,e,t),s,r,o,a)]}case"Conv2D":{const s=k("strides",n,e,t),r=Xi(n,e,t),o=k("dataFormat",n,e,t).toUpperCase(),a=k("dilations",n,e,t);return[Rs(k("x",n,e,t),k("filter",n,e,t),[s[1],s[2]],r,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:o,dilations:a,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=Ig(n,e,t);return[o0({x:k("x",n,e,t),filter:k("filter",n,e,t),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[a[1],a[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:o,dilations:a,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=Ig(n,e,t);return[QE({x:k("x",n,e,t),filter:k("filter",n,e,t),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[a[1],a[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=k("outputShape",n,e,t),r=k("strides",n,e,t),o=Xi(n,e,t);return[xp(k("x",n,e,t),k("filter",n,e,t),s,[r[1],r[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=k("strides",n,e,t),r=Xi(n,e,t),o=k("dilations",n,e,t),a=k("dataFormat",n,e,t).toUpperCase();return[si(k("input",n,e,t),k("filter",n,e,t),[s[1],s[2]],r,a,[o[1],o[2]])]}case"Conv3D":{const s=k("strides",n,e,t),r=k("pad",n,e,t),o=k("dataFormat",n,e,t).toUpperCase(),a=k("dilations",n,e,t);return[Ex(k("x",n,e,t),k("filter",n,e,t),[s[1],s[2],s[3]],r,o,[a[1],a[2],a[3]])]}case"AvgPool":{const s=k("strides",n,e,t),r=k("pad",n,e,t),o=k("kernelSize",n,e,t);return[Hl(k("x",n,e,t),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=k("strides",n,e,t),r=k("pad",n,e,t),o=k("kernelSize",n,e,t);return[Jl(k("x",n,e,t),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=k("strides",n,e,t),r=k("pad",n,e,t),o=k("kernelSize",n,e,t),a=k("includeBatchInIndex",n,e,t),{result:i,indexes:c}=dD(k("x",n,e,t),[o[1],o[2]],[s[1],s[2]],r,a);return[i,c]}case"AvgPool3D":{const s=k("strides",n,e,t),r=k("pad",n,e,t),o=k("kernelSize",n,e,t);return[Tx(k("x",n,e,t),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=k("strides",n,e,t),r=k("pad",n,e,t),o=k("kernelSize",n,e,t);return[Bx(k("x",n,e,t),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=k("strides",n,e,t),r=k("pad",n,e,t),o=k("dilations",n,e,t),a=s[1],i=s[2],c=o[1],l=o[2];return[Rx(k("x",n,e,t),k("filter",n,e,t),[a,i],r,[c,l],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wP=(n,e,t)=>{switch(n.op){case"Fill":{const s=k("shape",n,e,t),r=k("dtype",n,e,t),o=k("value",n,e,t);return[kp(s,o,r)]}case"LinSpace":{const s=k("start",n,e,t),r=k("stop",n,e,t),o=k("num",n,e,t);return[V2(s,r,o)]}case"Multinomial":{const s=k("logits",n,e,t),r=k("numSamples",n,e,t),o=k("seed",n,e,t);return[vD(s,r,o)]}case"OneHot":{const s=k("indices",n,e,t),r=k("depth",n,e,t),o=k("onValue",n,e,t),a=k("offValue",n,e,t);return[ip(s,r,o,a)]}case"Ones":return[Vs(k("shape",n,e,t),k("dtype",n,e,t))];case"OnesLike":return[dn(k("x",n,e,t))];case"RandomUniform":return[ii(k("shape",n,e,t),k("minval",n,e,t),k("maxval",n,e,t),k("dtype",n,e,t))];case"Range":{const s=k("start",n,e,t),r=k("stop",n,e,t),o=k("step",n,e,t);return[Td(s,r,o,k("dtype",n,e,t))]}case"TruncatedNormal":{const s=k("shape",n,e,t),r=k("mean",n,e,t),o=k("stdDev",n,e,t),a=k("seed",n,e,t);return[zp(s,r,o,k("dtype",n,e,t),a)]}case"Zeros":return[ht(k("shape",n,e,t),k("dtype",n,e,t))];case"ZerosLike":return[Ee(k("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ju(n,e,t){const s=k("boxes",n,e,t),r=k("scores",n,e,t),o=k("maxOutputSize",n,e,t),a=k("iouThreshold",n,e,t),i=k("scoreThreshold",n,e,t),c=k("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:c}}const vP=async(n,e,t)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:c}=Ju(n,e,t),l=await or.nonMaxSuppressionWithScoreAsync(s,r,o,a,i,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i}=Ju(n,e,t),c=k("padToMaxOutputSize",n,e,t),l=await or.nonMaxSuppressionPaddedAsync(s,r,o,a,i,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i}=Ju(n,e,t);return[await or.nonMaxSuppressionAsync(s,r,o,a,i)]}case"Where":{const s=de(k("condition",n,e,t),"bool"),r=[await LE(s)];return s.dispose(),r}case"ListDiff":return lE(k("x",n,e,t),k("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kP=(n,e,t)=>{switch(n.op){case"TopKV2":{const s=k("x",n,e,t),r=k("k",n,e,t),o=k("sorted",n,e,t),a=t0(s,r,o);return[a.values,a.indices]}case"Unique":{const s=k("x",n,e,t),r=Dd(s);return[r.values,r.indices]}case"UniqueV2":{const s=k("x",n,e,t),r=k("axis",n,e,t),o=Dd(s,r);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CP=(n,e,t)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=k("default",n,e,t);return[Kt(n.name,e,t)||s];case"Placeholder":return[Kt(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=k("x",n,e,t);return[ls(l)]}case"IdentityN":return k("x",n,e,t).map(l=>ls(l));case"Snapshot":const r=k("x",n,e,t);return[ls(r)];case"Shape":return[Ln(k("x",n,e,t).shape,"int32")];case"ShapeN":return k("x",n,e,t).map(l=>Ln(l.shape));case"Size":return[Ne(k("x",n,e,t).size,"int32")];case"Rank":return[Ne(k("x",n,e,t).rank,"int32")];case"NoOp":return[Ne(1)];case"Print":const o=k("x",n,e,t),a=k("data",n,e,t),i=k("message",n,e,t),c=k("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let l=0;l<a.length;l++)console.log(Array.prototype.slice.call(a[l].dataSync()).slice(0,c));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NP{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ne(0),this.tensorMap=new Map,At(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ne(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),P(()=>{const r=Mn(t),o=s.length,a=r.length;I(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const c=s[i],l=r[i];At(l),this.tensorMap.set(c,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return P(()=>{const r=[];for(let o=0;o<s.length;o++){const a=s[o],i=this.findWithDefault(a,t);r.push(i)}return Nn(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $P=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=k("keyDType",n,e,t),o=k("valueDType",n,e,t),a=new NP(r,o);return s.addHashTable(n.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=k("tableHandle",n,e,t,s),o=k("keys",n,e,t),a=k("values",n,e,t);return[await s.getHashTableById(r.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=k("tableHandle",n,e,t,s),o=k("keys",n,e,t),a=k("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=k("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP=(n,e,t)=>{switch(n.op){case"ResizeBilinear":{const s=k("images",n,e,t),r=k("size",n,e,t),o=k("alignCorners",n,e,t),a=k("halfPixelCenters",n,e,t);return[or.resizeBilinear(s,[r[0],r[1]],o,a)]}case"ResizeNearestNeighbor":{const s=k("images",n,e,t),r=k("size",n,e,t),o=k("alignCorners",n,e,t),a=k("halfPixelCenters",n,e,t);return[or.resizeNearestNeighbor(s,[r[0],r[1]],o,a)]}case"CropAndResize":{const s=k("image",n,e,t),r=k("boxes",n,e,t),o=k("boxInd",n,e,t),a=k("cropSize",n,e,t),i=k("method",n,e,t),c=k("extrapolationValue",n,e,t);return[or.cropAndResize(s,r,o,a,i,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SP=(n,e,t)=>{switch(n.op){case"Equal":return[wr(k("a",n,e,t),k("b",n,e,t))];case"NotEqual":return[Vo(k("a",n,e,t),k("b",n,e,t))];case"Greater":return[rs(k("a",n,e,t),k("b",n,e,t))];case"GreaterEqual":return[vr(k("a",n,e,t),k("b",n,e,t))];case"Less":return[Np(k("a",n,e,t),k("b",n,e,t))];case"LessEqual":return[io(k("a",n,e,t),k("b",n,e,t))];case"LogicalAnd":return[ts(k("a",n,e,t),k("b",n,e,t))];case"LogicalNot":return[Yl(k("a",n,e,t))];case"LogicalOr":return[Sp(k("a",n,e,t),k("b",n,e,t))];case"Select":case"SelectV2":return[un(k("condition",n,e,t),k("a",n,e,t),k("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP=(n,e,t)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[_e(k("a",n,e,t),k("b",n,e,t),k("transposeA",n,e,t),k("transposeB",n,e,t))];case"Transpose":return[Ue(k("x",n,e,t),k("perm",n,e,t))];case"_FusedMatMul":const[s,r]=k("fusedOps",n,e,t),o=s==="biasadd",a=r==="prelu",i=k("numArgs",n,e,t),c=k("leakyreluAlpha",n,e,t);if(o){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,u]=k("args",n,e,t);return[Ed({a:k("a",n,e,t),b:k("b",n,e,t),transposeA:k("transposeA",n,e,t),transposeB:k("transposeB",n,e,t),bias:l,activation:r,preluActivationWeights:u,leakyreluAlpha:c})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP=(n,e,t)=>{switch(n.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Kr(k("x",n,e,t),k("mean",n,e,t),k("variance",n,e,t),k("offset",n,e,t),k("scale",n,e,t),k("epsilon",n,e,t))];case"FusedBatchNormV3":return[Kr(k("x",n,e,t),k("mean",n,e,t),k("variance",n,e,t),k("offset",n,e,t),k("scale",n,e,t),k("epsilon",n,e,t))];case"LRN":return[Lx(k("x",n,e,t),k("radius",n,e,t),k("bias",n,e,t),k("alpha",n,e,t),k("beta",n,e,t))];case"Softmax":return[nu(k("x",n,e,t))];case"LogSoftmax":return[$p(k("x",n,e,t))];case"SparseToDense":return[r0(k("sparseIndices",n,e,t),k("outputShape",n,e,t),k("sparseValues",n,e,t),k("defaultValue",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EP=(n,e,t)=>{switch(n.op){case"Max":{const a=k("axis",n,e,t),i=k("keepDims",n,e,t);return[Cn(k("x",n,e,t),a,i)]}case"Mean":{const a=k("axis",n,e,t),i=k("keepDims",n,e,t);return[lt(k("x",n,e,t),a,i)]}case"Min":{const a=k("axis",n,e,t),i=k("keepDims",n,e,t);return[Wo(k("x",n,e,t),a,i)]}case"Sum":{const a=k("axis",n,e,t),i=k("keepDims",n,e,t);return[be(k("x",n,e,t),a,i)]}case"All":{const a=k("axis",n,e,t),i=k("keepDims",n,e,t);return[fp(k("x",n,e,t),a,i)]}case"Any":{const a=k("axis",n,e,t),i=k("keepDims",n,e,t);return[gc(k("x",n,e,t),a,i)]}case"ArgMax":{const a=k("axis",n,e,t);return[yc(k("x",n,e,t),a)]}case"ArgMin":{const a=k("axis",n,e,t);return[kx(k("x",n,e,t),a)]}case"Prod":{const a=k("axis",n,e,t),i=k("keepDims",n,e,t);return[Dp(k("x",n,e,t),a,i)]}case"Cumsum":{const a=k("axis",n,e,t),i=k("exclusive",n,e,t),c=k("reverse",n,e,t);return[vp(k("x",n,e,t),a,i,c)]}case"Bincount":const s=k("x",n,e,t),r=k("weights",n,e,t),o=k("size",n,e,t);return[VT(s,r,o)];case"DenseBincount":{const a=k("x",n,e,t),i=k("weights",n,e,t),c=k("size",n,e,t),l=k("binaryOutput",n,e,t);return[d2(a,i,c,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AP=(n,e,t)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=k("n",n,e,t),r=k("axis",n,e,t);let o=k("tensors",n,e,t);return o=o.slice(0,s),[Ot(o,r)]}case"Gather":{const s=k("x",n,e,t),r=k("indices",n,e,t);return[Bo(s,de(r,"int32"),0)]}case"GatherV2":{const s=k("axis",n,e,t),r=k("batchDims",n,e,t),o=k("x",n,e,t),a=k("indices",n,e,t);return[Bo(o,de(a,"int32"),s,r)]}case"Reverse":{const s=k("dims",n,e,t),r=[];for(let a=0;a<s.length;a++)s[a]&&r.push(a);const o=k("x",n,e,t);return[gs(o,r)]}case"ReverseV2":{const s=k("axis",n,e,t),r=k("x",n,e,t);return[gs(r,s)]}case"Slice":{const s=k("begin",n,e,t),r=k("size",n,e,t);return[je(k("x",n,e,t),s,r)]}case"StridedSlice":{const s=k("begin",n,e,t),r=k("end",n,e,t),o=k("strides",n,e,t),a=k("beginMask",n,e,t),i=k("endMask",n,e,t),c=k("ellipsisMask",n,e,t),l=k("newAxisMask",n,e,t),u=k("shrinkAxisMask",n,e,t),d=k("x",n,e,t);return[Qx(d,s,r,o,a,i,c,l,u)]}case"Pack":return P(()=>{const s=k("axis",n,e,t),r=k("tensors",n,e,t),o=r[0].shape,a=Xr(r[0]).shape,i=r.map(c=>{const l=Le(c.shape,o);if(!l&&!Le(Xr(c).shape,a))throw new Error("the input tensors shape does not match");return l?c:V(c,o)});return[Nn(i,s)]});case"Unpack":{const s=k("axis",n,e,t),r=k("tensor",n,e,t);return Mn(r,s)}case"Tile":{const s=k("reps",n,e,t);return[rr(k("x",n,e,t),s)]}case"Split":case"SplitV":{const s=k("axis",n,e,t),r=k("numOrSizeSplits",n,e,t),o=k("x",n,e,t);return an(o,r,s)}case"ScatterNd":{const s=k("indices",n,e,t),r=k("values",n,e,t),o=k("shape",n,e,t);return[BE(s,r,o)]}case"GatherNd":{const s=k("x",n,e,t),r=k("indices",n,e,t);return[GE(s,r)]}case"SparseToDense":{const s=k("sparseIndices",n,e,t),r=k("outputShape",n,e,t),o=k("sparseValues",n,e,t),a=k("defaultValue",n,e,t);return[r0(s,o,r,o.dtype===a.dtype?a:de(a,o.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RP=(n,e,t)=>{switch(n.op){case"FFT":return[Mp(k("x",n,e,t))];case"IFFT":return[kc(k("x",n,e,t))];case"RFFT":return[Jx(k("x",n,e,t))];case"IRFFT":return[Yx(k("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OP=(n,e,t)=>{switch(n.op){case"Cast":return[de(k("x",n,e,t),k("dtype",n,e,t))];case"ExpandDims":{const s=k("axis",n,e,t);return[bn(k("x",n,e,t),s)]}case"Squeeze":{const s=k("axis",n,e,t);return[Xr(k("x",n,e,t),s)]}case"Reshape":return[V(k("x",n,e,t),k("shape",n,e,t))];case"MirrorPad":return[Wx(k("x",n,e,t),k("padding",n,e,t),k("mode",n,e,t))];case"PadV2":case"Pad":return[Ql(k("x",n,e,t),k("padding",n,e,t),k("constantValue",n,e,t))];case"SpaceToBatchND":{const s=k("blockShape",n,e,t),r=k("paddings",n,e,t);return[eu(k("x",n,e,t),s,r)]}case"BatchToSpaceND":{const s=k("blockShape",n,e,t),r=k("crops",n,e,t);return[ql(k("x",n,e,t),s,r)]}case"DepthToSpace":{const s=k("blockSize",n,e,t),r=k("dataFormat",n,e,t).toUpperCase();return[Ax(k("x",n,e,t),s,r)]}case"BroadcastTo":return[xc(k("x",n,e,t),k("shape",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sg(n,e,t,s){const r=((o,a,i)=>{switch(o.category){case"arithmetic":return P(()=>dP(o,a,i));case"basic_math":return P(()=>hP(o,a,i));case"control":return bP(o,a,i);case"convolution":return P(()=>xP(o,a,i));case"creation":return P(()=>wP(o,a,i));case"dynamic":return vP(o,a,i);case"evaluation":return P(()=>kP(o,a,i));case"image":return P(()=>IP(o,a,i));case"graph":return P(()=>CP(o,a,i));case"logical":return P(()=>SP(o,a,i));case"matrices":return P(()=>TP(o,a,i));case"normalization":return P(()=>DP(o,a,i));case"reduction":return P(()=>EP(o,a,i));case"slice_join":return P(()=>AP(o,a,i));case"spectral":return P(()=>RP(o,a,i));case"transformation":return P(()=>OP(o,a,i));case"hash_table":return $P(o,a,i,s);case"custom":const c=$1(o.op);if(c&&c.customExecutor)return c.customExecutor(new uP(o,a,i));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Mo(r)?r.then(o=>[].concat(o)):[].concat(r)}class Tg{constructor(e={},t={},s={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dg(n,e,t,s){const r=new Set,o=[];let a=null,i=null;const c=new Set,l=Object.keys(n).map(h=>Yt(h)[0]);let u=[];s!=null&&(u=s.map(h=>Yt(h.name)[0]));const d=[...e];for(;d.length>0;){const h=d.pop();if((T1(h)||MP(h)||zP(h))&&a==null&&(a=h,i=a.children.map(p=>p.name).filter(p=>r.has(p))),r.add(h.name),t[h.name]==null&&l.indexOf(h.name)===-1&&u.indexOf(h.name)===-1){if(h.inputs.length===0){o.push(h.name);continue}h.inputs.forEach(p=>{c.has(p.name)||(c.add(p.name),d.push(p))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:a,syncInputs:i}}function FP(n,e,t){const{usedNodes:s,inputs:r}=t,o=[],a=Object.keys(r).map(u=>Yt(u)[0]).map(u=>n.nodes[u]),i=n.initNodes;a.forEach(u=>{s.has(u.name)&&o.push(u)}),n.weights.forEach(u=>{s.has(u.name)&&o.push(u)}),i?.forEach(u=>{s.has(u.name)&&o.push(u)});const c=new Set,l=[];for(;o.length>0;){const u=o.pop();c.add(u.name),e[u.name]||l.push(u),u.children.forEach(d=>{!c.has(d.name)&&s.has(d.name)&&d.inputs.every(h=>c.has(h.name))&&o.push(d)})}return l}const _P=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],PP=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],LP=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function T1(n){return _P.indexOf(n.op)>=0}function MP(n){return PP.indexOf(n.op)>=0}function zP(n){return LP.indexOf(n.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ac{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Ac(e.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const s=Dg(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:a}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const i=t.map(l=>l.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${c}]. Missing the following inputs: [${r}]`)}return FP(this.graph,this.weightMap,s)}execute(e,t){e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(d=>this.graph.nodes[Yt(d)[0]]),o=t.map(d=>Yt(d)[0]);let a=o.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);const i=this.getCompilationKey(r,a);let c=this.compiledMap.get(i);c==null&&(c=this.compile(e,a),this.compiledMap.set(i,c));const l={},u={};return P(()=>{const d=new Tg(this.weightMap,l,u,this.functionExecutorMap),h=Object.assign({},this.weightMap);Object.keys(e).forEach(m=>{const[g,y]=Yt(m),b=[];b[y]=e[m],h[g]=b});const p=this.getFrozenTensorIds(h),f={};for(let m=0;m<c.length;m++){const g=c[m];if(!h[g.name]){const y=Sg(g,h,d,this._resourceManager);if(Mo(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);h[g.name]=y,this.checkTensorForDisposal(g.name,g,h,d,p,o,f)}}return this.parent==null&&d.dispose(p),t.map(m=>Kt(m,h,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,a,i){t.category==="control"||a.indexOf(e)!==-1||(s[e].forEach(c=>{c!=null&&(i[c.id]=(i[c.id]||0)+t.children.length)}),t.inputs.forEach(c=>{if(c.category!=="control"){const l=T_(c.name,s,r);l?.forEach(u=>{if(u&&!o.has(u.id)){const d=i[u.id];d===1?(u.dispose(),delete i[u.id]):d!=null&&i[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,s=!1,r={},o={}){s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const a=new Tg(this.weightMap,r,o,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,s),c=t.map(h=>Kt(h,i,a)),l=c.map(h=>h.id),u=Object.keys(e).map(h=>e[h].id),d=new Set([...l,...u,...this.weightIds]);return Object.keys(i).forEach(h=>{i[h].forEach(f=>{f&&!f.isDisposed&&!d.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(d),c}async executeFunctionAsync(e,t,s){const r=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),a=o.map(v=>this.graph.nodes[Yt(v)[0]]),i=s.map(v=>Yt(v)[0]);let c=i.map(v=>this.graph.nodes[v]);c.length===0&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=Dg(e,c,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(v=>{const[x,w]=Yt(v),N=[];N[w]=e[v],f[x]=N});const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const v=this.processStack(a,p,t,f,y,g,i,m,l);await Promise.all(v)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter(v=>!T1(v)&&!Kt(v.name,f,t)).map(v=>v.name);if(b.length>0){let v="";throw d!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${o}]. Consider providing the following inputs: [${u}]. ${v}`)}return f}processStack(e,t,s,r,o,a,i,c,l){const u=[];for(;t.length>0;){const d=t.pop();s.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&k("isConstant",d.node,r,s)&&([h]=cs(d.node.name,s)),r[d.node.name]==null){const p=Sg(d.node,r,s,this._resourceManager);h||([h]=cs(d.node.name,s));const f=s.currentContext;Mo(p)?u.push(p.then(m=>(r[h]=m,s.currentContext=f,this.checkTensorForDisposal(h,d.node,r,s,a,i,c),this.processChildNodes(d.node,t,s,r,o,l),m))):(r[h]=p,this.checkTensorForDisposal(h,d.node,r,s,a,i,c),this.processChildNodes(d.node,t,s,r,o,l))}else this.processChildNodes(d.node,t,s,r,o,l)}return u}processChildNodes(e,t,s,r,o,a){e.children.forEach(i=>{const[c]=cs(i.name,s);o[c]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Kt(l,r,s))&&(o[c]=!0,t.push({contexts:s.currentContext,node:i})):i.inputNames.every(l=>!!Kt(l,r,s))&&(o[c]=!0,t.push({contexts:s.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Yt(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===s.shape.length&&s.shape.every((c,l)=>a[l]===-1||a[l]===c);I(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&I(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){const t={};for(const s in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[s]!=null){const r=this._signature.inputs[s];t[r.name]=e[s]}else t[s]=e[s];return t}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Yt(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{const[s]=Yt(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class BP{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WP="?tfjs-format=file",VP="model.json";class UP{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new BP}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Pm(e,this.loadOptions);else{const t=$S(e,this.loadOptions);if(t.length===0)t.push(Pm(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let s;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?s=this.artifacts.userDefinedMetadata.signature:s=this.artifacts.signature,this.signature=s,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=yS(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ac(Cg.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Cg.Instance.transformGraph(e.modelInitializer);this.initializer=new Ac(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){const s=Qb(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof it)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,s,r)=>(t[s]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function GP(n,e={}){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&n.load==null&&(n.endsWith("/")||(n=n+"/"),n=`${n}${VP}${WP}`);const t=new UP(n,e);return await t.load(),t}var Yi={exports:{}},jP=Yi.exports,Eg;function HP(){return Eg||(Eg=1,(function(n){(function(e,t,s){function r(c){var l=this,u=i();l.next=function(){var d=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=d-(l.c=d|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(c),l.s0<0&&(l.s0+=1),l.s1-=u(c),l.s1<0&&(l.s1+=1),l.s2-=u(c),l.s2<0&&(l.s2+=1),u=null}function o(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function a(c,l){var u=new r(c),d=l&&l.state,h=u.next;return h.int32=function(){return u.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,u),h.state=function(){return o(u,{})}),h}function i(){var c=4022871197,l=function(u){u=u.toString();for(var d=0;d<u.length;d++){c+=u.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=a:this.alea=a})(jP,n)})(Yi)),Yi.exports}var Ji={exports:{}},qP=Ji.exports,Ag;function KP(){return Ag||(Ag=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xor128=a})(qP,n)})(Ji)),Ji.exports}var Zi={exports:{}},XP=Zi.exports,Rg;function YP(){return Rg||(Rg=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,u==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c.v=i.v,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xorwow=a})(XP,n)})(Zi)),Zi.exports}var Qi={exports:{}},JP=Qi.exports,Og;function ZP(){return Og||(Og=1,(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.x,d=c.i,h,p;return h=u[d],h^=h>>>7,p=h^h<<24,h=u[d+1&7],p^=h^h>>>10,h=u[d+3&7],p^=h^h>>>3,h=u[d+4&7],p^=h^h<<7,h=u[d+7&7],h=h^h<<13,p^=h^h<<9,u[d]=p,c.i=d+1&7,p};function l(u,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],u.x=p,u.i=0,h=256;h>0;--h)u.next()}l(c,i)}function o(i,c){return c.x=i.x.slice(),c.i=i.i,c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(u.x&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xorshift7=a})(JP,n)})(Qi)),Qi.exports}var ec={exports:{}},QP=ec.exports,Fg;function eL(){return Fg||(Fg=1,(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.w,d=c.X,h=c.i,p,f;return c.w=u=u+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,c.i=h,f+(u^u>>>16)|0};function l(u,d){var h,p,f,m,g,y=[],b=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,b=Math.max(b,d.length)),f=0,m=-32;m<b;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=y[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(y[(d&&d.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],h=y[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,y[f]=p^h;u.w=g,u.X=y,u.i=f}l(c,i)}function o(i,c){return c.i=i.i,c.w=i.w,c.X=i.X.slice(),c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(u.X&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xor4096=a})(QP,n)})(ec)),ec.exports}var tc={exports:{}},tL=tc.exports,_g;function nL(){return _g||(_g=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.b,h=c.c,p=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-p|0,c.d=p<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,i===Math.floor(i)?(c.a=i/4294967296|0,c.b=i|0):l+=i;for(var u=0;u<l.length+20;u++)c.b^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.a=i.a,c.b=i.b,c.c=i.c,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.tychei=a})(tL,n)})(tc)),tc.exports}var Zu={exports:{}},Pg;function sL(){return Pg||(Pg=1,(function(n){(function(e,t){var s=(0,eval)("this"),r=256,o=6,a=52,i="random",c=t.pow(r,o),l=t.pow(2,a),u=l*2,d=r-1,h;function p(x,w,N){var C=[];w=w==!0?{entropy:!0}:w||{};var $=y(g(w.entropy?[x,v(e)]:x??b(),3),C),S=new f(C),T=function(){for(var E=S.g(o),F=c,O=0;E<l;)E=(E+O)*r,F*=r,O=S.g(1);for(;E>=u;)E/=2,F/=2,O>>>=1;return(E+O)/F};return T.int32=function(){return S.g(4)|0},T.quick=function(){return S.g(4)/4294967296},T.double=T,y(v(S.S),e),(w.pass||N||function(E,F,O,L){return L&&(L.S&&m(L,S),E.state=function(){return m(S,{})}),O?(t[i]=E,F):E})(T,$,"global"in w?w.global:this==t,w.state)}t["seed"+i]=p;function f(x){var w,N=x.length,C=this,$=0,S=C.i=C.j=0,T=C.S=[];for(N||(x=[N++]);$<r;)T[$]=$++;for($=0;$<r;$++)T[$]=T[S=d&S+x[$%N]+(w=T[$])],T[S]=w;(C.g=function(E){for(var F,O=0,L=C.i,z=C.j,M=C.S;E--;)F=M[L=d&L+1],O=O*r+M[d&(M[L]=M[z=d&z+F])+(M[z]=F)];return C.i=L,C.j=z,O})(r)}function m(x,w){return w.i=x.i,w.j=x.j,w.S=x.S.slice(),w}function g(x,w){var N=[],C=typeof x,$;if(w&&C=="object")for($ in x)try{N.push(g(x[$],w-1))}catch{}return N.length?N:C=="string"?x:x+"\0"}function y(x,w){for(var N=x+"",C,$=0;$<N.length;)w[d&$]=d&(C^=w[d&$]*19)+N.charCodeAt($++);return v(w)}function b(){try{var x;return h&&(x=h.randomBytes)?x=x(r):(x=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(x)),v(x)}catch{var w=s.navigator,N=w&&w.plugins;return[+new Date,s,N,s.screen,v(e)]}}function v(x){return String.fromCharCode.apply(0,x)}if(y(t.random(),e),n.exports){n.exports=p;try{h=Ep}catch{}}})([],Math)})(Zu)),Zu.exports}var Qu,Lg;function rL(){if(Lg)return Qu;Lg=1;var n=HP(),e=KP(),t=YP(),s=ZP(),r=eL(),o=nL(),a=sL();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=s,a.xor4096=r,a.tychei=o,Qu=a,Qu}rL();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Mg;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Mg||(Mg={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&I(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL=Bp;class ku extends dh{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ab(this,Ns())}nextDataId(){return ku.nextDataId++}write(e,t,s){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&uo(`
============================
Hi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&ea(s[0])){const o=s.map(a=>Za(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return ys(r,o)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if(e.dtype==="string")try{s=t.map(r=>Hr(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,s)}makeOutput(e,t,s){const r=this.write(e,t,s);return Ns().makeTensorFromDataId(r,t,s,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ht();return e(),{kernelMs:Ht()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ce([e],"where");const t=this.readSync(e.dataId);return oL(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}ku.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D1(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const aL=n=>{const{x:e}=n.inputs,t=n.backend;ce(e,"abs");let s=new Float32Array(q(e.shape));const r=t.data.get(e.dataId).values;return s=D1(r),t.makeOutput(s,e.shape,"float32")},iL={kernelName:Gc,backendName:"cpu",kernelFunc:aL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(n){return(e,t,s,r,o)=>{const a=Se(e,t),i=a.length,c=fe(a),l=q(a),u=Ft(o,l),d=e.length,h=t.length,p=fe(e),f=fe(t),m=zo(e,a),g=zo(t,a);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){const b=na(y,i,c),v=b.slice(-d);m.forEach(C=>v[C]=0);const x=Zn(v,d,p),w=b.slice(-h);g.forEach(C=>w[C]=0);const N=Zn(w,h,f);u[y]=n(s[x],r[N])}return[u,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,i=t.makeTensorInfo(s.shape,"complex64"),c=t.data.get(i.dataId);return c.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",a)},i}const cL={kernelName:xh,backendName:"cpu",kernelFunc:Jt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(n,e,t="float32"){if(t==="complex64"){const r=Rc(n,e,"float32"),o=Rc(n,e,"float32");return Jt({inputs:{real:r,imag:o},backend:n})}const s=Mt(q(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const lL={kernelName:Ca,backendName:"cpu",kernelFunc:ns};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fr(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const uL={kernelName:Hh,backendName:"cpu",kernelFunc:fr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ms(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return ns({inputs:{x:r},backend:t});const a=Rc(t,r.shape,r.dtype),i=Ms({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=Jt({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}if(r.dtype==="complex64"){const a=fr({inputs:{input:r},backend:t}),i=Ms({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!Fb(r.dtype,o)){const a=ns({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(o==="int32"){const a=t.data.get(r.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(r.shape,"int32",i)}if(o==="bool"){const a=t.data.get(r.dataId).values,i=xr([0],r.dtype),[c,l]=mt((u,d)=>u!==d?1:0)(r.shape,[],a,i,"bool");return t.makeTensorInfo(l,"bool",c)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const dL={kernelName:ua,backendName:"cpu",kernelFunc:Ms};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a,b:i}=r,c=o;ce([a,i],n);const l=c.data.get(a.dataId).values,u=c.data.get(i.dataId).values,d=s||a.dtype,[h,p]=e(a.shape,i.shape,l,u,d);return c.makeTensorInfo(p,d,h)}:({inputs:r,backend:o})=>{const{a,b:i}=r,c=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const l=Ms({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),u=c.data.get(l.dataId),d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag,p=c.data.get(d.dataId).values,f=c.data.get(h.dataId).values,m=Ms({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),g=c.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,v=c.data.get(y.dataId).values,x=c.data.get(b.dataId).values,[w,N,C]=t(a.shape,i.shape,p,f,v,x),$=c.makeTensorInfo(C,"float32",w),S=c.makeTensorInfo(C,"float32",N),T=Jt({inputs:{real:$,imag:S},backend:c});return c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo($),c.disposeIntermediateTensorInfo(S),T}else{const l=c.data.get(a.dataId).values,u=c.data.get(i.dataId).values,d=s||a.dtype,[h,p]=e(a.shape,i.shape,l,u,d);return c.makeTensorInfo(p,d,h)}}}function zf(n){return(e,t,s,r,o,a)=>{const i=Se(e,t),c=q(i),l=i.length,u=fe(i),d=Ft("float32",c),h=Ft("float32",c),p=zo(e,i),f=zo(t,i),m=ys(s,r),g=ys(o,a),y=e.length,b=fe(e),v=t.length,x=fe(t);if(p.length+f.length===0)for(let w=0;w<d.length;w++){const N=w%m.length,C=w%g.length,$=n(m[N*2],m[N*2+1],g[C*2],g[C*2+1]);d[w]=$.real,h[w]=$.imag}else for(let w=0;w<d.length;w++){const N=na(w,l,u),C=N.slice(-y);p.forEach(F=>C[F]=0);const $=Zn(C,y,b),S=N.slice(-v);f.forEach(F=>S[F]=0);const T=Zn(S,v,x),E=n(m[$*2],m[$*2+1],g[T*2],g[T*2+1]);d[w]=E.real,h[w]=E.imag}return[d,h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E1=mt(((n,e)=>n+e)),hL=zf(((n,e,t,s)=>({real:n+t,imag:e+s}))),wi=Dt(ro,E1,hL),pL={kernelName:ro,backendName:"cpu",kernelFunc:wi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(n,e,t,s,r){const o=q(s),a=Mt(r,t);for(let i=0;i<n.length;i++){const c=n[i];if(c<0)throw new Error("Input x must be non-negative!");c>=r||(o>0?a[c]+=e[i]:a[c]+=1)}return a}function A1(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],a=Te([r,t],e.dtype);for(let i=0;i<r;i++)for(let c=0;c<o;c++){const l=n.get(i,c);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(s?a.set(1,i,l):e.size>0?a.set(a.get(i,l)+e.get(i,c),i,l):a.set(a.get(i,l)+1,i,l))}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fo(n){return(e,t,s)=>{const r=Ft(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(ce(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=o,c=i.data.get(a.dataId).values,l=q(a.shape),u=t||a.dtype,d=so(u,l);for(let h=0;h<l;++h)d[h]=e(c[h],r);return i.makeTensorInfo(a.shape,u,d)}}function mo(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(ce(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=o,c=i.data.get(a.dataId).values,l=a.dtype,u=e(c,l,r);return i.makeTensorInfo(a.shape,l,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R1=fo(n=>Math.ceil(n)),fL=mo(da,R1),mL={kernelName:da,backendName:"cpu",kernelFunc:fL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O1(n,e,t,s){const r=so(t,q(e));if(s&&t!=="string"){let o=0;n.forEach(a=>{const i=q(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?ff(a.vals):a.vals;let c=0;for(let l=0;l<a.shape[0];++l){const u=l*e[1]+o;for(let d=0;d<a.shape[1];++d)r[u+d]=i[c++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F1=fo(n=>Math.exp(n)),_1=mo(ba,F1),gL={kernelName:ba,backendName:"cpu",kernelFunc:_1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P1=fo(n=>Math.expm1(n)),yL=mo(xa,P1),bL={kernelName:xa,backendName:"cpu",kernelFunc:yL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L1=fo(n=>Math.floor(n)),xL=mo(wa,L1),wL={kernelName:wa,backendName:"cpu",kernelFunc:xL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M1(n,e,t){const s=Te(t,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),i=a[0],c=a[2],l=e.locToIndex([i,c]);a[2]=e.values[l];const u=n.locToIndex(a);s.values[r]=n.values[u]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z1=mt((n,e)=>n>e?1:0),vL=Dt(ul,z1,null,"bool"),kL={kernelName:ul,backendName:"cpu",kernelFunc:vL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B1=mt((n,e)=>n<e?1:0),CL=Dt(hl,B1,null,"bool"),NL={kernelName:hl,backendName:"cpu",kernelFunc:CL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W1(n,e,t){const s=(e-n)/(t-1),r=Mt(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V1=fo(n=>Math.log(n)),$L=mo(Sa,V1),IL={kernelName:Sa,backendName:"cpu",kernelFunc:$L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n,e,t,s){const r=Ft(s,q(t));for(let o=0;o<r.length;++o){const a=o*e;let i=n[a];for(let c=0;c<e;++c){const l=n[a+c];l>i&&(i=l)}r[o]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G1=mt(((n,e)=>Math.max(n,e))),SL=Dt(Da,G1),TL={kernelName:Da,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j1=mt(((n,e)=>Math.min(n,e))),DL=Dt(Ea,j1),EL={kernelName:Ea,backendName:"cpu",kernelFunc:DL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wf=mt(((n,e)=>n*e)),AL=zf(((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t}))),Vf=Dt(Ra,Wf,AL),RL={kernelName:Ra,backendName:"cpu",kernelFunc:Vf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H1(n,e,t){const s=Bs(-1,t);return Wf([],e,s,n,t)}function OL(n){const{inputs:e,backend:t}=n,{x:s}=e;ce(s,"neg");const r=t.data.get(s.dataId).values,[o,a]=H1(r,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}const FL={kernelName:Nl,backendName:"cpu",kernelFunc:OL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q1=mt(((n,e)=>n!==e?1:0)),_L=Dt($l,q1,null,"bool"),PL={kernelName:$l,backendName:"cpu",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(n,e,t,s,r){const o=e.length,a=q(e),i=fe(e),c=fe(r),l=Ft(t,q(r));for(let u=0;u<a;++u){const d=na(u,o,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=Zn(h,o,c);l[p]=n[u]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;ce(r,"transpose");const a=r.shape.length,i=new Array(a);for(let d=0;d<i.length;d++)i[d]=r.shape[o[d]];const c=s.data.get(r.dataId).values,l=Uf(c,r.shape,r.dtype,o,i);return{dataId:s.write(l,i,r.dtype),shape:i,dtype:r.dtype}}const LL={kernelName:Wl,backendName:"cpu",kernelFunc:$n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K1(n,e,t,s){const[r,o]=Tt(n,s),a=ln(e,"int32"),i=Mt(q(r),a),c=q(o);for(let l=0;l<i.length;++l){const u=l*c;let d=1;for(let h=0;h<c;++h)d*=t[u+h];i[l]=d}return{outVals:i,outShape:r,outDtype:a}}function ML(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ce(r,"prod");const i=r.shape.length,c=Ie(o,r.shape),l=ut(c,i);let u=c,d=r;const h=[];l!=null&&(d=$n({inputs:{x:r},backend:t,attrs:{perm:l}}),h.push(d),u=ft(u.length,i));const p=t.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=K1(d.shape,d.dtype,p,u);let y=m;return a&&(y=pt(m,c)),h.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(y,g,f)}const zL={kernelName:Gh,backendName:"cpu",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1(n,e,t,s){const r=n===e,o=n<e&&t<0,a=e<n&&t>1;if(r||o||a)return Mt(0,s);const i=Math.abs(Math.ceil((e-n)/t)),c=Mt(i,s);e<n&&t===1&&(t=-1),c[0]=n;for(let l=1;l<c.length;l++)c[l]=c[l-1]+t;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y1=fo(n=>1/Math.sqrt(n)),BL=mo(Ma,Y1),WL={kernelName:Ma,backendName:"cpu",kernelFunc:BL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1(n,e,t,s,r){const o=up(s,e,t),a=q(t),i=fe(s);if(o){const d=dp(e,i);return r==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const c=r==="string"?ff(n):n,l=Te(s,r,c),u=Te(t,r);for(let d=0;d<u.size;++d){const h=u.indexToLoc(d),p=h.map((f,m)=>f+e[m]);u.set(l.get(...p),...h)}return r==="string"?b0(u.values):u.values}function mr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s;ce(r,"slice");const[i,c]=jl(r,o,a);lp(r,i,c);const l=t.data.get(r.dataId).values,u=J1(l,i,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,u)}const VL={kernelName:Pl,backendName:"cpu",kernelFunc:mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1=mt(((n,e)=>{const t=n-e;return t*t})),UL=Dt(Ha,Z1),GL={kernelName:Ha,backendName:"cpu",kernelFunc:UL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q1(n,e,t,s){const r=Te(n,e.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let c=0;c<i.length;c++)i[c]=a[c]*t[c]+s[c];r.set(e.get(...i),...a)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ev=mt(((n,e)=>n-e)),jL=zf(((n,e,t,s)=>({real:n-t,imag:e-s}))),Gf=Dt(qa,ev,jL),HL={kernelName:qa,backendName:"cpu",kernelFunc:Gf};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=Te(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let c=0;c<a.length;c++)a[c]=o[c]%n.shape[c];const i=n.locToIndex(a);s.values[r]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(n,e,t,s,r){const o=e[e.length-1],[a,i]=[n.length/o,o],c=Ft(t,a*s),l=Ft("int32",a*s);for(let d=0;d<a;d++){const h=d*i,p=n.subarray(h,h+i),f=[];for(let b=0;b<p.length;b++)f.push({value:p[b],index:b});f.sort((b,v)=>v.value-b.value);const m=d*s,g=c.subarray(m,m+s),y=l.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,y[b]=f[b].index}const u=e.slice();return u[u.length-1]=s,[Te(u,t,c),Te(u,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sv(n,e,t,s){const r=Ie(e,t)[0],o=[1,t[0],1];for(let f=0;f<r;f++)o[0]*=t[f];o[1]=t[r];for(let f=r+1;f<t.length;f++)o[2]*=t[f];const a={},i=new Int32Array(t[r]),c=new $t(o,s,n),l=[],u=o[0]===1&&o[2]===1;for(let f=0;f<t[r];f++){let m;if(u)m=n[f].toString();else{const g=[];for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)g.push(c.get(y,f,b));m=g.join(",")}if(a[m]!==void 0)i[f]=a[m];else{const g=Object.keys(a).length;a[m]=g,i[f]=g,l.push(f)}}const d=o.slice();d[1]=Object.keys(a).length;const h=new $t(d,s);l.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)h.set(c.get(g,f,y),g,m,y)});const p=t.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL=Object.freeze(Object.defineProperty({__proto__:null,addImpl:E1,bincountImpl:Bf,bincountReduceImpl:A1,ceilImpl:R1,concatImpl:O1,expImpl:F1,expm1Impl:P1,floorImpl:L1,gatherV2Impl:M1,greaterImpl:z1,lessImpl:B1,linSpaceImpl:W1,logImpl:V1,maxImpl:U1,maximumImpl:G1,minimumImpl:j1,multiplyImpl:Wf,negImpl:H1,notEqualImpl:q1,prodImpl:K1,rangeImpl:X1,rsqrtImpl:Y1,simpleAbsImpl:D1,sliceImpl:J1,squaredDifferenceImpl:Z1,stridedSliceImpl:Q1,subImpl:ev,tileImpl:tv,topKImpl:nv,transposeImpl:Uf,uniqueImpl:sv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */xx("cpu",()=>new ku,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rv=Me(ga,n=>n>=0?n:Math.exp(n)-1),KL={kernelName:ga,backendName:"cpu",kernelFunc:rv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ov(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;ce([r],"leakyRelu");const a=q(r.shape),i=t.data.get(r.dataId).values,c=Ft("float32",a);for(let l=0;l<i.length;l++)c[l]=i[l]<0?o*i[l]:i[l];return t.makeTensorInfo(r.shape,"float32",c)}const XL={kernelName:dl,backendName:"cpu",kernelFunc:ov};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YL=mt((n,e)=>n<0?e*n:n);function av(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;ce([s,r],"prelu");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,[i,c]=YL(s.shape,r.shape,o,a,s.dtype);return t.makeTensorInfo(c,s.dtype,i)}const JL={kernelName:El,backendName:"cpu",kernelFunc:av};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iv=Me(_a,n=>Math.max(0,n)),ZL={kernelName:_a,backendName:"cpu",kernelFunc:iv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=Me(Pa,n=>Math.min(Math.max(0,n),6)),QL={kernelName:Pa,backendName:"cpu",kernelFunc:cv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jf(n,e,t,s,r){if(t==="linear")return ns({inputs:{x:e},backend:n});if(t==="relu")return iv({inputs:{x:e},backend:n});if(t==="elu")return rv({inputs:{x:e},backend:n});if(t==="relu6")return cv({inputs:{x:e},backend:n});if(t==="prelu")return av({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return ov({inputs:{x:e},backend:n,attrs:{alpha:r}});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nt(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=q(r.shape),i=Ob(o,a),c=q(i);I(a===c,()=>`The new shape (${i}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const l=t.data.get(r.dataId);if(l.complexTensorInfos!=null){const u=l.complexTensorInfos.real,d=l.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const eM={kernelName:Al,backendName:"cpu",kernelFunc:nt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lv(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;ce([r,o],"matMul");const c=r.shape.length,l=o.shape.length,u=a?r.shape[c-2]:r.shape[c-1],d=i?o.shape[l-1]:o.shape[l-2],h=a?r.shape[c-1]:r.shape[c-2],p=i?o.shape[l-2]:o.shape[l-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=q(f),y=q(m),b=g===y||g===1||y===1;I(c>=2&&l>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);const x=(g>y?r.shape.slice(0,-2):o.shape.slice(0,-2)).concat([h,p]);I(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,u,h]:[g,h,u],N=i?[y,p,d]:[y,d,p],C=nt({inputs:{x:r},backend:t,attrs:{shape:w}}),$=nt({inputs:{x:o},backend:t,attrs:{shape:N}}),S=a?C.shape[1]:C.shape[2],T=a?C.shape[2]:C.shape[1],E=i?$.shape[1]:$.shape[2],F=Math.max(g,y),O=t.data.get(C.dataId).values,L=t.data.get($.dataId).values,z=fe(C.shape),M=fe($.shape),[K,U,H]=a?[z[0],1,z[1]]:[z[0],z[1],1],[X,J,j]=i?[1,M[1],M[0]]:[M[1],1,M[0]],ee=T*E,te=Te([F,T,E],C.dtype),ne=te.values,re=t.blockSize;for(let ie=0;ie<F;ie++)for(let he=0;he<T;he+=re)for(let ue=0;ue<E;ue+=re)for(let ye=0;ye<S;ye+=re){const $e=Math.min(he+re,T),Oe=Math.min(ue+re,E),Je=Math.min(ye+re,S);for(let ze=he;ze<$e;ze++)for(let Be=ue;Be<Oe;Be++){let We=0;for(let Ge=ye;Ge<Je;Ge++){const st=Math.min(ie,g-1)*K,Tn=Math.min(ie,y-1)*j,gt=O[st+ze*U+Ge*H],pn=L[Ge*X+Be*J+Tn];We+=gt*pn}ne[ie*ee+(ze*E+Be)]+=We}}return t.disposeIntermediateTensorInfo(C),t.disposeIntermediateTensorInfo($),t.makeTensorInfo(x,te.dtype,te.values)}const tM={kernelName:Yc,backendName:"cpu",kernelFunc:lv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=lv({inputs:{a:r,b:o},attrs:{transposeA:c,transposeB:l},backend:t}),a&&(p=wi({inputs:{a:h,b:a},backend:t}),m.push(h),h=p),u&&(f=jf(t,h,u,i,d),m.push(h),h=f);for(const y of m)t.disposeIntermediateTensorInfo(y);return h}const sM={kernelName:uc,backendName:"cpu",kernelFunc:nM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM=Me(sa,n=>Math.acos(n)),oM={kernelName:sa,backendName:"cpu",kernelFunc:rM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM=Me(ra,n=>Math.acosh(n)),iM={kernelName:ra,backendName:"cpu",kernelFunc:aM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n){const{inputs:e,backend:t}=n,s=e;ce(e,"addN");const r=s.map(i=>t.data.get(i.dataId).values),o=Te(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const c=r[i];for(let l=0;l<a.length;l++)a[l]+=c[l]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const lM={kernelName:jc,backendName:"cpu",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ce(r,"all");const i=Ie(o,r.shape);let c=i;const l=ut(c,r.shape.length);let u=r;l!=null&&(u=$n({inputs:{x:r},backend:t,attrs:{perm:l}}),c=ft(c.length,r.shape.length)),Pt("all",c,u.shape.length);const[d,h]=Tt(u.shape,c),p=q(h),f=Mt(q(d),u.dtype),m=t.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let v=m[b];for(let x=0;x<p;++x){const w=m[b+x];v=v&&w}f[y]=v}l!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(d,u.dtype,f);if(a){const y=pt(d,i),b=nt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const dM={kernelName:fh,backendName:"cpu",kernelFunc:uM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ce(r,"any");const i=Ie(o,r.shape);let c=i;const l=ut(c,r.shape.length);let u=r;l!=null&&(u=$n({inputs:{x:r},backend:t,attrs:{perm:l}}),c=ft(c.length,r.shape.length)),Pt("any",c,u.shape.length);const[d,h]=Tt(u.shape,c),p=q(h),f=Mt(q(d),u.dtype),m=t.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let v=m[b];for(let x=0;x<p;++x){const w=m[b+x];v=v||w}f[y]=v}l!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(d,u.dtype,f);if(a){const y=pt(d,i),b=nt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const pM={kernelName:mh,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;ce(r,"argMax");let a=Ie(o,r.shape);const i=ut(a,r.shape.length);let c=r;const l=[];i!=null&&(c=$n({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=ft(a.length,c.shape.length)),a=[a[0]],Pt("argMax",a,c.shape.length);const[u,d]=Tt(c.shape,a),h=q(u),p=Mt(h,"int32"),f=q(d),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],v=0;for(let x=0;x<f;++x){const w=m[y+x];w>b&&(b=w,v=x)}p[g]=v}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const mM={kernelName:Hc,backendName:"cpu",kernelFunc:fM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;ce(r,"argMin");let a=Ie(o,r.shape);const i=ut(a,r.shape.length);let c=r;const l=[];i!=null&&(c=$n({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=ft(a.length,c.shape.length)),a=[a[0]],Pt("argMin",a,c.shape.length);const[u,d]=Tt(c.shape,a),h=q(u),p=Mt(h,"int32"),f=q(d),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],v=0;for(let x=0;x<f;++x){const w=m[y+x];w<b&&(b=w,v=x)}p[g]=v}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const yM={kernelName:qc,backendName:"cpu",kernelFunc:gM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM=Me(oa,n=>Math.asin(n)),xM={kernelName:oa,backendName:"cpu",kernelFunc:bM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=Me(aa,n=>Math.asinh(n)),vM={kernelName:aa,backendName:"cpu",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM=Me(ia,n=>Math.atan(n)),CM={kernelName:ia,backendName:"cpu",kernelFunc:kM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM=mt((n,e)=>Math.atan2(n,e)),$M=Dt(la,NM),IM={kernelName:la,backendName:"cpu",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM=Me(ca,n=>Math.atanh(n)),TM={kernelName:ca,backendName:"cpu",kernelFunc:SM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hf(n,e,t,s,r,o){const a=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Te(r.outShape,t),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){const w=x*y,N=x*s[0];for(let C=0;C<r.inChannels;++C)for(let $=0;$<r.outHeight;++$){const S=$*a-h,T=Math.max(0,S),E=Math.min(r.inHeight,u+S),F=w+$*b;for(let O=0;O<r.outWidth;++O){const L=O*i-p,z=Math.max(0,L),M=Math.min(r.inWidth,d+L);let K=f,U=0,H=0;for(let J=T;J<E;J+=c){const j=N+J*s[1];for(let ee=z;ee<M;ee+=l){const te=j+ee*s[2],ne=n[te+C];o==="max"&&ne>K?K=ne:o==="avg"&&(U+=ne,H++)}if(isNaN(K))break}const X=F+O*v+C;g[X]=o==="avg"?U/H:K}}}return m}function uv(n,e,t,s,r=!1,o=!1){const a=Te(s.outShape,"int32"),i=s.strideHeight,c=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Te(e,t,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const v=b*i-p;let x=v;for(;x<0;)x+=l;const w=Math.min(s.inHeight,d+v);for(let N=0;N<s.outWidth;++N){const C=N*c-f;let $=C;for(;$<0;)$+=u;const S=Math.min(s.inWidth,h+C);let T=Number.NEGATIVE_INFINITY,E=-1;for(let F=x;F<w;F+=l){const O=F-v;for(let L=$;L<S;L+=u){const z=L-C,M=m.get(g,F,L,y);M>T&&(T=M,r?E=o?((g*s.inHeight+F)*s.inWidth+L)*s.inChannels+y:(F*s.inWidth+L)*s.inChannels+y:E=O*h+z)}}a.set(E,g,b,N,y)}}return a}function dv(n,e,t,s,r,o){const a=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Te(r.outShape,t),x=v.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[3]*r.outShape[4],$=r.outShape[4];for(let S=0;S<r.batchSize;++S){const T=S*w,E=S*s[0];for(let F=0;F<r.inChannels;++F)for(let O=0;O<r.outDepth;++O){const L=O*a-m;let z=L;for(;z<0;)z+=l;const M=Math.min(r.inDepth,h+L),K=T+O*N;for(let U=0;U<r.outHeight;++U){const H=U*i-g;let X=H;for(;X<0;)X+=u;const J=Math.min(r.inHeight,p+H),j=K+U*C;for(let ee=0;ee<r.outWidth;++ee){const te=ee*c-y;let ne=te;for(;ne<0;)ne+=d;const re=Math.min(r.inWidth,f+te),ie=j+ee*$;let he=b,ue=0,ye=0;for(let Oe=z;Oe<M;Oe+=l){const Je=E+Oe*s[1];for(let ze=X;ze<J;ze+=u){const Be=Je+ze*s[2];for(let We=ne;We<re;We+=d){const Ge=Be+We*s[3],st=n[Ge+F];if(o==="max"&&st>he?he=st:o==="avg"&&(ue+=st,ye++),isNaN(he))break}if(isNaN(he))break}if(isNaN(he))break}const $e=ie+F;x[$e]=o==="avg"?ue/ye:he}}}}return v}function DM(n,e){const t=Te(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*s-h;let v=b;for(;v<0;)v+=a;const x=Math.min(e.inDepth,l+b);for(let w=0;w<e.outHeight;++w){const N=w*r-p;let C=N;for(;C<0;)C+=i;const $=Math.min(e.inHeight,u+N);for(let S=0;S<e.outWidth;++S){const T=S*o-f;let E=T;for(;E<0;)E+=c;const F=Math.min(e.inWidth,d+T);let O=Number.NEGATIVE_INFINITY,L=-1;for(let z=v;z<x;z+=a){const M=z-b;for(let K=C;K<$;K+=i){const U=K-N;for(let H=E;H<F;H+=c){const X=H-T,J=n.get(m,z,K,H,g);J>=O&&(O=J,L=M*u*d+U*u+X)}}}t.set(L,m,y,w,S,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ce(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;I(_t(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=In(r.shape,o,a,l,i,c);let d;if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))d=ns({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=fe(r.shape),f=Hf(h,r.shape,r.dtype,p,u,"avg");d=t.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}const AM={kernelName:Kc,backendName:"cpu",kernelFunc:EM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:l}=s;ce(r,"avgPool3d");const u=bs(r.shape,o,a,1,i,c,l),d=t.data.get(r.dataId).values,h=dv(d,r.shape,r.dtype,fe(r.shape),u,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const OM={kernelName:Xc,backendName:"cpu",kernelFunc:RM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:l}=s;ce([r,o],"avgPool3DGrad");const u=bs(o.shape,a,i,1,c,l),d=u.strideDepth,h=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,v=u.dilationWidth,x=u.effectiveFilterDepth,w=u.effectiveFilterHeight,N=u.effectiveFilterWidth,C=x-1-u.padInfo.front,$=N-1-u.padInfo.left,S=w-1-u.padInfo.top,T=Te(o.shape,"float32"),E=1/(f*m*g),F=t.bufferSync(r);for(let O=0;O<u.batchSize;++O)for(let L=0;L<u.inChannels;++L)for(let z=0;z<u.inDepth;++z)for(let M=0;M<u.inHeight;++M)for(let K=0;K<u.inWidth;++K){const U=z-C,H=M-S,X=K-$;let J=0;for(let j=0;j<x;j+=y){const ee=(U+j)/d;if(!(ee<0||ee>=u.outDepth||Math.floor(ee)!==ee))for(let te=0;te<w;te+=b){const ne=(H+te)/h;if(!(ne<0||ne>=u.outHeight||Math.floor(ne)!==ne))for(let re=0;re<N;re+=v){const ie=(X+re)/p;if(ie<0||ie>=u.outWidth||Math.floor(ie)!==ie)continue;const he=F.get(O,ee,ne,ie,L);J+=he}}}T.set(J*E,O,z,M,K,L)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const _M={kernelName:yh,backendName:"cpu",kernelFunc:FM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;ce([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=s,u=In(a.shape,i,c,1,l),d=u.strideHeight,h=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,v=b-1-u.padInfo.left,x=y-1-u.padInfo.top,w=Te(a.shape,"float32"),N=1/(p*f),C=t.data.get(r.dataId).values,$=Te(r.shape,"float32",C);for(let S=0;S<u.batchSize;++S)for(let T=0;T<u.inChannels;++T)for(let E=0;E<u.inHeight;++E)for(let F=0;F<u.inWidth;++F){const O=E-x,L=F-v;let z=0;for(let M=0;M<y;M+=m){const K=(O+M)/d;if(!(K<0||K>=u.outHeight||Math.floor(K)!==K))for(let U=0;U<b;U+=g){const H=(L+U)/h;if(H<0||H>=u.outWidth||Math.floor(H)!==H)continue;const X=$.get(S,K,H,T);z+=X}}w.set(z*N,S,E,F,T)}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const LM={kernelName:gh,backendName:"cpu",kernelFunc:PM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:a,mean:i,variance:c}=e;I(i.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ce([r,i,c,o,a],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const u=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,h=t.data.get(c.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=h.length,v=d.length;let x=0,w=0,N=0,C=0;for(let $=0;$<u.length;++$)m[$]=f[x++]+(u[$]-d[w++])*p[N++]/Math.sqrt(h[C++]+l),x>=g&&(x=0),w>=v&&(w=0),N>=y&&(N=0),C>=b&&(C=0);return t.makeTensorInfo(r.shape,r.dtype,m)}const zM={kernelName:cl,backendName:"cpu",kernelFunc:MM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;ce([r],"batchToSpaceND");const i=o.reduce((y,b)=>y*b),c=li(r.shape,o,i),l=ui(c.length,o.length),u=di(r.shape,o,i),d=nf(a,o.length),h=sf(u,a,o.length),p=nt({inputs:{x:r},backend:t,attrs:{shape:c}}),f=$n({inputs:{x:p},backend:t,attrs:{perm:l}}),m=nt({inputs:{x:f},backend:t,attrs:{shape:u}}),g=mr({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const WM={kernelName:Jc,backendName:"cpu",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,l=Bf(i,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}const UM={kernelName:bh,backendName:"cpu",kernelFunc:VM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GM=Me(ha,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),jM={kernelName:ha,backendName:"cpu",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(q(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,i=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values;for(let l=0;l<i.length;l++){const u=i[l],d=c[l];s[l]=Math.hypot(u,d)}return t.makeOutput(s,e.shape,"float32")},qM={kernelName:Zc,backendName:"cpu",kernelFunc:HM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jr(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const KM={kernelName:Fh,backendName:"cpu",kernelFunc:Jr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zr(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Ie(r,e[0].shape)[0];let a=ps(e.map(m=>m.shape),o);if(q(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const i=e.filter(m=>q(m.shape)>0);if(i.length===1)return ns({inputs:{x:i[0]},backend:t});const c=i.map(m=>m.shape);if(Qp(c,o),i[0].dtype==="complex64"){const m=i.map(x=>fr({inputs:{input:x},backend:t})),g=i.map(x=>Jr({inputs:{input:x},backend:t})),y=Zr({inputs:m,backend:t,attrs:{axis:o}}),b=Zr({inputs:g,backend:t,attrs:{axis:o}}),v=Jt({inputs:{real:y,imag:b},backend:t});return m.forEach(x=>t.disposeIntermediateTensorInfo(x)),g.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),v}const l=i.map(m=>{const y=[-1,q(m.shape.slice(o))];return nt({inputs:{x:m},backend:t,attrs:{shape:y}})}),u=l.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=ps(l.map(m=>m.shape),1);const d=l[0].shape[0]===1,h=O1(u,a,e[0].dtype,d),p=ps(i.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,h);return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const XM={kernelName:Qc,backendName:"cpu",kernelFunc:Zr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=s;ce([r,o],"conv2d");const d=xs(c),h=St(r.shape,o.shape,a,l,i,u,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,v=h.dataFormat==="channelsLast",x=new $t(h.outShape,r.dtype),w=fe(r.shape),N=fe(o.shape),C=w[0],$=v?w[1]:w[2],S=v?w[2]:1,T=v?1:w[1],E=x.strides[0],F=v?x.strides[1]:x.strides[2],O=v?x.strides[2]:1,L=v?1:x.strides[1],z=t.data.get(r.dataId).values,M=t.data.get(o.dataId).values,K=x.values;for(let U=0;U<h.batchSize;++U){const H=U*C,X=U*E;for(let J=0;J<h.outHeight;++J){const j=X+J*F,ee=J*h.strideHeight-b;for(let te=0;te<p;++te){const ne=ee+te*m;if(ne<0||ne>=h.inHeight)continue;const re=te*N[0],ie=H+ne*$;for(let he=0;he<h.outWidth;++he){const ue=j+he*O,ye=he*h.strideWidth-y;for(let $e=0;$e<f;++$e){const Oe=ye+$e*g;if(Oe<0||Oe>=h.inWidth)continue;const Je=re+$e*N[1],ze=ie+Oe*S;let Be=Je;for(let We=0;We<h.inChannels;++We){const Ge=z[ze+We*T];for(let st=0;st<h.outChannels;++st)K[ue+st*L]+=Ge*M[Be+st];Be+=h.outChannels}}}}}}return t.makeTensorInfo(x.shape,x.dtype,K)}const YM={kernelName:el,backendName:"cpu",kernelFunc:hv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=s;ce([r,o],"conv2dBackpropFilter");const d=xs(c),h=St(r.shape,u,a,1,i,l,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=h.dataFormat==="channelsLast",b=new $t(h.filterShape,"float32"),v=h.padInfo.left,x=h.padInfo.top,w=t.data.get(r.dataId).values,N=t.data.get(o.dataId).values,C=new $t(r.shape,r.dtype,w),$=new $t(o.shape,o.dtype,N);for(let S=0;S<m;++S){const T=Math.max(0,Math.ceil((x-S)/p)),E=Math.min(h.outHeight,(h.inHeight+x-S)/p);for(let F=0;F<g;++F){const O=Math.max(0,Math.ceil((v-F)/f)),L=Math.min(h.outWidth,(h.inWidth+v-F)/f);for(let z=0;z<h.inChannels;++z)for(let M=0;M<h.outChannels;++M){let K=0;for(let U=0;U<h.batchSize;++U)for(let H=T;H<E;++H){const X=S+H*p-x;for(let J=O;J<L;++J){const j=F+J*f-v;y?K+=C.get(U,X,j,z)*$.get(U,H,J,M):K+=C.get(U,z,X,j)*$.get(U,M,H,J)}}b.set(K,S,F,z,M)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const ZM={kernelName:wh,backendName:"cpu",kernelFunc:JM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=s;ce([r,o],"conv2dBackpropInput");const d=fe(o.shape),h=fe(r.shape);let p=xs(l);const f=St(a,o.shape,i,1,c,u,!1,p),m=new $t(f.inShape,"float32"),g=m.values,y=t.data.get(r.dataId).values,b=t.data.get(o.dataId).values,[v,x,w]=d,{batchSize:N,filterHeight:C,filterWidth:$,inChannels:S,inHeight:T,inWidth:E,outChannels:F,outHeight:O,outWidth:L,strideHeight:z,strideWidth:M}=f;p=f.dataFormat;const K=C-1-f.padInfo.top,U=$-1-f.padInfo.left,H=p==="channelsLast",X=m.strides[0],J=H?m.strides[1]:m.strides[2],j=H?m.strides[2]:1,ee=H?1:m.strides[1],te=h[0],ne=H?h[1]:h[2],re=H?h[2]:1,ie=H?1:h[1];for(let he=0;he<N;++he)for(let ue=0;ue<S;++ue)for(let ye=0;ye<T;++ye){const $e=ye-K,Oe=Math.max(0,Math.ceil($e/z)),Je=Math.min(O,(C+$e)/z);for(let ze=0;ze<E;++ze){const Be=ze-U,We=Math.max(0,Math.ceil(Be/M)),Ge=Math.min(L,($+Be)/M);let st=0;for(let gt=Oe;gt<Je;++gt){const pn=gt*z-$e;for(let Bt=We;Bt<Ge;++Bt){const Dn=Bt*M-Be,jt=te*he+ne*gt+re*Bt,En=v*(C-1-pn)+x*($-1-Dn)+w*ue;for(let Vn=0;Vn<F;++Vn){const Un=y[jt+ie*Vn],Gn=b[En+Vn];st+=Un*Gn}}}const Tn=X*he+J*ye+j*ze+ee*ue;g[Tn]=st}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const e3={kernelName:tl,backendName:"cpu",kernelFunc:QM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s;ce([r,o],"conv3d");const l=Ws(r.shape,o.shape,a,c,i),{filterDepth:u,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,v=g.top,x=new $t(l.outShape,r.dtype),w=t.data.get(r.dataId).values,N=t.data.get(o.dataId).values,C=x.values,$=fe(r.shape),S=fe(o.shape);for(let T=0;T<l.batchSize;++T){const E=T*$[0],F=T*x.strides[0];for(let O=0;O<l.outDepth;++O){const L=F+O*x.strides[1],z=O*l.strideDepth-y;for(let M=0;M<u;++M){const K=z+M*p;if(K<0||K>=l.inDepth)continue;const U=M*S[0],H=E+K*$[1];for(let X=0;X<l.outHeight;++X){const J=L+X*x.strides[2],j=X*l.strideHeight-v;for(let ee=0;ee<d;++ee){const te=j+ee*f;if(te<0||te>=l.inHeight)continue;const ne=U+ee*S[1],re=H+te*$[2];for(let ie=0;ie<l.outWidth;++ie){const he=J+ie*l.outChannels,ue=ie*l.strideWidth-b;for(let ye=0;ye<h;++ye){const $e=ue+ye*m;if($e<0||$e>=l.inWidth)continue;const Oe=ne+ye*S[2],Je=re+$e*l.inChannels;let ze=Oe;for(let Be=0;Be<l.inChannels;++Be){const We=w[Je+Be];for(let Ge=0;Ge<l.outChannels;++Ge)C[he+Ge]+=We*N[ze+Ge];ze+=l.outChannels}}}}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const n3={kernelName:nl,backendName:"cpu",kernelFunc:t3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:c}=s;ce([r,o],"conv3dBackpropFilterV2");const l=fe(r.shape),u=fe(o.shape),d=Ws(r.shape,c,a,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new $t(d.filterShape,"float32"),v=b.values,[x,w,N,C]=b.strides,$=t.data.get(o.dataId).values,[S,T,E,F]=u,O=t.data.get(r.dataId).values,[L,z,M,K]=l,U=d.padInfo.front,H=d.padInfo.left,X=d.padInfo.top;for(let J=0;J<m;++J){const j=Math.max(0,Math.ceil((U-J)/h)),ee=Math.min(d.outDepth,(d.inDepth+U-J)/h),te=J*x;for(let ne=0;ne<g;++ne){const re=Math.max(0,Math.ceil((X-ne)/p)),ie=Math.min(d.outHeight,(d.inHeight+X-ne)/p),he=ne*w+te;for(let ue=0;ue<y;++ue){const ye=Math.max(0,Math.ceil((H-ue)/f)),$e=Math.min(d.outWidth,(d.inWidth+H-ue)/f),Oe=ue*N+he;for(let Je=0;Je<d.inChannels;++Je){const ze=Je*C+Oe;for(let Be=0;Be<d.outChannels;++Be){let We=0;for(let Ge=0;Ge<d.batchSize;++Ge){const st=Ge*L,Tn=Ge*S;for(let gt=j;gt<ee;++gt){const Bt=(J+gt*h-U)*z+st,Dn=gt*T+Tn;for(let jt=re;jt<ie;++jt){const Vn=(ne+jt*p-X)*M+Bt,Un=jt*E+Dn;for(let Gn=ye;Gn<$e;++Gn){const vo=(ue+Gn*f-H)*K+Vn,ko=Gn*F+Un;We+=O[vo+Je]*$[ko+Be]}}}}v[ze+Be]=We}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const r3={kernelName:vh,backendName:"cpu",kernelFunc:s3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:c}=s;ce([r],"conv3dBackpropInputV2");const l=fe(r.shape),u=fe(o.shape),d=Ws(c,o.shape,i,1,a),h=new $t(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=t.data.get(r.dataId).values,[v,x,w,N]=l,C=t.data.get(o.dataId).values,[$,S,T,E]=u,{batchSize:F,filterDepth:O,filterHeight:L,filterWidth:z,inChannels:M,inDepth:K,inHeight:U,inWidth:H,outChannels:X,outDepth:J,outHeight:j,outWidth:ee,strideDepth:te,strideHeight:ne,strideWidth:re}=d,ie=O-1-d.padInfo.front,he=L-1-d.padInfo.top,ue=z-1-d.padInfo.left;for(let ye=0;ye<F;++ye)for(let $e=0;$e<M;++$e)for(let Oe=0;Oe<K;++Oe){const Je=Oe-ie,ze=Math.max(0,Math.ceil(Je/te)),Be=Math.min(J,(O+Je)/te);for(let We=0;We<U;++We){const Ge=We-he,st=Math.max(0,Math.ceil(Ge/ne)),Tn=Math.min(j,(L+Ge)/ne);for(let gt=0;gt<H;++gt){const pn=gt-ue,Bt=Math.max(0,Math.ceil(pn/re)),Dn=Math.min(ee,(z+pn)/re);let jt=0;for(let En=ze;En<Be;++En){const Vn=En*te-Je;for(let Un=st;Un<Tn;++Un){const Gn=Un*ne-Ge;for(let Hs=Bt;Hs<Dn;++Hs){const vo=Hs*re-pn,ko=v*ye+x*En+w*Un+N*Hs,Du=$*(O-1-Vn)+S*(L-1-Gn)+T*(z-1-vo)+E*$e;for(let Tr=0;Tr<X;++Tr){const Eu=b[ko+Tr],Au=C[Du+Tr];jt+=Eu*Au}}}}p[f*ye+m*Oe+g*We+y*gt+$e]=jt}}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const a3={kernelName:kh,backendName:"cpu",kernelFunc:o3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3=Me(pa,n=>Math.cos(n)),c3={kernelName:pa,backendName:"cpu",kernelFunc:i3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l3=Me(fa,n=>Math.cosh(n)),u3={kernelName:fa,backendName:"cpu",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:l}=s,[u,d,h,p]=r.shape,f=o.shape[0],[m,g]=i,y=Te([f,m,g,p],"float32"),b=t.data.get(o.dataId).values,v=t.data.get(a.dataId).values,x=t.data.get(r.dataId).values,w=fe(r.shape),N=fe(y.shape);for(let C=0;C<f;C++){const $=C*4,S=b[$],T=b[$+1],E=b[$+2],F=b[$+3],O=v[C];if(O>=u)continue;const L=m>1?(E-S)*(d-1)/(m-1):0,z=g>1?(F-T)*(h-1)/(g-1):0;for(let M=0;M<m;M++){const K=m>1?S*(d-1)+M*L:.5*(S+E)*(d-1);if(K<0||K>d-1){for(let U=0;U<g;U++)for(let H=0;H<p;H++){const X=H+U*N[2]+M*N[1]+C*N[0];y.values[X]=l}continue}if(c==="bilinear"){const U=Math.floor(K),H=Math.ceil(K),X=K-U;for(let J=0;J<g;J++){const j=g>1?T*(h-1)+J*z:.5*(T+F)*(h-1);if(j<0||j>h-1){for(let re=0;re<p;re++){const ie=re+J*N[2]+M*N[1]+C*N[0];y.values[ie]=l}continue}const ee=Math.floor(j),te=Math.ceil(j),ne=j-ee;for(let re=0;re<p;re++){let ie=re+ee*w[2]+U*w[1]+O*w[0];const he=x[ie];ie=re+te*w[2]+U*w[1]+O*w[0];const ue=x[ie];ie=re+ee*w[2]+H*w[1]+O*w[0];const ye=x[ie];ie=re+te*w[2]+H*w[1]+O*w[0];const $e=x[ie],Oe=he+(ue-he)*ne,Je=ye+($e-ye)*ne;ie=re+J*N[2]+M*N[1]+C*N[0],y.values[ie]=Oe+(Je-Oe)*X}}}else for(let U=0;U<g;++U){const H=g>1?T*(h-1)+U*z:.5*(T+F)*(h-1);if(H<0||H>h-1){for(let j=0;j<p;j++){const ee=j+U*N[2]+M*N[1]+C*N[0];y.values[ee]=l}continue}const X=Math.round(H),J=Math.round(K);for(let j=0;j<p;j++){const ee=j+X*w[2]+J*w[1]+O*w[0],te=j+U*N[2]+M*N[1]+C*N[0];y.values[te]=x[ee]}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const h3={kernelName:Ch,backendName:"cpu",kernelFunc:d3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;ce(r,"cumsum");const c=ut([o],r.shape.length);let l=r;c!=null&&(l=$n({inputs:{x:r},backend:t,attrs:{perm:c}}));const u=ft(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${u}`);const d=ln(l.dtype,"int32"),h=Mt(q(l.shape),d),p=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const v=m(y,b);if(b===0)h[v]=a?0:p[v];else{const x=m(y,b-1);h[v]=a?p[x]+h[x]:p[v]+h[x]}}const g=t.makeTensorInfo(l.shape,d,h);if(c!=null){const y=co(c),b=$n({inputs:{x:g},backend:t,attrs:{perm:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),b}return g}const f3={kernelName:sl,backendName:"cpu",kernelFunc:p3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=Bf(c,l,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const c=t.bufferSync(r),l=t.bufferSync(o),u=A1(c,l,a,i);return t.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const g3={kernelName:Nh,backendName:"cpu",kernelFunc:m3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s;I(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),I(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],d=c*o,h=l*o,p=u/(o*o),f=t.data.get(r.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let y=0;y<i;++y)for(let b=0;b<d;++b){const v=Math.floor(b/o),x=b%o;for(let w=0;w<h;++w){const N=Math.floor(w/o),C=w%o,$=(x*o+C)*p;for(let S=0;S<p;++S){const E=S+$+u*(N+l*(v+c*y));m[g++]=f[E]}}}return t.makeTensorInfo([i,d,h,p],r.dtype,m)}const b3={kernelName:$h,backendName:"cpu",kernelFunc:y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pv(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:l}=s;ce([r,o],"depthwiseConv2DNative");const u=fe(r.shape),d=fe(o.shape);let h=c;h==null&&(h=[1,1]),I(_t(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const p=St(r.shape,o.shape,a,h,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,v=b.left,x=b.top,w=p.outChannels/p.inChannels,N=new $t(p.outShape,r.dtype),C=t.data.get(r.dataId).values,$=t.data.get(o.dataId).values,S=N.values;for(let T=0;T<p.batchSize;++T){const E=T*u[0],F=T*N.strides[0];for(let O=0;O<p.outHeight;++O){const L=F+O*N.strides[1],z=O*p.strideHeight-v;for(let M=0;M<f;++M){const K=z+M*g;if(K<0||K>=p.inHeight)continue;const U=M*d[0],H=E+K*u[1];for(let X=0;X<p.outWidth;++X){const J=L+X*N.strides[2],j=X*p.strideWidth-x;for(let ee=0;ee<m;++ee){const te=j+ee*y;if(te<0||te>=p.inWidth)continue;const ne=U+ee*d[1],re=H+te*p.inChannels;let ie=J,he=ne;for(let ue=0;ue<p.inChannels;++ue){const ye=C[re+ue];for(let $e=0;$e<w;++$e)S[ie+$e]+=ye*$[he+$e];ie+=w,he+=w}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const x3={kernelName:rl,backendName:"cpu",kernelFunc:pv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=s;ce([r,o],"depthwiseConv2dNativeBackpropFilter");const d=St(r.shape,u,a,i,c,l,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new $t(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,v=d.outChannels/d.inChannels,x=t.data.get(r.dataId).values,w=new $t(r.shape,r.dtype,x),N=t.data.get(o.dataId).values,C=new $t(o.shape,o.dtype,N);for(let $=0;$<f;++$){const S=Math.max(0,Math.ceil((b-$)/h)),T=Math.min(d.outHeight,(d.inHeight+b-$)/h);for(let E=0;E<m;++E){const F=Math.max(0,Math.ceil((y-E)/p)),O=Math.min(d.outWidth,(d.inWidth+y-E)/p);for(let L=0;L<d.outChannels;++L){const z=Math.trunc(L/v),M=L%v;let K=0;for(let U=0;U<d.batchSize;++U)for(let H=S;H<T;++H){const X=$+H*h-b;for(let J=F;J<O;++J){const j=E+J*p-y;K+=w.get(U,X,j,z)*C.get(U,H,J,L)}}g.set(K,$,E,z,M)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const v3={kernelName:Ih,backendName:"cpu",kernelFunc:w3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=s;ce([r,o],"depthwiseConv2DNativeBackpropInput");const d=fe(r.shape),h=fe(o.shape),p=St(u,o.shape,a,i,c,l,!0),f=new $t(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=t.data.get(r.dataId).values,[x,w,N]=d,C=t.data.get(o.dataId).values,[$,S,T]=h,{batchSize:E,filterHeight:F,filterWidth:O,inChannels:L,inHeight:z,inWidth:M,outChannels:K,outHeight:U,outWidth:H,strideHeight:X,strideWidth:J}=p,j=F-1-p.padInfo.top,ee=O-1-p.padInfo.left,te=K/L;for(let ne=0;ne<E;++ne)for(let re=0;re<L;++re)for(let ie=0;ie<z;++ie){const he=ie-j,ue=Math.max(0,Math.ceil(he/X)),ye=Math.min(U,(F+he)/X);for(let $e=0;$e<M;++$e){const Oe=$e-ee,Je=Math.max(0,Math.ceil(Oe/J)),ze=Math.min(H,(O+Oe)/J);let Be=0;for(let We=ue;We<ye;++We){const Ge=We*X-he;for(let st=Je;st<ze;++st){const Tn=st*J-Oe,gt=x*ne+w*We+N*st,pn=$*(F-1-Ge)+S*(O-1-Tn)+T*re;for(let Bt=0;Bt<te;++Bt){const Dn=re*te+Bt,jt=v[gt+Dn],En=C[pn+Bt];Be+=jt*En}}}m[g*ne+y*ie+b*$e+re]=Be}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const C3={kernelName:Sh,backendName:"cpu",kernelFunc:k3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n){const{inputs:e,backend:t}=n,{x:s}=e,r=q(s.shape),o=t.data.get(s.dataId).values,a=Te([r,r],s.dtype),i=a.values;for(let l=0;l<o.length;l++)i[l*r+l]=o[l];const c=[...s.shape,...s.shape];return t.makeTensorInfo(c,a.dtype,a.values)}const $3={kernelName:Wb,backendName:"cpu",kernelFunc:N3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I3={kernelName:ol,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:i}=t,c=e,l=c.data.get(s.dataId).values,u=s.shape.length,d=c.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:N,filterWidth:C,dilationHeight:$,dilationWidth:S,outShape:T}=ni(s.shape,r.shape,o,a,"NHWC",i),E=q(T),F=T.length,O=so(s.dtype,E);for(let z=0;z<p;++z)for(let M=0;M<y;++M){const K=M*x-v.top;for(let U=0;U<b;++U){const H=U*w-v.left;for(let X=0;X<g;++X){let J=Number.MIN_SAFE_INTEGER;for(let ee=0;ee<N;++ee){const te=K+ee*$;if(te>=0&&te<f)for(let ne=0;ne<C;++ne){const re=H+ne*S;if(re>=0&&re<m){const ie=Zn([z,te,re,X],u,fe(s.shape)),he=Zn([ee,ne,X],h,fe(r.shape)),ue=l[ie]+d[he];ue>J&&(J=ue)}}}const j=Zn([z,M,U,X],F,fe(T));O[j]=J}}}return{dataId:c.write(xr(O,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S3={kernelName:gd,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:c}=t,l=e,u=kn(s.shape,l.data.get(s.dataId).values),d=kn(r.shape,l.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:v,strideWidth:x,filterHeight:w,filterWidth:N,dilationHeight:C,dilationWidth:$,outShape:S}=ni(s.shape,r.shape,a,i,"NHWC",c);I(o.rank===S.length,()=>`Error in ${gd}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const T=kn(S,l.data.get(o.dataId).values),E=Lb(r.shape,r.dtype);for(let O=0;O<h;++O)for(let L=0;L<g;++L){const z=L*v-b.top;for(let M=0;M<y;++M){const K=M*x-b.left;for(let U=0;U<m;++U){let H=Number.MIN_SAFE_INTEGER,X=0,J=0;for(let j=0;j<w;++j){const ee=z+j*C;if(ee>=0&&ee<p)for(let te=0;te<N;++te){const ne=K+te*$;if(ne>=0&&ne<f){const re=u[O][ee][ne][U]+d[j][te][U];re>H&&(H=re,X=j,J=te)}}}E[X][J][U]+=T[O][L][M][U]}}}return{dataId:l.write(xr(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3={kernelName:md,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:c}=t,l=e,u=kn(s.shape,l.data.get(s.dataId).values),d=kn(r.shape,l.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:v,strideWidth:x,filterHeight:w,filterWidth:N,dilationHeight:C,dilationWidth:$,outShape:S}=ni(s.shape,r.shape,a,i,"NHWC",c);I(o.rank===S.length,()=>`Error in ${md}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const T=kn(S,l.data.get(o.dataId).values),E=Lb(s.shape,s.dtype);for(let O=0;O<h;++O)for(let L=0;L<g;++L){const z=L*v-b.top;for(let M=0;M<y;++M){const K=M*x-b.left;for(let U=0;U<m;++U){let H=Number.MIN_SAFE_INTEGER,X=z<0?0:z,J=K<0?0:K;for(let j=0;j<w;++j){const ee=z+j*C;if(ee>=0&&ee<p)for(let te=0;te<N;++te){const ne=K+te*$;if(ne>=0&&ne<f){const re=u[O][ee][ne][U]+d[j][te][U];re>H&&(H=re,X=ee,J=ne)}}}E[O][X][J][U]+=T[O][L][M][U]}}}return{dataId:l.write(xr(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;ce([s,r],"eluGrad");const o=new Float32Array(q(r.shape)),a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values;for(let c=0;c<a.length;++c){const l=a[c];l>=1?o[c]=i[c]:o[c]=i[c]*(l+1)}return t.makeTensorInfo(r.shape,"float32",o)}const E3={kernelName:Th,backendName:"cpu",kernelFunc:D3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A3=mt((n,e)=>n===e?1:0),fv=Dt(al,A3,null,"bool"),R3={kernelName:al,backendName:"cpu",kernelFunc:fv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O3=rf,F3=of,_3=af,P3=cf,L3=lf,M3=uf,z3=Me(ya,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+O3*t);return e*(1-((((M3*s+L3)*s+P3)*s+_3)*s+F3)*s*Math.exp(-t*t))}),B3={kernelName:ya,backendName:"cpu",kernelFunc:z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oc(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let c=o;return o<0&&(I(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+o+1),i.splice(c,0,1),nt({inputs:{x:r},backend:t,attrs:{shape:i}})}const W3={kernelName:il,backendName:"cpu",kernelFunc:Oc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V3=mt((n,e)=>n/e),qf=Dt(ma,V3),Qd={kernelName:ma,backendName:"cpu",kernelFunc:qf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mv(n,e,t){const s=n.shape,r=s[0],o=s[1],a=t.data.get(n.dataId),i=a.complexTensorInfos.real,c=a.complexTensorInfos.imag,l=[r,o],u=q(l),d=Ft("float32",u),h=Ft("float32",u);for(let g=0;g<r;g++){const y=mr({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,o]}}),b=mr({inputs:{x:c},backend:t,attrs:{begin:[g,0],size:[1,o]}}),v=Jt({inputs:{real:y,imag:b},backend:t}),{real:x,imag:w}=U3(v,e,t),N=ys(x,w);for(let C=0;C<o;C++){const $=df(N,C);d[g*o+C]=$.real,h[g*o+C]=$.imag}t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(v)}const p=t.makeTensorInfo(l,"float32",d),f=t.makeTensorInfo(l,"float32",h),m=Jt({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function U3(n,e,t){const s=q(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,a=t.data.get(r.complexTensorInfos.imag.dataId).values;if(G3(s)){const i=eh(o,a,s,e,t),c=[n.shape[0],n.shape[1]];if(e){const l=t.makeTensorInfo(c,"float32",i.real),u=t.makeTensorInfo(c,"float32",i.imag),d=t.makeTensorInfo([],"float32",Bs(s,"float32")),h=ns({inputs:{x:d},backend:t}),p=Qd.kernelFunc({inputs:{a:l,b:d},backend:t}),f=Qd.kernelFunc({inputs:{a:u,b:h},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=ys(o,a),c=j3(i,s,e);return u0(c)}}function G3(n){return(n&n-1)===0}function eh(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=ys(n,e),a=t/2,i=d0(o),c=i.real,l=i.imag,u=[c.length],d=r.makeTensorInfo(u,"float32",c),h=r.makeTensorInfo(u,"float32",l),p=Jt({inputs:{real:d,imag:h},backend:r}),f=h0(o),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),v=r.makeTensorInfo(y,"float32",g),x=Jt({inputs:{real:b,imag:v},backend:r}),w=eh(c,l,a,s,r),N=w.real,C=w.imag,$=[N.length],S=r.makeTensorInfo($,"float32",N),T=r.makeTensorInfo($,"float32",C),E=Jt({inputs:{real:S,imag:T},backend:r}),F=eh(m,g,a,s,r),O=F.real,L=F.imag,z=[O.length],M=r.makeTensorInfo(z,"float32",O),K=r.makeTensorInfo(z,"float32",L),U=Jt({inputs:{real:M,imag:K},backend:r}),H=f0(t,s),X=[H.real.length],J=r.makeTensorInfo(X,"float32",H.real),j=r.makeTensorInfo(X,"float32",H.imag),ee=Jt({inputs:{real:J,imag:j},backend:r}),te=Vf({inputs:{a:ee,b:U},backend:r}),ne=wi({inputs:{a:E,b:te},backend:r}),re=Gf({inputs:{a:E,b:te},backend:r}),ie=fr({inputs:{input:ne},backend:r}),he=fr({inputs:{input:re},backend:r}),ue=Jr({inputs:{input:ne},backend:r}),ye=Jr({inputs:{input:re},backend:r}),$e=Zr({inputs:[ie,he],backend:r,attrs:{axis:0}}),Oe=Zr({inputs:[ue,ye],backend:r,attrs:{axis:0}}),Je=r.data.get($e.dataId).values,ze=r.data.get(Oe.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(ye),r.disposeIntermediateTensorInfo($e),r.disposeIntermediateTensorInfo(Oe),{real:Je,imag:ze}}function j3(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,a=0;for(let i=0;i<e;i++){const c=m0(r*i,e,t),l=df(n,i);o+=l.real*c.real-l.imag*c.imag,a+=l.real*c.imag+l.imag*c.real}t&&(o/=e,a/=e),p0(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n){const{inputs:e,backend:t}=n,{input:s}=e,r=q(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=nt({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),c=mv(i,!1,t),l=nt({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),l}const q3={kernelName:Dh,backendName:"cpu",kernelFunc:H3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kf(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,a=o||ta(r),i=so(a,q(s));return X3(i,r,a),e.makeTensorInfo(s,a,i)}const K3={kernelName:Eh,backendName:"cpu",kernelFunc:Kf};function X3(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y3={kernelName:Ah,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=Ft(s.dtype,q(s.shape)),[a,i,c,l]=s.shape,u=r.data.get(s.dataId).values;for(let h=0;h<a;h++){const p=h*c*i*l;for(let f=0;f<i;f++){const m=f*(c*l);for(let g=0;g<c;g++){const y=g*l;for(let b=0;b<l;b++){const x=[a,f,g,b][2],w=Math.round(c-x),N=p+m+y+b;let C=u[N];if(w>=0&&w<c){const $=w*l,S=p+m+$+b;C=u[S]}o[N]=C}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J3=mt((n,e)=>Math.floor(n/e)),Z3=Dt(va,J3,null,"int32"),Q3={kernelName:va,backendName:"cpu",kernelFunc:Z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=hv({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(a){const g=m;m=wi({inputs:{a:m,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=jf(t,m,p,i,f),t.disposeIntermediateTensorInfo(g)}return m}const tz={kernelName:dc,backendName:"cpu",kernelFunc:ez};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=pv({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(a){const g=m;m=wi({inputs:{a:m,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=jf(t,m,p,i,f),t.disposeIntermediateTensorInfo(g)}return m}const sz={kernelName:hc,backendName:"cpu",kernelFunc:nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=q(s.shape),a=r.shape,i=a[a.length-1],[c,l,u,d]=cp(s,r);if(l===0)return t.makeTensorInfo(c,s.dtype,[]);const h=Te([l,u],s.dtype),p=t.data.get(r.dataId).values,f=t.data.get(s.dataId).values;for(let m=0;m<l;m++){const g=[];let y=0;for(let b=0;b<i;b++){const v=p[m*i+b];y+=v*d[b],g.push(v)}if(y<0||y>=o/u)throw new Error(`Invalid indices: ${g} does not index into ${s.shape}`);for(let b=0;b<u;b++)h.values[m*u+b]=f[y*u+b]}return t.makeTensorInfo(c,h.dtype,h.values)}const oz={kernelName:Rh,backendName:"cpu",kernelFunc:rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s;ce([r,o],"gatherV2");let c=i;i==null&&(c=0);const l=q(o.shape),u=Ie(a,r.shape)[0],d=pf(r,o,u,c),h=nt({inputs:{x:r},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),p=nt({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,l/d.batchSize]}}),f=[d.batchSize,d.outerSize,l/d.batchSize,d.sliceSize],m=t.bufferSync(p),g=t.bufferSync(h),y=M1(g,m,f);return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.makeTensorInfo(d.outputShape,y.dtype,y.values)}const iz={kernelName:ll,backendName:"cpu",kernelFunc:az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cz=mt((n,e)=>n>=e?1:0),lz=Dt(ka,cz,null,"bool"),uz={kernelName:ka,backendName:"cpu",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(n){const{inputs:e,backend:t}=n,{input:s}=e,r=q(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=nt({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),c=mv(i,!0,t),l=nt({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),l}const hz={kernelName:Oh,backendName:"cpu",kernelFunc:dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pz=Me(Na,n=>Number.isFinite(n)?1:0,"bool"),fz={kernelName:Na,backendName:"cpu",kernelFunc:pz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz=Me($a,n=>Math.abs(n)===1/0?1:0,"bool"),gz={kernelName:$a,backendName:"cpu",kernelFunc:mz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yz=Me(Ia,n=>Number.isNaN(n)?1:0,"bool"),bz={kernelName:Ia,backendName:"cpu",kernelFunc:yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xz=mt((n,e)=>n<=e?1:0),wz=Dt(pl,xz,null,"bool"),vz={kernelName:pl,backendName:"cpu",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=W1(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const Cz={kernelName:_h,backendName:"cpu",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz=Me(Ta,n=>Math.log1p(n)),$z={kernelName:Ta,backendName:"cpu",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz=mt((n,e)=>n&&e),Sz=Dt(fl,Iz,null,"bool"),Tz={kernelName:fl,backendName:"cpu",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dz=Me(ml,n=>n?0:1,"bool"),Ez={kernelName:ml,backendName:"cpu",kernelFunc:Dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=mt((n,e)=>n||e),Rz=Dt(gl,Az,null,"bool"),Oz={kernelName:gl,backendName:"cpu",kernelFunc:Rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:c}=s;ce(r,"LRN");const l=r.shape[3],u=l-1,d=t.data.get(r.dataId).values,h=q(r.shape),p=new Float32Array(h);function f(m){const g=m%l;let y=m-g+Math.max(0,g-o);const b=m-g+Math.min(g+o,u);let v=0;for(;y<=b;y++){const x=d[y];v+=x*x}return v}for(let m=0;m<h;m++){const g=f(m),y=d[m]*Math.pow(a+i*g,-c);p[m]=y}return t.makeTensorInfo(r.shape,r.dtype,p)}const _z={kernelName:yl,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=s;ce(a,"LRNGrad");const d=q(a.shape),h=a.shape[3],p=t.data.get(a.dataId).values,f=t.data.get(r.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){const v=b%h,x=b-v+Math.max(0,v-i),w=b-v+Math.min(h,v+i+1);let N=0;for(let C=x;C<w;C++)N+=Math.pow(f[C],2);N=l*N+c;for(let C=x;C<w;C++){let $=-2*l*u*f[C]*m[b]/N;b===C&&($+=Math.pow(N,-u)),$*=p[b],g[C]+=$}}return t.makeTensorInfo(a.shape,r.dtype,g)}const Lz={kernelName:Ph,backendName:"cpu",kernelFunc:Pz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gv(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=t;let c=r.shape;const l=c.length,u=Ie(o,c);let d=u;const h=ut(d,l);let p=i.data.get(r.dataId).values;if(h!=null){const x=new Array(l);for(let w=0;w<x.length;w++)x[w]=c[h[w]];p=Uf(p,c,r.dtype,h,x),d=ft(d.length,l),c=x}ce(r,"max"),Pt("max",d,l);const[f,m]=Tt(c,d),g=q(m),y=U1(p,g,f,r.dtype),b=i.write(y,f,r.dtype);let v=f;return a&&(v=pt(f,u)),{dataId:b,shape:v,dtype:r.dtype}}const Mz={kernelName:bl,backendName:"cpu",kernelFunc:gv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ce(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;I(_t(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=In(r.shape,o,a,l,i,c);let d;if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))d=ns({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=fe(r.shape),f=Hf(h,r.shape,r.dtype,p,u,"max");d=t.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}const Bz={kernelName:xl,backendName:"cpu",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:l}=s;ce(r,"maxPool3d");const u=bs(r.shape,o,a,1,i,c,l),d=t.data.get(r.dataId).values,h=dv(d,r.shape,r.dtype,fe(r.shape),u,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const Vz={kernelName:wl,backendName:"cpu",kernelFunc:Wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:l}=s;ce([r,o],"maxPool3DGrad");const u=bs(o.shape,a,i,1,c,l),d=t.bufferSync(o),h=DM(d,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,v=u.effectiveFilterDepth,x=u.effectiveFilterHeight,w=u.effectiveFilterWidth,N=v-1-u.padInfo.front,C=w-1-u.padInfo.left,$=x-1-u.padInfo.top,S=Te(o.shape,"float32"),T=t.bufferSync(r);for(let E=0;E<u.batchSize;++E)for(let F=0;F<u.inChannels;++F)for(let O=0;O<u.inDepth;++O)for(let L=0;L<u.inHeight;++L)for(let z=0;z<u.inWidth;++z){const M=O-N,K=L-$,U=z-C;let H=0;for(let X=0;X<v;X+=g){const J=(M+X)/p;if(!(J<0||J>=u.outDepth||Math.floor(J)!==J))for(let j=0;j<x;j+=y){const ee=(K+j)/f;if(!(ee<0||ee>=u.outHeight||Math.floor(ee)!==ee))for(let te=0;te<w;te+=b){const ne=(U+te)/m;if(ne<0||ne>=u.outWidth||Math.floor(ne)!==ne)continue;const re=v*x*w-1-h.get(E,J,ee,ne,F),ie=X*x*w+j*w+te,he=re===ie?1:0;if(he===0)continue;const ue=T.get(E,J,ee,ne,F);H+=ue*he}}}S.set(H,E,O,L,z,F)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const Gz={kernelName:Mh,backendName:"cpu",kernelFunc:Uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,i=o;ce([o,a],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=s,h=In(i.shape,c,l,1,u,d),p=t.data.get(i.dataId).values,f=Te(h.outShape,i.dtype,uv(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,v=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,N=v-1-h.padInfo.top,C=Te(i.shape,"float32"),$=t.data.get(r.dataId).values,S=Te(r.shape,"float32",$);for(let T=0;T<h.batchSize;++T)for(let E=0;E<h.inChannels;++E)for(let F=0;F<h.inHeight;++F)for(let O=0;O<h.inWidth;++O){const L=F-N,z=O-w;let M=0;for(let K=0;K<v;K+=y){const U=(L+K)/m;if(!(U<0||U>=h.outHeight||Math.floor(U)!==U))for(let H=0;H<x;H+=b){const X=(z+H)/g;if(X<0||X>=h.outWidth||Math.floor(X)!==X)continue;const J=v*x-1-f.get(T,U,X,E),j=K*x+H,ee=J===j?1:0;if(ee===0)continue;const te=S.get(T,U,X,E);M+=te*ee}}C.set(M,T,F,O,E)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const Hz={kernelName:Lh,backendName:"cpu",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n,e,t,s,r){const o=fe(e),a=Hf(n,e,t,o,r,"max"),i=uv(n,e,t,r,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kz={kernelName:zh,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,c=t;ce(s,"MaxPoolWithArgmax");const l=c.data.get(s.dataId).values,u=In(s.shape,r,o,[1,1],a),[d,h]=qz(l,s.shape,s.dtype,i,u),p=c.write(d,u.outShape,s.dtype),f=c.write(h,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cu(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ce(r,"sum");let i;r.dtype==="bool"?i=Ms({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):i=ns({inputs:{x:r},backend:t});const c=i.shape.length,l=Ie(o,i.shape),u=ut(l,c);let d=l,h=i;u!=null&&(h=$n({inputs:{x:i},backend:t,attrs:{perm:u}}),d=ft(d.length,c)),Pt("sum",d,h.shape.length);const[p,f]=Tt(h.shape,d),m=ln(h.dtype,"int32");let g=Rc(t,p,m);const y=q(f),b=t.data.get(g.dataId).values,v=t.data.get(h.dataId).values;for(let x=0;x<b.length;++x){const w=x*y;let N=0;for(let C=0;C<y;++C)N+=v[w+C];b[x]=N}if(a){const x=pt(g.shape,l),w=g;g=nt({inputs:{x:g},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo(w)}return t.disposeIntermediateTensorInfo(i),u!=null&&t.disposeIntermediateTensorInfo(h),g}const Xz={kernelName:Ll,backendName:"cpu",kernelFunc:Cu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=Ie(o,r.shape),l=Tt(r.shape,i)[1],u=q(l),d=[],h=t.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);const p=Ms({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});d.push(p);const f=qf({inputs:{a:p,b:h},backend:t});d.push(f);const m=Cu({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:a}});return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const Jz={kernelName:vl,backendName:"cpu",kernelFunc:Yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;ce(r,"min");const i=Ie(o,r.shape);let c=i;const l=ut(c,r.shape.length);let u=r;l!=null&&(u=$n({inputs:{x:r},backend:t,attrs:{perm:l}}),c=ft(c.length,r.shape.length)),Pt("min",c,u.shape.length);const[d,h]=Tt(u.shape,c),p=q(h),f=Mt(q(d),u.dtype),m=t.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let v=m[b];for(let x=0;x<p;++x){const w=m[b+x];w<v&&(v=w)}f[y]=v}l!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(d,u.dtype,f);if(a){const y=pt(d,i),b=nt({inputs:{x:g},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),b}return g}const Qz={kernelName:kl,backendName:"cpu",kernelFunc:Zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:a}=s;ce(r,"mirrorPad");const i=o.map((v,x)=>v[0]+r.shape[x]+v[1]),c=o.map(v=>v[0]),l=o.map((v,x)=>v[0]+r.shape[x]),u=a==="reflect"?0:1,d=t.data.get(r.dataId).values,h=r.shape.length,p=fe(r.shape),f=q(i),m=i.length,g=fe(i),y=Ft(r.dtype,f);for(let v=0;v<f;v++){let x=na(v,m,g);for(let N=0;N<m;N++)x[N]<c[N]?x[N]=c[N]*2-x[N]-u:x[N]>=l[N]&&(x[N]=(l[N]-1)*2-x[N]+u);x=x.map((N,C)=>N-c[C]);const w=Zn(x,h,p);y[v]=d[w]}return{dataId:t.write(y,i,r.dtype),shape:i,dtype:r.dtype}}const tB={kernelName:Cl,backendName:"cpu",kernelFunc:eB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nB=mt(((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e})),sB=Dt(Aa,nB),rB={kernelName:Aa,backendName:"cpu",kernelFunc:sB};var nc={exports:{}},oB=nc.exports,zg;function aB(){return zg||(zg=1,(function(n){(function(e,t,s){function r(c){var l=this,u=i();l.next=function(){var d=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=d-(l.c=d|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(c),l.s0<0&&(l.s0+=1),l.s1-=u(c),l.s1<0&&(l.s1+=1),l.s2-=u(c),l.s2<0&&(l.s2+=1),u=null}function o(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function a(c,l){var u=new r(c),d=l&&l.state,h=u.next;return h.int32=function(){return u.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,u),h.state=function(){return o(u,{})}),h}function i(){var c=4022871197,l=function(u){u=u.toString();for(var d=0;d<u.length;d++){c+=u.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=a:this.alea=a})(oB,n)})(nc)),nc.exports}var sc={exports:{}},iB=sc.exports,Bg;function cB(){return Bg||(Bg=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xor128=a})(iB,n)})(sc)),sc.exports}var rc={exports:{}},lB=rc.exports,Wg;function uB(){return Wg||(Wg=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,i===(i|0)?c.x=i:l+=i;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,u==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c.v=i.v,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xorwow=a})(lB,n)})(rc)),rc.exports}var oc={exports:{}},dB=oc.exports,Vg;function hB(){return Vg||(Vg=1,(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.x,d=c.i,h,p;return h=u[d],h^=h>>>7,p=h^h<<24,h=u[d+1&7],p^=h^h>>>10,h=u[d+3&7],p^=h^h>>>3,h=u[d+4&7],p^=h^h<<7,h=u[d+7&7],h=h^h<<13,p^=h^h<<9,u[d]=p,c.i=d+1&7,p};function l(u,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],u.x=p,u.i=0,h=256;h>0;--h)u.next()}l(c,i)}function o(i,c){return c.x=i.x.slice(),c.i=i.i,c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(u.x&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xorshift7=a})(dB,n)})(oc)),oc.exports}var ac={exports:{}},pB=ac.exports,Ug;function fB(){return Ug||(Ug=1,(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var u=c.w,d=c.X,h=c.i,p,f;return c.w=u=u+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,c.i=h,f+(u^u>>>16)|0};function l(u,d){var h,p,f,m,g,y=[],b=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,b=Math.max(b,d.length)),f=0,m=-32;m<b;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=y[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(y[(d&&d.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],h=y[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,y[f]=p^h;u.w=g,u.X=y,u.i=f}l(c,i)}function o(i,c){return c.i=i.i,c.w=i.w,c.X=i.X.slice(),c}function a(i,c){i==null&&(i=+new Date);var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(u.X&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.xor4096=a})(pB,n)})(ac)),ac.exports}var ic={exports:{}},mB=ic.exports,Gg;function gB(){return Gg||(Gg=1,(function(n){(function(e,t,s){function r(i){var c=this,l="";c.next=function(){var d=c.b,h=c.c,p=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-p|0,c.d=p<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,i===Math.floor(i)?(c.a=i/4294967296|0,c.b=i|0):l+=i;for(var u=0;u<l.length+20;u++)c.b^=l.charCodeAt(u)|0,c.next()}function o(i,c){return c.a=i.a,c.b=i.b,c.c=i.c,c.d=i.d,c}function a(i,c){var l=new r(i),u=c&&c.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,u&&(typeof u=="object"&&o(u,l),d.state=function(){return o(l,{})}),d}t&&t.exports?t.exports=a:this.tychei=a})(mB,n)})(ic)),ic.exports}var ed={exports:{}},jg;function yB(){return jg||(jg=1,(function(n){(function(e,t){var s=this,r=256,o=6,a=52,i="random",c=t.pow(r,o),l=t.pow(2,a),u=l*2,d=r-1,h;function p(x,w,N){var C=[];w=w==!0?{entropy:!0}:w||{};var $=y(g(w.entropy?[x,v(e)]:x??b(),3),C),S=new f(C),T=function(){for(var E=S.g(o),F=c,O=0;E<l;)E=(E+O)*r,F*=r,O=S.g(1);for(;E>=u;)E/=2,F/=2,O>>>=1;return(E+O)/F};return T.int32=function(){return S.g(4)|0},T.quick=function(){return S.g(4)/4294967296},T.double=T,y(v(S.S),e),(w.pass||N||function(E,F,O,L){return L&&(L.S&&m(L,S),E.state=function(){return m(S,{})}),O?(t[i]=E,F):E})(T,$,"global"in w?w.global:this==t,w.state)}t["seed"+i]=p;function f(x){var w,N=x.length,C=this,$=0,S=C.i=C.j=0,T=C.S=[];for(N||(x=[N++]);$<r;)T[$]=$++;for($=0;$<r;$++)T[$]=T[S=d&S+x[$%N]+(w=T[$])],T[S]=w;(C.g=function(E){for(var F,O=0,L=C.i,z=C.j,M=C.S;E--;)F=M[L=d&L+1],O=O*r+M[d&(M[L]=M[z=d&z+F])+(M[z]=F)];return C.i=L,C.j=z,O})(r)}function m(x,w){return w.i=x.i,w.j=x.j,w.S=x.S.slice(),w}function g(x,w){var N=[],C=typeof x,$;if(w&&C=="object")for($ in x)try{N.push(g(x[$],w-1))}catch{}return N.length?N:C=="string"?x:x+"\0"}function y(x,w){for(var N=x+"",C,$=0;$<N.length;)w[d&$]=d&(C^=w[d&$]*19)+N.charCodeAt($++);return v(w)}function b(){try{var x;return h&&(x=h.randomBytes)?x=x(r):(x=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(x)),v(x)}catch{var w=s.navigator,N=w&&w.plugins;return[+new Date,s,N,s.screen,v(e)]}}function v(x){return String.fromCharCode.apply(0,x)}if(y(t.random(),e),n.exports){n.exports=p;try{h=Ep}catch{}}})([],Math)})(ed)),ed.exports}var td,Hg;function bB(){if(Hg)return td;Hg=1;var n=aB(),e=cB(),t=uB(),s=hB(),r=fB(),o=gB(),a=yB();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=s,a.xor4096=r,a.tychei=o,td=a,td}var xB=bB();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yv(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=r.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const c=Ie([i],r.shape),l=gv({inputs:{x:r},backend:t,attrs:{reductionIndices:c,keepDims:!1}}),u=pt(l.shape,c),d=nt({inputs:{x:l},backend:t,attrs:{shape:u}}),h=Gf({inputs:{a:r,b:d},backend:t}),p=_1({inputs:{x:h},backend:t}),f=Cu({inputs:{x:p},backend:t,attrs:{axis:c,keepDims:!1}}),m=nt({inputs:{x:f},backend:t,attrs:{shape:u}}),g=qf({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const wB={kernelName:Bl,backendName:"cpu",kernelFunc:yv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s;ce(r,"multinomial");const c=i?r:yv({inputs:{logits:r},backend:t,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],d=t.data.get(c.dataId).values,h=[l,o],p=Mt(q(h),"int32");for(let f=0;f<l;++f){const m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let v=1;v<g.length;++v)g[v]=g[v-1]+d[m+v];const y=xB.alea(a.toString()),b=f*o;for(let v=0;v<o;++v){const x=y();p[b+v]=g.length;for(let w=0;w<g.length;w++)if(x<g[w]){p[b+v]=w;break}}}return i||t.disposeIntermediateTensorInfo(c),t.makeTensorInfo(h,"int32",p)}const kB={kernelName:Bh,backendName:"cpu",kernelFunc:vB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CB=Up;function NB(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s;ce(r,"NonMaxSuppression");const l=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,{selectedIndices:d}=CB(l,u,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const $B={kernelName:Wh,backendName:"cpu",kernelFunc:NB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IB=Gp;function SB(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=s;ce(r,"NonMaxSuppressionPadded");const u=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=IB(u,d,a,i,c,l);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const TB={kernelName:Vh,backendName:"cpu",kernelFunc:SB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DB=jp;function EB(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=s;ce(r,"NonMaxSuppressionWithScore");const u=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,h=a,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=DB(u,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const AB={kernelName:Uh,backendName:"cpu",kernelFunc:EB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{depth:o,onValue:a,offValue:i}=s;ce(r,"oneHot");const c=q(r.shape),l=new Float32Array(c*o);l.fill(i);const u=t.data.get(r.dataId).values;for(let d=0;d<c;++d)u[d]>=0&&u[d]<o&&(l[d*o+u[d]]=a);return t.makeTensorInfo([...r.shape,o],"int32",l)}const OB={kernelName:Sl,backendName:"cpu",kernelFunc:RB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fc(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=fr({inputs:{input:s},backend:t}),o=Fc({inputs:{x:r},backend:t}),a=Jr({inputs:{input:s},backend:t}),i=Fc({inputs:{x:a},backend:t}),c=Jt({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Kf({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const FB={kernelName:Gl,backendName:"cpu",kernelFunc:Fc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bv(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=fr({inputs:{input:s},backend:t}),o=bv({inputs:{x:r},backend:t}),a=Jr({inputs:{input:s},backend:t}),i=Fc({inputs:{x:a},backend:t}),c=Jt({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Kf({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const _B={kernelName:Il,backendName:"cpu",kernelFunc:bv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Oc({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(u=>{Uc(o,u.shape,"All tensors passed to stack must have matching shapes"),I(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(u=>{const d=Oc({inputs:{input:u},backend:t,attrs:{dim:r}});return i.push(d),d}),l=Zr({inputs:c,backend:t,attrs:{axis:r}});return i.forEach(u=>t.disposeIntermediateTensorInfo(u)),l}const PB={kernelName:Tl,backendName:"cpu",kernelFunc:xv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s;ce(r,"pad");const i=o.map((b,v)=>b[0]+r.shape[v]+b[1]),c=o.map(b=>b[0]),l=t.data.get(r.dataId).values,u=q(r.shape),d=r.shape.length,h=fe(r.shape),p=q(i),f=i.length,m=fe(i),g=Ft(r.dtype,p);a!==0&&g.fill(a);for(let b=0;b<u;b++){const x=na(b,d,h).map((N,C)=>N+c[C]),w=Zn(x,f,m);g[w]=l[b]}return{dataId:t.write(g,i,r.dtype),shape:i,dtype:r.dtype}}const wv={kernelName:Dl,backendName:"cpu",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MB=mt((n,e)=>Math.pow(n,e)),zB=Dt(Oa,MB),BB={kernelName:Oa,backendName:"cpu",kernelFunc:zB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:a}=t,i=X1(s,r,a,o);return e.makeTensorInfo([i.length],o,i)}const VB={kernelName:jh,backendName:"cpu",kernelFunc:WB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UB=Me(Fa,n=>1/n),GB={kernelName:Fa,backendName:"cpu",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;ce(r,"resizeBilinear");const c=fe(r.shape),[l,u]=i,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(q([d,l,u,f])),y=[o&&l>1?h-1:h,o&&u>1?p-1:p],b=[o&&l>1?l-1:l,o&&u>1?u-1:u];let v=0;const x=y[0]/b[0],w=y[1]/b[1];for(let N=0;N<d;N++)for(let C=0;C<l;C++){let $;a?$=x*(C+.5)-.5:$=x*C;const S=Math.max(0,Math.floor($)),T=$-S,E=Math.min(h-1,Math.ceil($)),F=N*c[0]+S*c[1],O=N*c[0]+E*c[1];for(let L=0;L<u;L++){let z;a?z=w*(L+.5)-.5:z=w*L;const M=Math.max(0,Math.floor(z)),K=z-M,U=Math.min(p-1,Math.ceil(z)),H=F+M*c[2],X=O+M*c[2],J=F+U*c[2],j=O+U*c[2];for(let ee=0;ee<f;ee++){const te=m[H+ee],ne=m[X+ee],re=m[J+ee],ie=m[j+ee],he=te+(re-te)*K,ue=ne+(ie-ne)*K,ye=he+(ue-he)*T;g[v++]=ye}}}return t.makeTensorInfo([d,l,u,f],"float32",g)}const HB={kernelName:Ol,backendName:"cpu",kernelFunc:jB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;ce([o,r],"resizeBilinearGrad");const i=fe(r.shape),[c,l,u,d]=r.shape,[,h,p]=o.shape,f=new Float32Array(c*l*u*d),m=[a&&h>1?l-1:l,a&&p>1?u-1:u],g=[a&&h>1?h-1:h,a&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],v=t.data.get(o.dataId).values;let x=0;for(let w=0;w<c;w++){const N=w*i[0];for(let C=0;C<h;C++){const $=C*y,S=Math.floor($),T=Math.min(Math.ceil($),l-1),E=N+S*i[1],F=N+T*i[1],O=$-S,L=1-O;for(let z=0;z<p;z++){const M=z*b,K=Math.floor(M),U=Math.min(Math.ceil(M),u-1),H=M-K,X=1-H,J=E+K*i[2],j=E+U*i[2],ee=F+K*i[2],te=F+U*i[2],ne=L*X,re=L*H,ie=O*X,he=O*H;for(let ue=0;ue<d;ue++){const ye=v[x++];f[J+ue]+=ye*ne,f[j+ue]+=ye*re,f[ee+ue]+=ye*ie,f[te+ue]+=ye*he}}}}return t.makeTensorInfo([c,u,l,d],"float32",f)}const KB={kernelName:Kh,backendName:"cpu",kernelFunc:qB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;ce(r,"resizeNearestNeighbor");const c=fe(r.shape),[l,u]=i,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(d*l*u*f),y=[o&&l>1?h-1:h,o&&u>1?p-1:p],b=[o&&l>1?l-1:l,o&&u>1?u-1:u],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let N=0;N<d;N++){const C=N*c[0];for(let $=0;$<l;$++){const S=a?v*($+.5):v*$;let T=Math.min(h-1,o?Math.round(S):Math.floor(S));a&&(T=Math.max(0,T));const E=C+T*c[1];for(let F=0;F<u;F++){const O=a?x*(F+.5):x*F;let L=Math.min(p-1,o?Math.round(O):Math.floor(O));a&&(L=Math.max(0,L));const z=E+L*c[2];for(let M=0;M<f;M++){const K=m[z+M];g[w++]=K}}}}return t.makeTensorInfo([d,l,u,f],r.dtype,g)}const YB={kernelName:Rl,backendName:"cpu",kernelFunc:XB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;ce([o,r],"resizeNearestNeighborGrad");const i=fe(r.shape),c=fe(o.shape),[l,u,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(l*u*d*h),g=t.data.get(o.dataId).values,y=[a&&p>1?u-1:u,a&&f>1?d-1:d],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,N=1/x,C=Math.ceil(w)*2+2,$=Math.ceil(N)*2+2;for(let S=0;S<l;S++){const T=S*i[0];for(let E=0;E<u;E++){const F=T+E*i[1],O=Math.floor(E*w),L=Math.floor(O-C/2);for(let z=0;z<d;z++){const M=F+z*i[2],K=Math.floor(z*N),U=Math.floor(K-$/2);for(let H=0;H<h;H++){let X=0;for(let J=0;J<C;J++){const j=J+L;if(j<0||j>=p)continue;const ee=T+j*c[1],te=j*v,ne=Math.min(u-1,a?Math.round(te):Math.floor(te));if(E===ne)for(let re=0;re<$;re++){const ie=re+U;if(ie<0||ie>=f)continue;const he=ee+ie*c[2],ue=ie*x,ye=Math.min(d-1,a?Math.round(ue):Math.floor(ue));z===ye&&(X+=g[he+H])}}m[M+H]=X}}}}return t.makeTensorInfo(r.shape,r.dtype,m)}const ZB={kernelName:qh,backendName:"cpu",kernelFunc:JB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;ce(r,"reverse");const a=r.shape.length,i=Ie(o,r.shape);if(a===0)return ns({inputs:{x:r},backend:t});const c=new $t(r.shape,r.dtype),l=t.bufferSync(r);for(let u=0;u<c.size;u++){const d=c.indexToLoc(u),h=d.slice();i.forEach(p=>h[p]=r.shape[p]-1-h[p]),c.set(l.get(...h),...d)}return t.makeTensorInfo(c.shape,c.dtype,c.values)}const eW={kernelName:Fl,backendName:"cpu",kernelFunc:QB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW={kernelName:np,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,i=t,c=Ft(s.dtype,q(s.shape)),[l,u,d,h]=s.shape,[p,f]=tf(a,u,d),m=255,g=Math.sin(r),y=Math.cos(r),b=i.data.get(s.dataId).values;for(let x=0;x<l;x++){const w=x*d*u*h;for(let N=0;N<u;N++){const C=N*(d*h);for(let $=0;$<d;$++){const S=$*h;for(let T=0;T<h;T++){const E=[l,N,$,T],F=E[2],O=E[1];let L=(F-p)*y-(O-f)*g,z=(F-p)*g+(O-f)*y;L=Math.round(L+p),z=Math.round(z+f);let M=o;if(typeof o!="number"&&(T===3?M=m:M=o[T]),L>=0&&L<d&&z>=0&&z<u){const U=z*(d*h),H=L*h,X=w+U+H+T;M=b[X]}const K=w+C+S+T;c[K]=M}}}}return{dataId:i.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=Me(La,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),sW={kernelName:La,backendName:"cpu",kernelFunc:nW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n,e,t,s,r,o,a,i,c,l){const u=[s/r,r],d=n.values,h=e.values;if(s===0)return Te(t,e.dtype);const p=Te(u,e.dtype);p.values.fill(c);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<a;y++){const b=d[f*a+y];m.push(b),g+=b*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let y=0;y<r;y++)l?p.values[g*r+y]+=h[f*r+y]:p.values[g*r+y]=e.rank===0?h[0]:h[f*r+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=ti(o,r,a),h=!0,p=t.bufferSync(r),f=t.bufferSync(o),m=vv(p,f,a,d,l,c,i,u,0,h);return t.makeTensorInfo(a,m.dtype,m.values)}const oW={kernelName:Xh,backendName:"cpu",kernelFunc:rW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;ce([s,r,o],"select");const a=s.shape.length,i=t.data.get(s.dataId).values,c=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,u=ln(r.dtype,o.dtype),d=Mt(q(r.shape),u);let h=0;const p=a===0||a>1||r.shape.length===1?1:q(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=c[f]:d[h++]=l[f];return t.makeTensorInfo(r.shape,u,d)}const iW={kernelName:_l,backendName:"cpu",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW=lu,lW=uu,uW=Me(za,n=>n>=0?lW*n:cW*(Math.exp(n)-1)),dW={kernelName:za,backendName:"cpu",kernelFunc:uW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=Me(Ua,n=>1/(1+Math.exp(-n))),pW={kernelName:Ua,backendName:"cpu",kernelFunc:hW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW=Me(Va,n=>n<0?-1:n>0?1:0),mW={kernelName:Va,backendName:"cpu",kernelFunc:fW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW=Me(Ba,n=>Math.sin(n)),yW={kernelName:Ba,backendName:"cpu",kernelFunc:gW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW=Me(Wa,n=>Math.sinh(n)),xW={kernelName:Wa,backendName:"cpu",kernelFunc:bW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW=11920928955078125e-23,qg=Math.log(wW)+2,vW=Me(Ga,n=>{const e=n>-qg,t=n<qg,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),kW={kernelName:Ga,backendName:"cpu",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;ce([r],"spaceToBatchND");const i=q(o),c=[[0,0]];c.push(...a);for(let N=1+o.length;N<r.shape.length;++N)c.push([0,0]);const l=wv.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),u=li(l.shape,o,i,!1),d=ui(u.length,o.length,!1),h=di(l.shape,o,i,!1),m=nt({inputs:{x:l},backend:t,attrs:{shape:u}}),b=$n({inputs:{x:m},backend:t,attrs:{perm:d}}),w=nt({inputs:{x:b},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(b),w}const NW={kernelName:Ml,backendName:"cpu",kernelFunc:CW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=ti(o,r,i),p=!1,f=t.bufferSync(r),m=t.bufferSync(o),g=t.data.get(a.dataId).values[0],y=vv(f,m,i,h,u,l,c,d,g,p);return t.makeTensorInfo(i,y.dtype,y.values)}const IW={kernelName:Jh,backendName:"cpu",kernelFunc:$W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Ie(a,r.shape)[0],c=hf(r,o,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map(d=>{const h=[...u];h[i]=d;const p=mr({inputs:{x:r},backend:t,attrs:{begin:l,size:h}});return l[i]+=d,p})}const TW={kernelName:zl,backendName:"cpu",kernelFunc:SW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DW=Me(ja,n=>Math.sqrt(n)),EW={kernelName:ja,backendName:"cpu",kernelFunc:DW};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AW={kernelName:Yh,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;ce(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const c=r[i];o[i]=c*c}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=Me(Ja,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),OW={kernelName:Ja,backendName:"cpu",kernelFunc:RW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s;ce(r,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=hp(r.shape,o,a,i,c,l,u,d,h),v=nt({inputs:{x:r},backend:t,attrs:{shape:y}});let x;if(p){const N=mr({inputs:{x:v},backend:t,attrs:{begin:f,size:g}});x=nt({inputs:{x:N},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(N)}else if(b.some(N=>N===0))x=t.makeTensorInfo(b,r.dtype,[]);else{const N=t.bufferSync(v),C=Q1(b,N,m,f);x=t.makeTensorInfo(C.shape,C.dtype,C.values)}const w=nt({inputs:{x},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(x),w}const _W={kernelName:Zh,backendName:"cpu",kernelFunc:FW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW=Me(Ka,n=>Math.tan(n)),LW={kernelName:Ka,backendName:"cpu",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW=Me(Xa,n=>Math.tanh(n)),zW={kernelName:Xa,backendName:"cpu",kernelFunc:MW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;ce(r,"tile");const a=tv(t.bufferSync(r),o);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const WW={kernelName:Ya,backendName:"cpu",kernelFunc:BW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s;ce(r,"topk");const i=t.data.get(r.dataId).values,[c,l]=nv(i,r.shape,r.dtype,o);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const UW={kernelName:Qh,backendName:"cpu",kernelFunc:VW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:l}=t,[u,d,h,p]=r.shape,[f,m]=l??[d,h],g=[u,f,m,p],y=fe(r.shape),b=y[0],v=y[1],x=y[2],w=Ft(r.dtype,q(g));w.fill(c);const N=s.data.get(r.dataId).values,C=s.data.get(o.dataId).values;for(let S=0;S<u;++S){const T=o.shape[0]===1?C:C.subarray(S*8,S*8+8);for(let E=0;E<f;++E)for(let F=0;F<m;++F)for(let O=0;O<p;++O){let L;const z=T[6]*F+T[7]*E+1;if(z===0)continue;const M=(T[0]*F+T[1]*E+T[2])/z,K=(T[3]*F+T[4]*E+T[5])/z,U=Kg(M,h,i),H=Kg(K,d,i);switch(a){case"nearest":L=YW(N,d,h,b,v,x,S,H,U,O,c);break;case"bilinear":L=JW(N,d,h,b,v,x,S,H,U,O,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const X=S*b+E*v+F*x+O;w[X]=L}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}const jW={kernelName:ep,backendName:"cpu",kernelFunc:GW};function Kg(n,e,t){switch(t){case"reflect":return HW(n,e);case"wrap":return qW(n,e);case"nearest":return XW(n,e);case"constant":default:return KW(n)}}function HW(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return cr(0,t,e-1)}function qW(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return cr(0,t,e-1)}function KW(n,e){return n}function XW(n,e){return cr(0,n,e-1)}function Oo(n,e,t,s,r,o,a,i,c,l,u){const d=a*s+i*r+c*o+l;return 0<=i&&i<e&&0<=c&&c<t?n[d]:u}function YW(n,e,t,s,r,o,a,i,c,l,u){const d=Math.round(i),h=Math.round(c);return Oo(n,e,t,s,r,o,a,d,h,l,u)}function JW(n,e,t,s,r,o,a,i,c,l,u){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1,m=(f-c)*Oo(n,e,t,s,r,o,a,d,h,l,u)+(c-h)*Oo(n,e,t,s,r,o,a,d,f,l,u),g=(f-c)*Oo(n,e,t,s,r,o,a,p,h,l,u)+(c-h)*Oo(n,e,t,s,r,o,a,p,f,l,u);return(p-i)*m+(i-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;ce(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:l}=sv(a,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,i),s.makeTensorInfo([l.length],"int32",l)]}const QW={kernelName:tp,backendName:"cpu",kernelFunc:ZW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],c=new Array(a-1);let l=0;for(let p=0;p<a;p++)p!==o&&(c[l++]=r.shape[p]);const u=new Array(a).fill(0),d=r.shape.slice();d[o]=1;const h=new Array(i);for(let p=0;p<h.length;p++){u[o]=p;const f=mr({inputs:{x:r},backend:t,attrs:{begin:u,size:d}});h[p]=nt({inputs:{x:f},backend:t,attrs:{shape:c}}),t.disposeIntermediateTensorInfo(f)}return h}const tV={kernelName:Vl,backendName:"cpu",kernelFunc:eV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s;ce(r,"unsortedSegmentSum");const i=r.shape.length,c=o.shape.length,l=[],u=[],d=i-c;let h=o;for(let f=0;f<d;++f){const m=Oc({inputs:{input:h},backend:t,attrs:{dim:f+1}});h=m,u.push(m)}for(let f=0;f<a;++f){const m=Bs(f,"int32"),g=t.makeTensorInfo([],"int32",m),y=fv({inputs:{a:g,b:h},backend:t}),b=Ms({inputs:{x:y},backend:t,attrs:{dtype:"float32"}}),v=Vf({inputs:{a:b,b:r},backend:t}),x=Cu({inputs:{x:v},backend:t,attrs:{axis:0,keepDims:!1}});l.push(x),u.push(g),u.push(y),u.push(b),u.push(v),u.push(x)}const p=xv({inputs:l,backend:t,attrs:{axis:0}});return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const sV={kernelName:Ul,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rV=[sM,iL,oM,iM,pL,lM,dM,pM,mM,yM,xM,vM,CM,IM,TM,AM,OM,_M,LM,tM,zM,WM,UM,dL,mL,jM,cL,qM,XM,ZM,e3,YM,r3,a3,n3,c3,u3,h3,f3,g3,b3,x3,v3,C3,$3,I3,T3,S3,Qd,KL,E3,R3,B3,gL,W3,bL,q3,K3,Y3,wL,Q3,tz,sz,oz,iz,kL,uz,lL,hz,KM,fz,gz,bz,XL,NL,vz,Cz,IL,$z,Tz,Ez,Oz,_z,Lz,TL,Bz,Vz,Gz,Hz,Kz,Mz,Jz,Qz,EL,tB,rB,kB,RL,FL,$B,TB,AB,PL,OB,_B,PB,wv,BB,JL,zL,VB,uL,GB,ZL,QL,eM,HB,KB,YB,ZB,eW,tW,sW,WL,oW,iW,dW,pW,mW,yW,xW,VL,wB,kW,NW,IW,TW,EW,AW,GL,OW,_W,HL,Xz,LW,zW,WW,UW,LL,jW,QW,tV,sV,FB];for(const n of rV)Vb(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Js={},nd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function oV(n,e){Js[n]=e}function as(n){if(!(n in Js)){const t=iV(n);if(t!==null)Js[n]=t;else return console.log("Could not get context for WebGL version",n),null}const e=Js[n];return e.isContextLost()?(delete Js[n],as(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Js[n])}function aV(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function iV(n){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=aV(n);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Js[n]},!1),n===1?e.getContext("webgl",nd)||e.getContext("experimental-webgl",nd):e.getContext("webgl2",nd)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qo;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(qo||(qo={}));var on;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(on||(on={}));var Et;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Et||(Et={}));function vi(n,e){return[e,n]}function cV(n,e){return n*e}function _o(n){const e=q(n),t=Math.ceil(e/4);return ud(t)}function go(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function lV(n,e){const[t,s]=go(n,e);return t*s*4}function Xf(n,e){const t=n;let s,r,o,a,i,c,l,u,d,h;return Y().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,l=4,u=1,d=t.HALF_FLOAT,h=t.FLOAT):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,l=4,u=4,d=e!=null?e.HALF_FLOAT_OES:null,h=n.FLOAT),c=n.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(n,e){const t=e();return Y().getBool("DEBUG")&&uV(n),t}function uV(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+fV(n,e))}const dV=596e-10,hV=65504;function pV(n){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||dV<Math.abs(n)&&Math.abs(n)<hV)}function fV(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Fi(n,e){return vs(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function mV(n,e){const t=vs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(le(n,()=>n.shaderSource(t,e)),le(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function gV(n,e){const t=vs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(le(n,()=>n.shaderSource(t,e)),le(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw bV(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const yV=/ERROR: [0-9]+:([0-9]+):/g;function bV(n,e){const t=yV.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,a=r.map((d,h)=>Mr((h+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const c=a.slice(0,s-1),l=a.slice(s-1,s),u=a.slice(s);console.log(c.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Mr(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function xV(n){return vs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function wV(n,e){if(le(n,()=>n.linkProgram(e)),n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function sd(n,e){if(le(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function vV(n,e){const t=vs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return le(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),le(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function kV(n,e){const t=vs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return le(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),le(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function CV(n){return vs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function NV(n,e){const t=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function $V(n){return vs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Xg(n,e,t,s,r,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(le(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),le(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,o,a)),le(n,()=>n.enableVertexAttribArray(i)),!0)}function IV(n,e,t){AV(n,t),le(n,()=>n.activeTexture(n.TEXTURE0+t)),le(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function SV(n,e,t){return vs(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function TV(n,e,t){return n.getUniformLocation(e,t)}function DV(n,e,t,s){le(n,()=>IV(n,e,s)),le(n,()=>n.uniform1i(t,s))}function rd(n,e,t){le(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),le(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Yg(n,e){le(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),le(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function _i(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+EV(n,e))}function EV(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function vs(n,e,t){const s=le(n,()=>e());if(s==null)throw new Error(t);return s}function AV(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Qr(n,e=2){return q(n.slice(0,n.length-e))}function eo(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function od(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Qr(n),...eo(n)]),e}function RV(n,e=!1){let t=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,n=n.map((r,o)=>o>=n.length-2?Rb(n[o]):n[o]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=br(n).newShape);let s=q(n);if(n.length<=1&&s<=t)return[1,s];if(n.length===2&&n[0]<=t&&n[1]<=t)return n;if(n.length===3&&n[0]*n[1]<=t&&n[2]<=t)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=t&&n[1]*n[2]<=t)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t)return[n[0],n[1]*n[2]*n[3]];if(e){const r=Qr(n);let o=2,a=2;return n.length&&([o,a]=eo(n)),s=r*(o/2)*(a/2),ud(s).map(i=>i*2)}return ud(s)}function Pi(n){return n%2===0}function _c(n,e){if(n=n.slice(-2),e=e.slice(-2),Le(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],s=e.slice(-1)[0];if(t===s||Pi(t)&&Pi(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Pi(n[0])&&Pi(e[0])}let ad,id;function OV(n){if(ad==null){const e=as(n);ad=e.getParameter(e.MAX_TEXTURE_SIZE)}return ad}function FV(n){if(id==null){const e=as(n);id=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,id)}function _V(n){if(n===0)return 0;let e;const t=as(n);return vn(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:vn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function vn(n,e){return n.getExtension(e)!=null}function Jg(n){try{if(as(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function PV(n){if(n===0)return!1;const e=as(n);if(n===1){if(!vn(e,"OES_texture_float"))return!1}else if(!vn(e,"EXT_color_buffer_float"))return!1;return th(e)}function LV(n){if(n===0)return!1;const e=as(n);if(n===1){if(!vn(e,"OES_texture_float")||!vn(e,"WEBGL_color_buffer_float"))return!1}else{if(vn(e,"EXT_color_buffer_float"))return th(e);const s="EXT_color_buffer_half_float";if(vn(e,s)){const r=e.getExtension(s);return MV(e,r)}return!1}return th(e)}function th(n){const e=Xf(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function MV(n,e){const t=Xf(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}function zV(n){return n!==2?!1:as(n).fenceSync!=null}function ki(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&I(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const me=Y();me.registerFlag("HAS_WEBGL",()=>me.getNumber("WEBGL_VERSION")>0);me.registerFlag("WEBGL_VERSION",()=>Jg(2)?2:Jg(1)?1:0);me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);me.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>me.get("WEBGL_VERSION")===2);me.registerFlag("WEBGL_CPU_FORWARD",()=>!0);me.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);me.registerFlag("WEBGL_PACK",()=>me.getBool("HAS_WEBGL"));me.registerFlag("WEBGL_PACK_NORMALIZATION",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_CLIP",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_REDUCE",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_LAZILY_UNPACK",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_CONV_IM2COL",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>OV(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>FV(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=me.getNumber("WEBGL_VERSION");return n===0?0:_V(n)});me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Kb());me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>PV(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>me.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>LV(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_FENCE_API_ENABLED",()=>zV(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});me.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Kb()&&me.getBool("IS_CHROME")?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(){let n,e,t,s,r,o,a,i,c,l;return Y().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,c="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $r(n,e,t="index"){const s=fe(e);return s.map((r,o)=>{const a=`int ${n[o]} = ${t} / ${r}`,i=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${a}; ${i};`}).join("")}function Yf(n){const e=fe(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}const kv=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=qo.DENSE;const t=_o(e),s=Gt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${$r(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WV{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=qo.DENSE;const t=_o(e),s=Gt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${$r(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VV{constructor(e){this.variableNames=["A"],this.outTexUsage=on.DOWNLOAD;const t=Gt();this.outputShape=e,this.userCode=`
      ${kv}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UV{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=on.DOWNLOAD;const t=Gt();this.outputShape=e,this.userCode=`
      ${kv}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GV{constructor(e,t,s=!1){this.variableNames=["A"];const r=Gt(),[o,a]=t;this.outputShape=e;let i="result";s&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${Yf(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${a};
        int c = imod(flatIndex, ${a});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${o}.0);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jV{constructor(e,t,s=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Gt(),[o,a]=t;this.outputShape=e;let i="",c="result";s&&(c="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let u=0;u<=1;u++){const d=l*2+u;i+=`
          localCoords = coords;
          if(localCoords[2] + ${u} < ${e[2]}) {
            localCoords[2] += ${u};
            if(localCoords[1] + ${l} < ${e[1]}) {
              localCoords[1] += ${l};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${a};
              c = imod(flatIndex, ${a});
              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${o}.0);
              values = ${r.texture2D}(A, uv);

              if(offset == 0) {
                result[${d}] = values[0];
              } else if(offset == 1) {
                result[${d}] = values[1];
              } else if(offset == 2) {
                result[${d}] = values[2];
              } else {
                result[${d}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${Yf(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${r.output} = ${c};
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(n){const e=Gt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return mV(n,t)}function qV(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return vV(n,e)}function KV(n){const e=new Uint16Array([0,1,2,2,1,3]);return kV(n,e)}function Ci(n,e,t,s,r,o){NV(e,t);const a=CV(n),i=n.TEXTURE_2D;return le(n,()=>n.bindTexture(i,a)),le(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),le(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),le(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),le(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),le(n,()=>n.texImage2D(i,0,s,e,t,0,r,o,null)),le(n,()=>n.bindTexture(n.TEXTURE_2D,null)),a}function Cv(n){return n.internalFormatFloat}function XV(n,e,t,s){const[r,o]=vi(e,t);return Ci(n,r,o,Cv(s),s.textureFormatFloat,n.FLOAT)}function Nv(n){return n.internalFormatHalfFloat}function YV(n,e,t,s){const[r,o]=vi(e,t);return Ci(n,r,o,Nv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function $v(n){return n.downloadTextureFormat}function JV(n,e,t,s){const[r,o]=vi(e,t);return Ci(n,r,o,$v(s),n.RGBA,n.UNSIGNED_BYTE)}function Iv(n){return n.internalFormatPackedFloat}function ZV(n,e,t,s){const[r,o]=go(e,t);return Ci(n,r,o,Iv(s),n.RGBA,n.FLOAT)}function Sv(n){return n.internalFormatPackedHalfFloat}function QV(n,e,t,s){const[r,o]=go(e,t);return Ci(n,r,o,Sv(s),n.RGBA,s.textureTypeHalfFloat)}function e4(n,e,t){return le(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Xg(n,e,"clipSpacePos",t,3,20,0)&&Xg(n,e,"uv",t,2,20,12)}function t4(n,e,t,s,r,o){le(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,c;r instanceof Uint8Array?(a=new Uint8Array(t*s*4),i=n.UNSIGNED_BYTE,c=n.RGBA):(a=new Float32Array(t*s*4),i=n.FLOAT,c=o.internalFormatPackedFloat),a.set(r),le(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,s,0,n.RGBA,i,a)),le(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function n4(n,e,t){le(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?le(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):le(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),le(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function s4(n,e,t,s){const r=n.createBuffer();le(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=4*4*e*t;return le(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),le(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),le(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function r4(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function o4(n,e,t,s){const[r,o]=vi(e,t),a=4,i=new Uint8Array(cV(e*t,a));return le(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function a4(n,e,t,s,r,o,a,i){const c=n,l=new Float32Array(lV(o,a));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function i4(n,e,t){const s=new Float32Array(e*t*4);return le(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c4{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,oV(t,e)):this.gl=as(t);let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(Y().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Fi(this.gl,o),vn(this.gl,a))this.textureHalfFloatExtension=Fi(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),vn(this.gl,r))this.colorBufferHalfFloatExtension=Fi(this.gl,r);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",vn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(vn(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=qV(this.gl),this.indexBuffer=KV(this.gl),this.framebuffer=$V(this.gl),this.textureConfig=Xf(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;le(e,()=>e.finish()),le(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),le(e,()=>e.deleteFramebuffer(this.framebuffer)),le(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),le(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),le(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),XV(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),YV(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),JV(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),n4(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),t4(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),QV(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),ZV(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Yg(this.gl,this.framebuffer),this.outputTexture=null),le(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>o4(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,a){return a4(this.gl,e,t,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return r4(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=s4(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=o}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>i4(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl,s=gV(t,e),r=HV(t),o=xV(t);return le(t,()=>t.attachShader(o,r)),le(t,()=>t.attachShader(o,s)),wV(t,o),this.debug&&sd(t,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=e4(t,this.program,this.vertexBuffer)),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&le(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&sd(this.gl,this.program),le(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?SV(this.gl,e,t):TV(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),le(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),DV(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=go(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&sd(this.gl,this.program),_i(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),le(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),le(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Fi(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await km(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=l4(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&km(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),rd(this.gl,e,this.framebuffer),this.debug&&_i(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(rd(this.gl,this.outputTexture,this.framebuffer),this.debug&&_i(this.gl)):Yg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;rd(r,e,this.framebuffer),this.debug&&_i(r),this.outputTexture=e,le(r,()=>r.viewport(0,0,t,s)),le(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),le(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function l4(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:Tv}=zA;function u4(n,e,t,s){const r=[];n.forEach(f=>{const m=q(f.shapeInfo.logicalShape);f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`))});const o=r.join(`
`),a=n.map(f=>d4(f,e,s)).join(`
`),i=e.texShape,c=Gt(),l=f4(c);let u,d,h=y4(c);return e.isPacked?(u=h4(e.logicalShape,i),d=g4(c)):(u=p4(e.logicalShape,i),d=m4(c)),s&&(h+=v4),[h,l,d,o,u,a,t].join(`
`)}function yo(n){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return O4(n);case 1:return _4(n);case 2:return L4(n);case 3:return z4(n);case 4:return W4(n);case 5:return V4(n);case 6:return U4(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function Dv(n){switch(n.shapeInfo.logicalShape.length){case 0:return R4(n);case 1:return F4(n);case 2:return P4(n);case 3:return M4(n);default:return B4(n)}}function d4(n,e,t=!1){let s="";t?s+=Dv(n):s+=yo(n);const r=n.shapeInfo.logicalShape,o=e.logicalShape;return r.length<=o.length&&(t?s+=G4(n,e):s+=j4(n,e)),s}function h4(n,e){switch(n.length){case 0:return Ev();case 1:return k4(n,e);case 2:return E4(n,e);case 3:return N4(n,e);default:return I4(n,e)}}function p4(n,e){switch(n.length){case 0:return Ev();case 1:return C4(n,e);case 2:return A4(n,e);case 3:return $4(n,e);case 4:return S4(n,e);case 5:return T4(n,e);case 6:return D4(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function f4(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function m4(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function g4(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function y4(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${b4}
    ${x4}
    ${w4}
  `}const b4=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,x4=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,w4=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,v4=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Ev(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function k4(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return t[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function C4(n,e){return e[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function N4(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),r=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function $4(n,e){const t=$r(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec3(r, c, d);
    }
  `}function I4(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),r=s*Math.ceil(n[n.length-2]/2);let o=r,a="",i="b, r, c";for(let c=2;c<n.length-1;c++)o*=n[n.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,i=`b${c}, `+i;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${i});
    }
  `}function S4(n,e){const t=$r(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}function T4(n,e){const t=$r(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function D4(n,e){const t=$r(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function E4(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Le(n,e))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function A4(n,e){return Le(n,e)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Ir(n){return`offset${n}`}function R4(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Gt();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function O4(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${t}() {return ${e};}`;const[s,r]=n.shapeInfo.texShape;if(s===1&&r===1)return`
      float ${t}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const[o,a]=n.shapeInfo.texShape,i=Ir(e);return`
    float ${t}() {
      vec2 uv = uvFromFlat(${o}, ${a}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function F4(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=n.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=Gt();return`
    vec4 ${t}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${o.texture2D}(${e}, uv);
    }
  `}function _4(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${t}(int index) {
        ${bo(n)}
      }
    `;const s=n.shapeInfo.texShape,r=s[0],o=s[1];if(o===1&&r===1)return`
      float ${t}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=Ir(e);return o===1?`
      float ${t}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?`
      float ${t}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
    float ${t}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function P4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=r[0],a=r[1],i=Gt();if(r!=null&&Le(e,r))return`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${i.texture2D}(${t}, uv);
      }
    `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${i.texture2D}(${t}, uv);
    }
  `}function L4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Le(e,r)){const d=r[0],h=r[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${t}, uv);
    }
  `}const{newShape:o,keptDims:a}=br(e),i=o;if(i.length<e.length){const d=xo(n,i),h=["row","col"];return`
      ${yo(d)}
      float ${s}(int row, int col) {
        return ${s}(${wo(h,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${bo(n)}
      }
    `;const c=r[0],l=r[1],u=Ir(t);return l===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${t}, uv);
    }
  `:c===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${t}, uv);
    }
  `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${u};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${t}, uv);
  }
`}function M4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const d=e.slice(1),h=[1,2],p=xo(n,d),f=["b","row","col"];return`
        ${Dv(p)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${wo(f,h)});
        }
      `}const a=o[0],i=o[1],c=Math.ceil(e[2]/2),l=c*Math.ceil(e[1]/2),u=Gt();return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${i}, ${l}, ${c}, b, row, col);
      return ${u.texture2D}(${t}, uv);
    }
  `}function z4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[1]*e[2],o=e[2],{newShape:a,keptDims:i}=br(e),c=a;if(c.length<e.length){const f=xo(n,c),m=["row","col","depth"];return`
        ${yo(f)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${wo(m,i)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${bo(n)}
      }
    `;const l=n.shapeInfo.texShape,u=l[0],d=l[1],h=n.shapeInfo.flatOffset;if(d===r&&h==null)return`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${u}.0);
          return sampleTexture(${t}, uv);
        }
      `;if(d===o&&h==null)return`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${u}.0);
      return sampleTexture(${t}, uv);
    }
  `;const p=Ir(t);return`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${u}, ${d}, index);
        return sampleTexture(${t}, uv);
      }
  `}function B4(n){const e=n.shapeInfo.logicalShape,t=e.length,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=a[0],c=a[1],l=Math.ceil(e[t-1]/2);let u=l*Math.ceil(e[t-2]/2),d="int b, int row, int col",h=`b * ${u} + (row / 2) * ${l} + (col / 2)`;for(let f=2;f<t-1;f++)d=`int b${f}, `+d,u*=e[t-f-1],h=`b${f} * ${u} + `+h;const p=Gt();return`
    vec4 ${r}(${d}) {
      int index = ${h};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${i});
      return ${p.texture2D}(${s}, uv);
    }
  `}function W4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[3],o=e[2]*r,a=e[1]*o,{newShape:i,keptDims:c}=br(e);if(i.length<e.length){const f=xo(n,i),m=["row","col","depth","depth2"];return`
      ${yo(f)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${wo(m,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${bo(n)}
      }
    `;const l=n.shapeInfo.flatOffset,u=n.shapeInfo.texShape,d=u[0],h=u[1];if(h===a&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(h===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const p=Ir(t);return`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${h}, index + ${p});
      return sampleTexture(${t}, uv);
    }
  `}function V4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,a=e[2]*o,i=e[1]*a,{newShape:c,keptDims:l}=br(e);if(c.length<e.length){const m=xo(n,c),g=["row","col","depth","depth2","depth3"];return`
      ${yo(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${wo(g,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${r})) +
          depth3;
        ${bo(n)}
      }
    `;const u=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Ir(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function U4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=br(e);if(r.length<e.length){const g=xo(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${yo(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${wo(y,o)});
      }
    `}const a=e[5],i=e[4]*a,c=e[3]*i,l=e[2]*c,u=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${l}, ${c}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${bo(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${c}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Ir(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${l} + depth * ${c} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function bo(n){const e=n.name,t=q(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function G4(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=Tv(n.shapeInfo.logicalShape,e.logicalShape),c=Xe(a),l=a-o;let u;const d=["x","y","z","w","u","v"];o===0?u="":a<2&&i.length>=1?u="coords = 0;":u=i.map(b=>`coords.${d[b+l]} = 0;`).join(`
`);let h="";a<2&&o>0?h="coords":h=n.shapeInfo.logicalShape.map((b,v)=>`coords.${d[v+l]}`).join(", ");let p="return outputValue;";const m=q(n.shapeInfo.logicalShape)===1,y=q(e.logicalShape)===1;if(o===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const b=o-2,v=o-1;i.indexOf(b)>-1&&i.indexOf(v)>-1?p="return vec4(outputValue.x);":i.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(v)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${c} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function j4(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===c&&n.shapeInfo.flatOffset==null&&Le(a,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=Xe(c),u=Tv(n.shapeInfo.logicalShape,e.logicalShape),d=c-i;let h;const p=["x","y","z","w","u","v"];i===0?h="":c<2&&u.length>=1?h="coords = 0;":h=u.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return c<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function Xe(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function xo(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function wo(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4(n,e,t,s){const r=e.userCode,o=t.map((p,f)=>{const m={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(m.flatOffset=p.texData.slice.flatOffset),{name:e.variableNames[f],shapeInfo:m}}),a=o.map(p=>p.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},c=u4(o,i,r,e.packedInputs),l=n.createProgram(c);let u=null;const d=n.getUniformLocation(l,"NAN",!1);Y().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(l,"INFINITY",!1));const h={};for(let p=0;p<e.variableNames.length;p++){const f=e.variableNames[p],m=!1;h[f]=n.getUniformLocation(l,f,m),h[`offset${f}`]=n.getUniformLocation(l,`offset${f}`,m)}return{program:e,source:c,webGLProgram:l,uniformLocations:h,inShapeInfos:a,outShapeInfo:i,infLoc:u,nanLoc:d}}function Zg(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],a=o.shape;if(!Le(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,c=o.isUniform?null:o.texData.texShape;if(!Le(i,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${c} must match`)})}function q4(n,e,t,s,r){Zg(e.inShapeInfos,t),Zg([e.outShapeInfo],[s]);const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o,a[0],a[1]):n.setOutputMatrixTexture(o,a[0],a[1]),n.setProgram(e.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((i,c)=>{const l=e.program.variableNames[c],u=e.uniformLocations[l],d=e.uniformLocations[`offset${l}`];if(u!=null){if(i.isUniform){if(q(i.shape)<2)n.gl.uniform1f(u,i.uniformValues[0]);else{let h=i.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),n.gl.uniform1fv(u,h)}return}i.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,i.texData.slice.flatOffset),n.setInputMatrixTexture(i.texData.texture,u,c)}}),r?.(n,e.webGLProgram),n.executeProgram()}function K4(n,e,t){let s="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0,c=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${c}_${i}`});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r,o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:X4,bincountImpl:Av,bincountReduceImpl:Y4,ceilImpl:J4,concatImpl:Z4,expImpl:Q4,expm1Impl:eU,floorImpl:tU,gatherV2Impl:nU,greaterImpl:sU,lessImpl:rU,linSpaceImpl:oU,logImpl:aU,maxImpl:iU,maximumImpl:cU,minimumImpl:lU,multiplyImpl:uU,negImpl:dU,prodImpl:hU,rangeImpl:pU,rsqrtImpl:fU,simpleAbsImpl:Rv,sliceImpl:mU,stridedSliceImpl:gU,subImpl:yU,tileImpl:bU,topKImpl:xU,transposeImpl:Jf,uniqueImpl:wU}=qL;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Ut(n,e){return e===1?[n]:Ov(n,e)}function vU(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kU{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const s=Ut("rc",t),r=Xe(t),o=NU(t,e,s),a=$U(t,e[e.length-1],e[e.length-2],s),i=IU(e,s);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}}function CU(n,e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<n;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}function NU(n,e,t){if(n===1)return`rc > ${e[0]}`;let s="";for(let r=n-2;r<n;r++)s+=`${t[r]} >= ${e[r]}`,r<n-1&&(s+="||");return s}function $U(n,e,t,s){if(n===1)return"";const r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function IU(n,e){const t=n.length,s=CU(t,e);return t===1?`getA(rc),
            rc + 1 >= ${n[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${SU(t)}
      ${Yf(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${s}

        setOutput(result);
      }
    `}}function SU(n){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${$r(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TU{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const r=ey(t,s),o=ty(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=Qg(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const c=this.freeTextures[o].shift();return this.usedTextures[o].push(c),c}let i;return r===Et.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Et.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Et.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Et.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Et.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=ey(s,r),a=ty(t,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Qg(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function DU(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function Qg(n,e,t,s,r){const o=EU(e,s);let a;if(r){const[c,l]=go(n[0],n[1]);a=c*l}else{const[c,l]=vi(n[0],n[1]);a=c*l}const i=DU(t,o);return a*i}function EU(n,e){switch(n){case Et.PACKED_2X2_FLOAT32:return Iv(e);case Et.PACKED_2X2_FLOAT16:return Sv(e);case Et.UNPACKED_FLOAT32:return Cv(e);case Et.UNPACKED_FLOAT16:return Nv(e);case Et.PACKED_4X1_UNSIGNED_BYTE:return $v(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function AU(n){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Et.PACKED_2X2_FLOAT32:Et.UNPACKED_FLOAT32:n?Et.PACKED_2X2_FLOAT16:Et.UNPACKED_FLOAT16}function ey(n,e){if(n===on.UPLOAD)return Et.PACKED_2X2_FLOAT32;if(n===on.RENDER||n==null)return AU(e);if(n===on.DOWNLOAD||n===on.PIXELS)return Et.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function ty(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Es{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Wn="if (isnan(x)) return x;",RU="return x;",ny="return abs(x);",OU="return (x >= 0.0) ? x : (exp(x) - 1.0);",FU=Wn+`
  return (x < 0.0) ? 0.0 : x;
`,_U=Wn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Li="return x;";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU="return x;",LU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,MU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class Vr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,s=Ut("rc",t),r=Xe(t),o=vU(t,s),a=s.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU=Bp,VU=1e-7,UU=1e-4,Mi={};function GU(n){return n in Mi||(Mi[n]={}),Mi[n]}const jU=128,HU=600;function qU(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*HU/1024/1024}class Nu extends dh{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){const t=as(Y().getNumber("WEBGL_VERSION"));this.binaryCache=GU(Y().getNumber("WEBGL_VERSION")),this.gpgpu=new c4(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new TU(this.gpgpu),this.numMBBeforeWarning=qU(),this.texData=new Ab(this,Ns())}nextDataId(){return Nu.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,s){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:on.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:on.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:c}=t;if(a!=null){let h;c?h=new Vr(i,Li):h=new Es(i,Li);const p=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const l=this.activeTimers!=null;let u;l&&(u=Ht());let d;if(r==="complex64"){const h=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);d=ys(h,p)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Ht()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:i,isPacked:c}=t;if(o!=null){let f;c?f=new Vr(r,Li):f=new Es(r,Li);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const f=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(f.texture,..._o(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];d=ys(m,g)}else if(l==null)d=this.getValuesFromTexture(e);else{const f=q(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}u!=null&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ns().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if(e.dtype==="string")try{s=t.map(r=>Hr(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Te(e.shape,e.dtype,s)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!pV(s))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=q(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,..._o(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),f}const a=Y().getBool("WEBGL_PACK")&&r===!0,i=a?od(t):t,c=a?new UV(i):new VV(i),l=this.runWebGLProgram(c,[{shape:i,dtype:s,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=jr(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=jr(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(o);i.kernelMs=BI(c),i.getExtraProfileInfo=()=>c.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ht(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ht(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(e),c=i&&i.origDataId||e,l=this.dataRefCount.get(c);l>1?this.dataRefCount.set(c,l-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Y().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Ns().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=jU){const s=this.getCPUBackend();return!Y().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&s==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),s!=null&&e.every(r=>this.texData.get(r.dataId).texture==null&&q(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){uo("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return WU(e.shape,t)}packedUnaryOp(e,t,s){const r=new Vr(e.shape,t),o=this.compileAndRun(r,[e],s);return Ns().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=Rv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ny,e.dtype);const t=new Es(e.shape,ny),s=this.compileAndRun(t,[e]);return Ns().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&ea(s[0])){const o=s.map(a=>Za(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){const{dataId:r}=this.makeTensorInfo(e,t,s);return Ns().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new BU(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new kU(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[Qr(e.shape),...eo(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[Qr(t),...eo(t)],a=new Fv(o,s),c=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e){const t=this.texData.get(e),{isPacked:s,shape:r,dtype:o}=t,a=od(r);let i;s?i=new WV(a):i=new BV(a);const l=this.runWebGLProgram(i,[{shape:a,dtype:o,dataId:e}],o,null,!0);return{dtype:o,shape:r,dataId:l.dataId}}runWebGLProgram(e,t,s,r,o=!1){const a=this.makeTensorInfo(e.outputShape,s),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===qo.DENSE){const g=_o(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),q(a.shape)===0)return i.values=Ft(a.dtype,0),a;const c=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&q(g.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}else if(!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),c.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!_c(y.shape,g.shape)){const b=g,v=g.shape;g.shape=y.shape,g=this.packedReshape(g,v),c.push(g),y=this.texData.get(g.dataId),b.shape=v}return this.uploadToGPU(g.dataId),{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},d=K4(e,l,u),h=this.getAndSaveBinary(d,()=>H4(this.gpgpu,e,l,u)),p=this.activeTimers!=null;let f;p&&(f=this.startTimer()),q4(this.gpgpu,h,l,u,r),c.forEach(g=>this.disposeIntermediateTensorInfo(g)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Y().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const g=Ht();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&o===!1){const g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=P(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Y().getBool("DEBUG");Y().set("DEBUG",!1);const t=this.abs(Ne(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?VU:UU}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:c}=t;if(a!=null)return;const l=this.activeTimers!=null;let u;l&&(u=Ht());let d=t.texShape;if(d==null&&(d=RV(s,c),t.texShape=d),o!=null){const h=od(s);let p,f=d[1],m=d[0];const g=o instanceof Uint8Array;c?([f,m]=go(d[0],d[1]),p=new jV(h,[m,f],g)):p=new GV(h,[m,f],g);const y=this.makeTensorInfo([m,f],r);g?this.texData.get(y.dataId).usage=on.PIXELS:this.texData.get(y.dataId).usage=on.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),f,m,o);const v=this.runWebGLProgram(p,[y],r,null,!0),x=this.texData.get(v.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(v.dataId),t.values=null,l&&(this.uploadWaitMs+=Ht()-u)}else{const h=this.acquireTexture(d,i,r,c);t.texture=h}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return this.releaseGPUData(e),t!=null&&(s.values=KU(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*dd(t)}}Nu.nextDataId=0;function KU(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Xb()&&xx("webgl",()=>new Nu,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _v=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class to{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Se(t,s),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $u=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class Ni{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Se(t,s);const o=this.outputShape.length;let a="";if(r)if(o===0||q(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Xe(o)} coords = getOutputCoords();
        `,o===1)a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=Ut("coords",o);a+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const XU={kernelName:Ca,backendName:"webgl",kernelFunc:tn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(o.dataId),i=tn({inputs:{x:s},backend:t}),c=tn({inputs:{x:r},backend:t});return a.complexTensorInfos={real:i,imag:c},o}const YU={kernelName:xh,backendName:"webgl",kernelFunc:js};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pv="return (a < 0.) ? b * a : a;",Lv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function JU(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,a=t.makeTensorInfo([],"float32",Bs(o,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ni(Lv,r.shape,a.shape):new to(Pv,r.shape,a.shape),c=t.runWebGLProgram(i,[r,a],r.dtype);return t.disposeIntermediateTensorInfo(a),c}const ZU={kernelName:dl,backendName:"webgl",kernelFunc:JU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mv="return (a < 0.) ? b * a : a;",zv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function QU(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ni(zv,s.shape,r.shape):new to(Mv,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)}const eG={kernelName:El,backendName:"webgl",kernelFunc:QU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bv="if (isnan(x)) return x;",tG=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,nG=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Re({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,c=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const d=i.texData.get(a.dataId),h=t(d.values,c);return i.makeTensorInfo(a.shape,c,h)}const l=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return l?u=new Vr(a.shape,e):u=new Es(a.shape,n),i.runWebGLProgram(u,[a],c)}}function Lt({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:c,b:l}=a,u=i;if(s&&c.dtype==="complex64"){const f=u.texData.get(c.dataId),m=u.texData.get(l.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(v=>{const[x,w]=v,N={dataId:x.dataId,dtype:x.dtype,shape:c.shape},C={dataId:w.dataId,dtype:w.dtype,shape:l.shape},$=new to(n,c.shape,l.shape);return u.runWebGLProgram($,[N,C],ln(x.dtype,w.dtype))}),b=js({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),b}const d=o||ln(c.dtype,l.dtype);if(u.shouldExecuteOnCPU([c,l])&&r!=null){const f=u.texData.get(c.dataId),m=u.texData.get(l.dataId),[g,y]=r(c.shape,l.shape,f.values,m.values,d),b=u.makeTensorInfo(y,d),v=u.texData.get(b.dataId);return v.values=g,b}const h=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new Ni(e,c.shape,l.shape,t):p=new to(n,c.shape,l.shape),u.runWebGLProgram(p,[c,l],d)}}function Iu(n,e=!1){if(n==="linear")return e?PU:RU;if(n==="relu")return e?MU:FU;if(n==="elu")return e?LU:OU;if(n==="relu6")return e?zU:_U;if(n==="prelu")return e?zv:Mv;if(n==="leakyrelu")return e?Lv:Pv;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wv{constructor(e,t,s,r=!1,o=!1,a=!1,i=null,c=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const u=r?e[1]:e[2],d=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";i&&(c?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let v="rc.x",x="rc.x";e[0]<t[0]?v=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}

      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${v};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sy={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ry{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Se(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oy="return a * b;";function Vv(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=ln(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=t.texData.get(s.dataId),c=t.texData.get(r.dataId),l=new ry(sy.REAL,s.shape,r.shape),u=new ry(sy.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:r.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:r.shape}],h=t.runWebGLProgram(l,d,"float32"),p=t.runWebGLProgram(u,d,"float32"),f=js({inputs:{real:h,imag:p},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const i=t.texData.get(s.dataId),c=t.texData.get(r.dataId),[l,u]=uU(s.shape,r.shape,i.values,c.values,o),d=t.makeTensorInfo(u,o),h=t.texData.get(d.dataId);return h.values=l,d}let a;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Ni(oy,s.shape,r.shape):a=new to(oy,s.shape,r.shape),t.runWebGLProgram(a,[s,r],o)}const sG={kernelName:Ra,backendName:"webgl",kernelFunc:Vv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n,e,t){const s=[Qr(n.shape),...eo(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Qr(e),...eo(e)],a=new Fv(o,s),c=t.runWebGLProgram(a,[r],n.dtype,null,!0);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=t,i=q(r.shape),c=Ob(o,i),l=q(c);I(i===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const u=a.texData.get(r.dataId);return u.isPacked&&!_c(r.shape,c)&&!(u.texture!==null&&_c(u.shape,c))?rG(r,c,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype})}const oG={kernelName:Al,backendName:"webgl",kernelFunc:ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ay{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];const i=Math.floor(s/4)*4,c=s%4;let l="sumValue += dot(values, ones);";if(t!=null){const d=1/t;l=`sumValue += dot(values * ${It(d)?d.toPrecision(2):d}, ones);`}let u="";o%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aG{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];let i="0.0",c="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",c="min"):t==="max"&&(i="-1.0 / 1e-20",c="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const u=Math.floor(s/4)*4,d=s%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
      }
    `,p="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iG(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=cu(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Sr(n,e,t,s){const r=iG(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:c,outSize:l}=r[a];let u,d;t==="mean"?u=a===0?new ay({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:l},i):new ay({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:l}):u=new aG({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:l},t),d=o,o=s.runWebGLProgram(u,[o],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cG{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const r=Xe(this.rank),o=lG(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function lG(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Xe(this.rank),o=Ov("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=o[u];const i=`vec2(${a.slice(-2).join()})`,c=`++${o[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${c}) {
        result[1] = ${l};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${c}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Su(n,e,t){const s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uG(n.shape,e):new cG(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(n,e,t,s){const r=e,o=n.shape.length,a=Ie(r,n.shape);let i=a;const c=ut(i,o),l=c!=null;let u=n;l&&(u=Su(n,c,s),i=ft(i.length,o)),Pt("sum",i,o);const[d,h]=Tt(u.shape,i);let p=d;t&&(p=pt(d,a));const f=q(h),g=q(n.shape)/f,y=ae({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),b=sp(n.dtype),v=Sr(y,b,"sum",s),x=ae({inputs:{x:v},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(v),l&&s.disposeIntermediateTensorInfo(u),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;return dG(r,o,a,t)}const hG={kernelName:Ll,backendName:"webgl",kernelFunc:Zf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,a=t,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[o[u]];let l;if(a.shouldExecuteOnCPU([r])){const d=a.texData.get(r.dataId).values,h=Jf(d,r.shape,r.dtype,o,c);l=a.makeTensorInfo(c,r.dtype);const p=a.texData.get(l.dataId);p.values=h}else l=Su(r,o,a);return l}const pG={kernelName:Wl,backendName:"webgl",kernelFunc:Xt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uv=1e3;function Pc({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:c=null}){const l=n.shape.length,u=e.shape.length,d=t?n.shape[l-2]:n.shape[l-1],h=s?e.shape[u-1]:e.shape[u-2],p=t?n.shape[l-1]:n.shape[l-2],f=s?e.shape[u-2]:e.shape[u-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),y=q(m),b=q(g),v=y===b||y===1||b===1;I(l>=2&&u>=2&&v,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const w=(y>b?n.shape.slice(0,-2):e.shape.slice(0,-2)).concat([p,f]);I(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const N=t?[y,d,p]:[y,p,d],C=s?[b,f,h]:[b,h,f],$=ae({inputs:{x:n},backend:r,attrs:{shape:N}}),S=ae({inputs:{x:e},backend:r,attrs:{shape:C}}),T=[$,S],E=Math.max(y,b),F=t?$.shape[1]:$.shape[2],O=o!=null,L=a!=null,z=c==="leakyrelu",M=c!=null?Iu(c,!0):null,K=O||L||z||M!=null;let U;if((p===1||f===1)&&F>Uv&&K===!1){let X=$,J=S;t&&(X=Xt({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),T.push(X)),s&&(J=Xt({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),T.push(J));const j=f!==1,ee=f===1;let te=X;j&&(te=ae({inputs:{x:X},backend:r,attrs:{shape:[E,F,1]}}),T.push(te));const ne=f===1?2:1;let re=J;ee&&(re=ae({inputs:{x:J},backend:r,attrs:{shape:[E,1,F]}}),T.push(re));const ie=Vv({inputs:{a:te,b:re},backend:r});U=Zf({inputs:{x:ie},backend:r,attrs:{axis:ne,keepDims:!0}}),T.push(ie)}else{const X=ln(n.dtype,e.dtype),J=new Wv(N,C,[E,p,f],t,s,O,M,L,z),j=[$,S];if(o!=null&&j.push(o),L&&j.push(a),z){const ee=r.makeTensorInfo([],"float32",Bs(i,"float32"));j.push(ee),T.push(ee)}U=r.runWebGLProgram(J,j,X)}const H=ae({inputs:{x:U},backend:r,attrs:{shape:w}});T.push(U);for(const X of T)r.disposeIntermediateTensorInfo(X);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=s;return Pc({a:r,b:o,transposeA:c,transposeB:l,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}const mG={kernelName:uc,backendName:"webgl",kernelFunc:fG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iy="return abs(x);";function gG(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),a=Rv(o.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Vr(s.shape,iy):r=new Es(s.shape,iy),t.runWebGLProgram(r,[s],s.dtype)}const yG={kernelName:Gc,backendName:"webgl",kernelFunc:gG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bG=Wn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,xG=Re({opSnippet:bG}),wG={kernelName:sa,backendName:"webgl",kernelFunc:xG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG=Wn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,kG=Re({opSnippet:vG}),CG={kernelName:ra,backendName:"webgl",kernelFunc:kG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cy="return a + b;",NG=Lt({opSnippet:cy,packedOpSnippet:cy,supportsComplex:!0,cpuKernelImpl:X4}),$G={kernelName:ro,backendName:"webgl",kernelFunc:NG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IG{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SG{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cc(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return tn({inputs:{x:s[0]},backend:t});if(s.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),l=cc({inputs:s.slice(0,c),backend:t}),u=cc({inputs:s.slice(c),backend:t});return cc({inputs:[l,u],backend:t})}const r=s.map(c=>c.dtype).reduce((c,l)=>ln(c,l)),o=s.map(c=>c.shape),i=Y().getBool("WEBGL_PACK")?new SG(s[0].shape,o):new IG(s[0].shape,o);return t.runWebGLProgram(i,s,r)}const TG={kernelName:jc,backendName:"webgl",kernelFunc:cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Ie(o,r.shape);let l=c;const u=ut(l,i);let d=r;u!=null&&(d=Xt({inputs:{x:r},backend:t,attrs:{perm:u}}),l=ft(l.length,i)),Pt("all",l,i);const[h,p]=Tt(d.shape,l),f=q(p),m=ae({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Sr(m,m.dtype,"all",t);let y;if(a){const b=pt(h,c);y=ae({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=ae({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(d),y}const EG={kernelName:fh,backendName:"webgl",kernelFunc:DG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Ie(o,r.shape);let l=c;const u=ut(l,i);let d=r;u!=null&&(d=Xt({inputs:{x:r},backend:t,attrs:{perm:u}}),l=ft(l.length,i)),Pt("any",l,i);const[h,p]=Tt(d.shape,l),f=q(p),m=ae({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Sr(m,m.dtype,"any",t);let y;if(a){const b=pt(h,c);y=ae({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=ae({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(d),y}const RG={kernelName:mh,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OG{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FG{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=Xe(c),u=Ut("coords",c);let d,h;if(a===1){h=c+1;const $=Xe(h);d=`
        ${$} sourceLocR = ${$}(${u.join()}, 0);
        ++${u[c-1]};
        ${$} sourceLocG = ${$}(${u.join()}, 0);
        ++${u[c-2]};
        ${$} sourceLocA = ${$}(${u.join()}, 0);
        --${u[c-1]};
        ${$} sourceLocB = ${$}(${u.join()}, 0);
        --${u[c-2]};`}else h=c,d=`
        ${l} sourceLocR = coords;
        ++${u[c-1]};
        ${l} sourceLocG = coords;
        ++${u[c-2]};
        ${l} sourceLocA = coords;
        --${u[c-1]};
        ${l} sourceLocB = coords;
        --${u[c-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map($=>"int "+$),g=Ut("sourceLocR",h-1).concat("inIdx.r"),y=Ut("sourceLocG",h-1).concat("inIdx.g"),b=Ut("sourceLocB",h-1).concat("inIdx.b"),v=Ut("sourceLocA",h-1).concat("inIdx.a"),x=s==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${v.join()})));`,N=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,C=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[c-1]} < ${i[c-1]-1};
        bool hasNextRow = ${u[c-2]} < ${i[c-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gv(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=cu(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},c=new OG(i,t,s==null),l=[e];s!=null&&l.push(s);const u=n.runWebGLProgram(c,l,"int32");if(u.shape[1]===1)return u;const d=Gv(n,e,t,u);return n.disposeIntermediateTensorInfo(u),d}function jv(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],a=cu(o),i=new FG(r,a,t,s==null),c=s==null?[e]:[e,s],l=n.runWebGLProgram(i,c,"int32");if(l.shape.length===e.shape.length){const u=jv(n,e,t,l);return n.disposeIntermediateTensorInfo(l),u}return l}function Hv(n,e,t,s){const r=[t];if(Pt("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],[a,i]=Tt(e.shape,r),c=q(i),l=ae({inputs:{x:e},backend:n,attrs:{shape:[-1,c]}});o.push(l);const u=Gv(n,l,s);o.push(u);const d=ae({inputs:{x:u},backend:n,attrs:{shape:a}});return o.forEach(h=>n.disposeIntermediateTensorInfo(h)),d}return jv(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=Ie(o,r.shape);const i=ut(a,r.shape.length);let c=r;const l=[];i!=null&&(c=Xt({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=ft(a.length,c.shape.length)),Pt("argMax",[a[0]],c.shape.length);const u=Hv(t,c,a[0],"max");return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),u}const PG={kernelName:Hc,backendName:"webgl",kernelFunc:_G};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=Ie(o,r.shape);const i=ut(a,r.shape.length);let c=r;const l=[];i!=null&&(c=Xt({inputs:{x:r},backend:t,attrs:{perm:i}}),l.push(c),a=ft(a.length,c.shape.length)),Pt("argMin",[a[0]],c.shape.length);const u=Hv(t,c,a[0],"min");return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),u}const MG={kernelName:qc,backendName:"webgl",kernelFunc:LG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=Wn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,BG=Re({opSnippet:zG}),WG={kernelName:oa,backendName:"webgl",kernelFunc:BG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG=Wn+"return log(x + sqrt(x * x + 1.0));",UG=Re({opSnippet:VG}),GG={kernelName:aa,backendName:"webgl",kernelFunc:UG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=Wn+`
  return atan(x);
`,HG=Re({opSnippet:jG}),qG={kernelName:ia,backendName:"webgl",kernelFunc:HG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=tG+`
  return atan(a, b);
`,XG=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+nG+`
  return result;
`,YG=Lt({opSnippet:KG,packedOpSnippet:XG}),JG={kernelName:la,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=Wn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,QG=Re({opSnippet:ZG}),ej={kernelName:ca,backendName:"webgl",kernelFunc:QG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ko{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,y=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){this.userCode=`
        const ivec2 strides = ivec2(${i}, ${c});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:y:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");const w=Math.floor(a/4)*4,N=a%4,C=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${c});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${w};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${x});
      }
    `}}class Qf{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,c=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,y=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const v=t==="avg";let x="0.0";if(v||(x="-1.0 / 1e-20"),s){this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${c}, ${l});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / count");const C=Math.floor(a/4)*4,$=a%4,S=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${c}, ${l});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${C};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${S}
            }
          }
          setOutput(${N});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ki(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;I(_t(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=In(r.shape,o,a,l,i,c);if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))return tn({inputs:{x:r},backend:t});const d=new Ko(u,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const nj={kernelName:Kc,backendName:"webgl",kernelFunc:tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:l}=s,u=[1,1,1],d=bs(r.shape,o,a,u,i,c,l),h=new Qf(d,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const rj={kernelName:Xc,backendName:"webgl",kernelFunc:sj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oj{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=c-1-e.padInfo.top,d=l-1-e.padInfo.left,h=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class aj{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=d-1-e.padInfo.front,m=h-1-e.padInfo.top,g=p-1-e.padInfo.left,y=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ij(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s,d=[1,1,1],h=bs(a.shape,i,c,d,l,u),p=new aj(h);return t.runWebGLProgram(p,[r],a.dtype)}const cj={kernelName:yh,backendName:"webgl",kernelFunc:ij};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;ki([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=s,u=In(a.shape,i,c,1,l),d=new oj(u);return t.runWebGLProgram(d,[r],a.dtype)}const uj={kernelName:gh,backendName:"webgl",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dj(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;return Pc({a:r,b:o,transposeA:a,transposeB:i,backend:t})}const hj={kernelName:Yc,backendName:"webgl",kernelFunc:dj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pj{constructor(e,t,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Se(e,t),Se(e,s);let i="0.0";r!=null&&(Se(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";o!=null&&(Se(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fj{constructor(e,t,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Se(e,t),Se(e,s);let i="vec4(0.0)";r!=null&&(Se(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";o!=null&&(Se(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=n;I(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const l=[s,r,o];let u=null;a!=null&&(u=a.shape,l.push(a));let d=null;i!=null&&(d=i.shape,l.push(i));const h=Y().getBool("WEBGL_PACK_NORMALIZATION")?new fj(s.shape,r.shape,o.shape,u,d,c):new pj(s.shape,r.shape,o.shape,u,d,c);return e.runWebGLProgram(h,l,l[0].dtype)},gj={kernelName:cl,backendName:"webgl",kernelFunc:mj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yj{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Xe(this.rank),s=`uniform int start[${this.rank}];`,r=bj(this.rank);let o;const a=e.map((i,c)=>`sourceLoc.${nh[c]} = start[${c}] + coords.${nh[c]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      ${s}
      void main() {
        ${o}
        setOutput(getSource(${r}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,s)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}}const nh=["x","y","z","w","u","v"];function bj(n){if(n===1)return"sourceLoc";if(n<=6)return nh.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xj{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=Xe(this.rank),s=Ut("coords",this.rank),r=Ut("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,d)=>`start[${d}]`).join()});`:e.map((u,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${c}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,s)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wj(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=dp(e,fe(n.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const c=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,c+1),o}function $i(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s,[i,c]=jl(r,o,a);if(lp(r,i,c),q(c)===0)return t.makeTensorInfo(c,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.texData.get(r.dataId),h=mU(d.values,i,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,h)}const{isPacked:l}=t.texData.get(r.dataId),u=up(r.shape,i,c);if(l||!u){const d=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xj(c):new yj(c),h=d.getCustomSetupFunc(i);return t.runWebGLProgram(d,[r],r.dtype,h)}return t.uploadToGPU(r.dataId),wj(r,i,c,t)}const vj={kernelName:Pl,backendName:"webgl",kernelFunc:$i};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;I(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,v)=>b*v),c=li(r.shape,o,i),l=ui(c.length,o.length),u=di(r.shape,o,i),d=nf(a,o.length),h=sf(u,a,o.length),p=[],f=ae({inputs:{x:r},backend:t,attrs:{shape:c}}),m=Xt({inputs:{x:f},backend:t,attrs:{perm:l}}),g=ae({inputs:{x:m},backend:t,attrs:{shape:u}}),y=$i({inputs:{x:g},backend:t,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y},Cj={kernelName:Jc,backendName:"webgl",kernelFunc:kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=t.readSync(r.dataId),c=t.readSync(o.dataId),l=Av(i,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}const $j={kernelName:bh,backendName:"webgl",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ij="return float(a != b);",qv=Lt({opSnippet:Ij,dtype:"bool"}),Sj={kernelName:$l,backendName:"webgl",kernelFunc:qv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ii(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return tn({inputs:{x:r.complexTensorInfos.real},backend:t})}const Tj={kernelName:Hh,backendName:"webgl",kernelFunc:Ii};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj="return float(int(x));";function Ej(n,e){const t=new Es(n.shape,Dj),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sh(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return tn({inputs:{x:r},backend:t});const a=ht(r.shape),i=sh({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=js({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),c}if(r.dtype==="complex64"){const a=Ii({inputs:{input:r},backend:t}),i=sh({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!Fb(r.dtype,o)){const a=tn({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(o==="int32")return Ej(r,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",Ft("bool",1)),c=qv({inputs:{a:r,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),c}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const Aj={kernelName:ua,backendName:"webgl",kernelFunc:sh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ly="return ceil(x);",Rj=Re({opSnippet:ly,packedOpSnippet:ly,cpuKernelImpl:J4}),Oj={kernelName:da,backendName:"webgl",kernelFunc:Rj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fj{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,e),s.gl.uniform1f(this.maxLoc,t)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _j{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,e),s.gl.uniform1f(this.maxLoc,t)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:a}=s;let i;Y().getBool("WEBGL_PACK_CLIP")?i=new _j(r.shape):i=new Fj(r.shape);const c=i.getCustomSetupFunc(o,a);return t.runWebGLProgram(i,[r],r.dtype,c)}const Lj={kernelName:ha,backendName:"webgl",kernelFunc:Pj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mj{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uy(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function zj(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new Mj(s.shape),a=[uy(s,r.complexTensorInfos.real),uy(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const Bj={kernelName:Zc,backendName:"webgl",kernelFunc:zj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wj{constructor(e){this.outputShape=[],this.outputShape=ps(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vj{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ps(e,t);const s=this.outputShape,r=s.length,o=Xe(r),a=Ut("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let m=1;m<c.length;m++)c[m]=c[m-1]+e[m][t];const l=i[t],u=i.slice(-2),d=i.join();let h=`if (${l} < ${c[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let m=1;m<c.length;m++){const g=c[m-1];h+=`
        if (${l} < ${c[m]}  && ${l} >= ${c[m-1]}) {
          return getChannel(
            getT${m}(${zi(i,l,g)}),
            vec2(${zi(u,l,g)}));
        }`}const p=c.length,f=c[c.length-1];h+=`
        return getChannel(
          getT${p}(${zi(i,l,f)}),
          vec2(${zi(u,l,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function zi(n,e,t){const s=n.indexOf(e);return n.map((o,a)=>a===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tu(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return tn({inputs:{x:r.complexTensorInfos.imag},backend:t})}const Uj={kernelName:Fh,backendName:"webgl",kernelFunc:Tu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(n,e,t){const s=n[0].dtype;if(s==="complex64"){const l=n.map(f=>Ii({inputs:{input:f},backend:t})),u=n.map(f=>Tu({inputs:{input:f},backend:t})),d=Lr(l,e,t),h=Lr(u,e,t),p=js({inputs:{real:d,imag:h},backend:t});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),u.forEach(f=>t.disposeIntermediateTensorInfo(f)),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),p}if(s==="string"){const{tensors2D:l,outShape:u}=dy(n,e,t),d=l.map(g=>({vals:t.readSync(g.dataId),shape:g.shape})),h=l[0].shape[0]===1,p=Z4(d,u,s,h),f=ps(n.map(g=>g.shape),e),m=t.makeTensorInfo(f,s,p);return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}if(n.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),u=Lr(n.slice(0,l),e,t),d=Lr(n.slice(l),e,t),h=Lr([u,d],e,t);return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),h}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){const l=new Vj(n.map(u=>u.shape),e);return t.runWebGLProgram(l,n,s)}const{tensors2D:r,outShape:o}=dy(n,e,t),a=new Wj(r.map(l=>l.shape)),i=t.runWebGLProgram(a,r,s);r.forEach(l=>t.disposeIntermediateTensorInfo(l));const c=ae({inputs:{x:i},attrs:{shape:o},backend:t});return t.disposeIntermediateTensorInfo(i),c}function dy(n,e,t){const s=ps(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>ae({inputs:{x:o},attrs:{shape:[-1,q(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kv(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Ie(r,e[0].shape)[0],a=ps(e.map(l=>l.shape),o);if(q(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const i=e.filter(l=>q(l.shape)>0);if(i.length===1)return tn({inputs:{x:i[0]},backend:t});const c=i.map(l=>l.shape);return Qp(c,o),Lr(i,o,t)}const Gj={kernelName:Qc,backendName:"webgl",kernelFunc:Kv};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xv{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,v=g?3:1;let x="",w="";s&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:x=`
          float activation(float x) {
            ${s}
          }
        `,w="result = activation(result);");const N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${c}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${w}
        setOutput(result);
      }
    `}}class jj{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hj{constructor(e,t,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:o,strideWidth:a,strideHeight:i,padInfo:c,outWidth:l,dilationWidth:u,dilationHeight:d,dataFormat:h}=s,{left:p,top:f}=c,m=o*r,g=Gt(),y=h==="channelsLast",b=y?0:1,v=y?1:2;let x="";for(let w=0;w<=1;w++)for(let N=0;N<=1;N++)x+=`
          blockIndex = rc.y + ${N};
          pos = rc.x + ${w};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${l})) * ${i} - ${f};
            d0 = offsetY + ${d} * (pos / ${m});

            if(d0 < ${t[b]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${p}.);
              d1 = offsetX + ${u} * (int(mod(float(pos), ${m}.) / ${o}.));

              if(d1 < ${t[v]} && d1 >= 0) {

                ch = int(mod(float(pos), ${o}.));

                if (${y}) {
                  innerDims = vec2(d1, ch);
                  result[${w*2+N}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${w*2+N}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${x}

        ${g.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yv({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const c=n.shape,l=s.texData.get(n.dataId),u=t.inChannels,d=c[0]*c[1]*c[2],h=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[],b=(d===1||h===1)&&u>Uv,v=c[2]%2!==0&&!!l.isPacked;if(b||!Y().getBool("WEBGL_LAZILY_UNPACK")||!Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!v){const x=p?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],w=ae({inputs:{x:n},backend:s,attrs:{shape:[1,x,t.inChannels]}}),N=ae({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),C=Pc({a:w,b:N,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=ae({inputs:{x:C},backend:s,attrs:{shape:t.outShape}}),y.push(w),y.push(N),y.push(C)}else{const x=p?c[0]*c[1]*(c[2]+1):c[0]*c[2]*(c[3]+1),w={dataId:n.dataId,shape:[1,x,t.inChannels],dtype:n.dtype},N=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,I(_c(l.shape,w.shape),()=>`packed reshape ${l.shape} to ${w.shape} isn't free`);const C=ae({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});y.push(C);const $=Pc({a:w,b:C,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),S=s.texData.get($.dataId);I(S.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=N,S.shape=t.outShape,g=tn({inputs:{x:$},backend:s}),g.shape=t.outShape,y.push($)}for(const x of y)s.disposeIntermediateTensorInfo(x);return g}function Jv({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:c,filterHeight:l,inChannels:u,outWidth:d,outHeight:h,dataFormat:p}=t,f=p==="channelsLast",m=c*l*u,g=h*d,y=[m,g],b=!0,v=!1,x=[],w=ae({inputs:{x:n},backend:s,attrs:{shape:n.shape.slice(1)}}),N=ae({inputs:{x:e},backend:s,attrs:{shape:[1,m,q(e.shape)/m]}});x.push(w),x.push(N);const C=new Hj(y,w.shape,t),$=s.runWebGLProgram(C,[w],"float32"),S=ae({inputs:{x:$},backend:s,attrs:{shape:[1,y[0],y[1]]}});x.push($),x.push(S);const T=r!=null,E=o!=null,F=i==="leakyrelu",O=i?Iu(i,!0):null,L=new Wv(S.shape,N.shape,[1,g,t.outChannels],b,v,T,O,E,F),z=[S,N];if(r&&z.push(r),E&&z.push(o),F){const H=s.makeTensorInfo([],"float32",Bs(a,"float32"));z.push(H),x.push(H)}const M=s.runWebGLProgram(L,z,"float32"),K=f?[1,h,d,t.outChannels]:[1,t.outChannels,h,d],U=ae({inputs:{x:M},backend:s,attrs:{shape:K}});x.push(M);for(const H of x)s.disposeIntermediateTensorInfo(H);return U}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=s,d=xs(c),h=St(r.shape,o.shape,a,l,i,u,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=Yv({x:r,filter:o,convInfo:h,backend:t});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)p=Jv({x:r,filter:o,convInfo:h,backend:t});else{const m=new Xv(h);p=t.runWebGLProgram(m,[r,o],"float32")}const f=ae({inputs:{x:p},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(p),f}const Kj={kernelName:el,backendName:"webgl",kernelFunc:qj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Yj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,c=s-1-e.padInfo.left,l=a?1:2,u=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Jj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Zj{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=t-1-e.padInfo.front,l=s-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=s,d=xs(c),h=St(r.shape,u,a,1,i,l,!1,d),p=new Xj(h);return t.runWebGLProgram(p,[r,o],"float32")}const eH={kernelName:wh,backendName:"webgl",kernelFunc:Qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=s,d=xs(l),h=St(a,o.shape,i,1,c,u,!1,d),p=new Yj(h);return t.runWebGLProgram(p,[r,o],"float32")}const nH={kernelName:tl,backendName:"webgl",kernelFunc:tH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s,l=Ws(r.shape,o.shape,a,c,i),u=new jj(l);return t.runWebGLProgram(u,[r,o],"float32")}const rH={kernelName:nl,backendName:"webgl",kernelFunc:sH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:c}=s,l=Ws(r.shape,c,a,1,i),u=new Jj(l);return t.runWebGLProgram(u,[r,o],"float32")}const aH={kernelName:vh,backendName:"webgl",kernelFunc:oH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:c}=s,l=Ws(c,o.shape,i,1,a),u=new Zj(l);return t.runWebGLProgram(u,[r,o],"float32")}const cH={kernelName:kh,backendName:"webgl",kernelFunc:iH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH=Bv+`
  return cos(x);
`,uH=Re({opSnippet:lH}),dH={kernelName:pa,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,pH=Re({opSnippet:hH}),fH={kernelName:fa,backendName:"webgl",kernelFunc:pH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mH{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,c,l]=e,[u]=t,[d,h]=s;this.outputShape=[u,d,h,l];const p=r==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${c-1}.0`],[g,y,b]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[v,x,w]=h>1?[`${(c-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${x};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:l}=s,u=new mH(r.shape,o.shape,i,c,l);return t.runWebGLProgram(u,[r,o,a],"float32")},yH={kernelName:Ch,backendName:"webgl",kernelFunc:gH};class hy{constructor(e,t,s){this.variableNames=["x"],this.outputShape=e;const r=e.length,o=t?"0.0":`getX(${py(r,"coords")})`,a=e[e.length-1];let i="",c="";t?(i=s?`end != ${a-1}`:"end != 0",c=s?"end + 1":"end - 1"):(i=s?`end + pow2 < ${a}`:"end >= pow2",c=s?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${Xe(r)} coords = getOutputCoords();
        int end = ${fy(r,"coords")};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${c};
          ${fy(r,"coords")} = idx;
          val += getX(${py(r,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.index==null&&(this.index=t.getUniformLocation(s,"index")),t.gl.uniform1f(this.index,e)}}}function py(n,e){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}function fy(n,e){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s,c=r.shape.length,l=ut([o],c);let u=r;l!=null&&(u=Xt({inputs:{x:r},backend:t,attrs:{perm:l}}));const d=ft(1,c)[0];if(d!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${o}`);const h=u.shape[d];let p=tn({inputs:{x:u},backend:t});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){const m=new hy(u.shape,!1,i),g=m.getCustomSetupFunc(f),y=p;p=t.runWebGLProgram(m,[p],p.dtype,g),t.disposeIntermediateTensorInfo(y)}if(a){const f=new hy(u.shape,a,i),m=p;p=t.runWebGLProgram(f,[p],p.dtype),t.disposeIntermediateTensorInfo(m)}if(l!=null){const f=co(l),m=Xt({inputs:{x:p},backend:t,attrs:{perm:f}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(u),m}return p}const xH={kernelName:sl,backendName:"webgl",kernelFunc:bH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const c=t.readSync(r.dataId),l=t.readSync(o.dataId),u=Av(c,l,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const c=t.bufferSync(r),l=t.bufferSync(o),u=Y4(c,l,a,i);return t.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const vH={kernelName:Nh,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s;I(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const i=r.shape[0],c=a==="NHWC"?r.shape[1]:r.shape[2],l=a==="NHWC"?r.shape[2]:r.shape[3],u=a==="NHWC"?r.shape[3]:r.shape[1],d=c*o,h=l*o,p=u/(o*o),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new kH(f,o,a);return t.runWebGLProgram(m,[r],r.dtype)}const NH={kernelName:$h,backendName:"webgl",kernelFunc:CH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zv{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,c=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=e.outChannels/e.inChannels;let y="",b="";s&&(r?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,b="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${u}, ${d});
      const ivec2 pads = ivec2(${c}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${g};
        int q = d2 - d1 * ${g};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${a}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${v}
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qv{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,c=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let w=0;w<f;w++)for(let N=0;N<m;N++)y+=`
          vec4 xTexelR${w}C${N*2} = vec4(0.);
          vec4 wR${w}C${N} = vec4(0.);
          vec4 xR${w}C${N} = vec4(0.);`;for(let w=0;w<f;w++)for(let N=0;N<g;N++){const C=N*2;if(y+=`
          xR = xRCorner + ${w*h};
          xC = xCCorner + ${C*p};
        `,d===1){if(C<m&&(l%2===1?y+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${w}C${C} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${w}C${C}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${w}C${C} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${w}C${C} = vec4(previous.zw, xTexelR${w}C${C}.xy);
                } else {
                  xR${w}C${C} = vec4(0, 0, xTexelR${w}C${C}.xy);
                }
              `:y+=`
                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {
                  xTexelR${w}C${C} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${w}C${C} = vec4(0.);
                }

                xR${w}C${C} = xTexelR${w}C${C};
              `,C+1<m)){const $=l%2===0?Rb(p):p;p%2===0&&l%2===1||p%2!==0&&l%2!==1?(y+=`
                  xCOffset = xC + ${l%2} + ${$};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${w}C${C+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,p>1&&(y+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${a} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${w}C${C} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${w}C${C} = vec4(0.);
                    }
                  `),y+=`
                  xR${w}C${C+1} = vec4(
                    xTexelR${w}C${C}.zw, xTexelR${w}C${C+2}.xy);
                `):y+=`
                  xCOffset = xC + ${$};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${w}C${C+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${w}C${C+1} = xTexelR${w}C${C+2};
                `}}else C<m&&(y+=`
              if(xR >= 0 && xR < ${a}) {
            `,l%2===1?(y+=`
                xCOffset = xC + 1 - ${d};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${w}C${C} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${w}C${C} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${w}C${C+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${w}C${C+2} = vec4(0.);
                }

                xR${w}C${C} = vec4(
                  xTexelR${w}C${C}.zw, xTexelR${w}C${C+2}.zw);
              `,C+1<m&&(y+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${d};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${w}C${C+1} = vec4(xTexelR${w}C${C+2}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${w}C${C} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${w}C${C} = vec4(0.);
                }

                xCOffset = xC + ${d};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${w}C${C+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${w}C${C+2} = vec4(0.);
                }

                xR${w}C${C} = vec4(
                  xTexelR${w}C${C}.xy, xTexelR${w}C${C+2}.xy);
              `,C+1<m&&(y+=`
                  xR${w}C${C+1} = vec4(
                    xTexelR${w}C${C}.zw, xTexelR${w}C${C+2}.zw);
                `)),y+="}");C<m&&(y+=`
            vec4 wTexelR${w}C${C} = getW(${w}, ${C}, d1, q);
            wR${w}C${C} = vec4(wTexelR${w}C${C}.xz, wTexelR${w}C${C}.xz);
          `,C+1<m&&(y+=`
              vec4 wTexelR${w}C${C+1} = getW(${w}, ${C+1}, d1, q);
              wR${w}C${C+1} =
                vec4(wTexelR${w}C${C+1}.xz, wTexelR${w}C${C+1}.xz);`))}for(let w=0;w<f;w++)for(let N=0;N<m;N++)y+=`dotProd += xR${w}C${N} * wR${w}C${N};`;let b="",v="";s&&(r?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`vec4 activation(vec4 x) {
          ${s}
        }`,v="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${u}, ${d});
      const ivec2 pads = ivec2(${c}, ${l});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${y}

        vec4 result = dotProd;
        ${x}
        ${v}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:l}=s;let u=c;u==null&&(u=[1,1]),I(_t(a,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const d=St(r.shape,o.shape,a,u,i,l,!0);let h;return Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new Qv(d):h=new Zv(d),t.runWebGLProgram(h,[r,o],"float32")}const IH={kernelName:rl,backendName:"webgl",kernelFunc:$H};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class TH{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=s-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=s,d=St(r.shape,u,a,i,c,l,!0),h=new SH(d);return t.runWebGLProgram(h,[r,o],"float32")}const EH={kernelName:Ih,backendName:"webgl",kernelFunc:DH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=s,d=St(u,o.shape,a,i,c,l,!0),h=new TH(d);return t.runWebGLProgram(h,[r,o],"float32")}const RH={kernelName:Sh,backendName:"webgl",kernelFunc:AH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OH{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=q(s.shape),a=ae({inputs:{x:s},backend:t,attrs:{shape:[o]}}),i=new OH(o),c=t.runWebGLProgram(i,[a],a.dtype),l=ae({inputs:{x:c},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),l}const _H={kernelName:Wb,backendName:"webgl",kernelFunc:FH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PH{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:c,dilationHeight:l,dilationWidth:u}=e,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s,l=ni(r.shape,o.shape,a,i,"NHWC",c);let u;const d=new PH(l);u=t.runWebGLProgram(d,[r,o],"float32");const h=ae({inputs:{x:u},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(u),h}const MH={kernelName:ol,backendName:"webgl",kernelFunc:LH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH="return (x >= 0.0) ? x : (exp(x) - 1.0);",BH=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,WH=Re({opSnippet:zH,packedOpSnippet:BH}),VH={kernelName:ga,backendName:"webgl",kernelFunc:WH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH="return (b >= 1.0) ? a : a * (b + 1.0);",GH=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,jH=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ni(GH,s.shape,r.shape):new to(UH,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},HH={kernelName:Th,backendName:"webgl",kernelFunc:jH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH=`
  return vec4(equal(a, b));
`,KH="return float(a == b);",XH=Lt({opSnippet:KH,packedOpSnippet:qH,dtype:"bool"}),YH={kernelName:al,backendName:"webgl",kernelFunc:XH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${rf};
  float a1 = ${of};
  float a2 = ${af};
  float a3 = ${cf};
  float a4 = ${lf};
  float a5 = ${uf};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,ZH=Re({opSnippet:JH}),QH={kernelName:ya,backendName:"webgl",kernelFunc:ZH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const my="return exp(x);",ek=Re({opSnippet:my,packedOpSnippet:my,cpuKernelImpl:Q4}),eq={kernelName:ba,backendName:"webgl",kernelFunc:ek};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rh(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let c=r;return r<0&&(I(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+r+1),i.splice(c,0,1),ae({inputs:{x:o},backend:s,attrs:{shape:i}})}const tq={kernelName:il,backendName:"webgl",kernelFunc:rh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gy="return exp(x) - 1.0;",nq=Re({opSnippet:gy,packedOpSnippet:gy,cpuKernelImpl:eU}),sq={kernelName:xa,backendName:"webgl",kernelFunc:nq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yy{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,e,t){const s=t.texData.get(n.dataId),r=q(n.shape),o=n.shape[n.shape.length-1],a=r/o,i=ae({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),c=i.shape,l=new yy("real",c,e),u=new yy("imag",c,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],h=t.runWebGLProgram(l,d,"float32"),p=t.runWebGLProgram(u,d,"float32"),f=js({inputs:{real:h,imag:p},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p);const m=ae({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rq(n){const{inputs:e,backend:t}=n,{input:s}=e;return tk(s,!1,t)}const oq={kernelName:Dh,backendName:"webgl",kernelFunc:rq};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aq{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(s,"value")),t.gl.uniform1f(this.valueLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function em(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||ta(r),o==="string"){const a=so(o,q(s));return a.fill(r),e.makeTensorInfo(s,o,a)}else{const a=new aq(s,r),i=a.getCustomSetupFunc(r);return e.runWebGLProgram(a,[],o,i)}}const iq={kernelName:Eh,backendName:"webgl",kernelFunc:em};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cq{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lq={kernelName:Ah,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new cq(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const by="return floor(x);",uq=Re({opSnippet:by,packedOpSnippet:by,cpuKernelImpl:tU}),dq={kernelName:wa,backendName:"webgl",kernelFunc:uq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hq=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,pq=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,fq=Lt({opSnippet:hq,packedOpSnippet:pq,dtype:"int32"}),mq={kernelName:va,backendName:"webgl",kernelFunc:fq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gq{constructor(e){this.variableNames=["A"];const t=Gt(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yq{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Gt(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq={kernelName:yd,backendName:"webgl",kernelFunc:xq};let Or;function xq(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[c,l]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],d=[l,c,o];(i||a)&&(Or==null&&(Or=document.createElement("canvas").getContext("2d")),Or.canvas.width=c,Or.canvas.height=l,Or.drawImage(r,0,0,c,l),r=Or.canvas);const h=t.makeTensorInfo(u,"int32");t.texData.get(h.dataId).usage=on.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),r);const p=Y().getBool("WEBGL_PACK")?new yq(d):new gq(d),f=t.runWebGLProgram(p,[h],"int32");return t.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=xs(u),g=St(r.shape,o.shape,c,d,l,h,!1,m);let y;const b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=Yv({x:r,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=Jv({x:r,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const x=a!=null,w=i!=null,N=p==="leakyrelu",C=p?Iu(p,!1):null,$=new Xv(g,x,C,w,N),S=[r,o];if(a&&S.push(a),i&&S.push(i),N){const T=t.makeTensorInfo([],"float32",Bs(f,"float32"));S.push(T),b.push(T)}y=t.runWebGLProgram($,S,"float32")}const v=ae({inputs:{x:y},backend:t,attrs:{shape:g.outShape}});return b.push(y),b.forEach(x=>t.disposeIntermediateTensorInfo(x)),v}const vq={kernelName:dc,backendName:"webgl",kernelFunc:wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:l,dilations:u,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),I(_t(c,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`);const g=St(r.shape,o.shape,c,m,l,d,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?Iu(h,y):null,v=[r,o],x=a!=null,w=i!=null,N=h==="leakyrelu";if(x&&v.push(a),w&&v.push(i),N){const S=t.makeTensorInfo([],"float32",Bs(p,"float32"));v.push(S),f.push(S)}let C;y?C=new Qv(g,x,b,w,N):C=new Zv(g,x,b,w,N);const $=t.runWebGLProgram(C,v,"float32");return f.forEach(S=>t.disposeIntermediateTensorInfo(S)),$}const Cq={kernelName:hc,backendName:"webgl",kernelFunc:kq};class Nq{constructor(e,t,s){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=s;const r=Xe(t.length),o=Xe(s.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,a=o[o.length-1],[i,c,l,u]=cp(s,r),d=ae({inputs:{x:r},backend:t,attrs:{shape:[c,a]}}),h=ae({inputs:{x:s},backend:t,attrs:{shape:[q(s.shape)/l,l]}}),p=new Nq(a,u,[c,l]),f=t.runWebGLProgram(p,[h,d],h.dtype),m=ae({inputs:{x:f},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),m}const Iq={kernelName:Rh,backendName:"webgl",kernelFunc:$q};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sq{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=Xe(this.rank),r=Tq(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function Tq(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s,c=Ie(a,r.shape)[0],l=pf(r,o,c,i),u=q(o.shape),d=[],h=ae({inputs:{x:r},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=ae({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,u/l.batchSize]}});d.push(h),d.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=t.bufferSync(p),v=t.bufferSync(h),x=nU(v,b,f);return d.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(l.outputShape,x.dtype,x.values)}const m=new Sq(h.shape,f),g=t.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=ae({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return d.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const Eq={kernelName:ll,backendName:"webgl",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq="return float(a > b);",Rq=`
  return vec4(greaterThan(a, b));
`,Oq=Lt({opSnippet:Aq,packedOpSnippet:Rq,cpuKernelImpl:sU,dtype:"bool"}),Fq={kernelName:ul,backendName:"webgl",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q="return float(a >= b);",Pq=`
  return vec4(greaterThanEqual(a, b));
`,Lq=Lt({opSnippet:_q,packedOpSnippet:Pq,dtype:"bool"}),Mq={kernelName:ka,backendName:"webgl",kernelFunc:Lq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zq(n){const{inputs:e,backend:t}=n,{input:s}=e;return tk(s,!0,t)}const Bq={kernelName:Oh,backendName:"webgl",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq="return float(!isnan(x) && !isinf(x));",Vq=Re({opSnippet:Wq,dtype:"bool"}),Uq={kernelName:Na,backendName:"webgl",kernelFunc:Vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq="return float(isinf(x));",jq=Re({opSnippet:Gq,dtype:"bool"}),Hq={kernelName:$a,backendName:"webgl",kernelFunc:jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq="return float(isnan(x));",Kq=Re({opSnippet:qq,dtype:"bool"}),Xq={kernelName:Ia,backendName:"webgl",kernelFunc:Kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq="return float(a < b);",Jq=`
  return vec4(lessThan(a, b));
`,Zq=Lt({opSnippet:Yq,packedOpSnippet:Jq,cpuKernelImpl:rU,dtype:"bool"}),Qq={kernelName:hl,backendName:"webgl",kernelFunc:Zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK="return float(a <= b);",tK=`
  return vec4(lessThanEqual(a, b));
`,nK=Lt({opSnippet:eK,packedOpSnippet:tK,dtype:"bool"}),sK={kernelName:pl,backendName:"webgl",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rK(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=oU(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const oK={kernelName:_h,backendName:"webgl",kernelFunc:rK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK=`if (x < 0.0) return NAN;
  return log(x);`,iK=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,cK=Re({opSnippet:aK,packedOpSnippet:iK,cpuKernelImpl:aU}),lK={kernelName:Sa,backendName:"webgl",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK="return log(1.0 + x);",dK=Re({opSnippet:uK}),hK={kernelName:Ta,backendName:"webgl",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pK="return float(a >= 1.0 && b >= 1.0);",fK=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,mK=Lt({opSnippet:pK,packedOpSnippet:fK,dtype:"bool"}),gK={kernelName:fl,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK="return float(!(x >= 1.0));",bK=Re({opSnippet:yK}),xK={kernelName:ml,backendName:"webgl",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK="return float(a >= 1.0 || b >= 1.0);",vK=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,kK=Lt({opSnippet:wK,packedOpSnippet:vK,dtype:"bool"}),CK={kernelName:gl,backendName:"webgl",kernelFunc:kK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NK{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${l})`:o===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $K{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${l})`:o===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:c}=s,l=Y().getBool("WEBGL_PACK_NORMALIZATION")?new $K(r.shape,o,a,i,c):new NK(r.shape,o,a,i,c);return t.runWebGLProgram(l,[r],r.dtype)},SK={kernelName:yl,backendName:"webgl",kernelFunc:IK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TK{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=s,d=new TK(r.shape,i,c,l,u);return t.runWebGLProgram(d,[r,o,a],r.dtype)},EK={kernelName:Ph,backendName:"webgl",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(n,e,t,s){const r=q(e),a=q(n.shape)/r,i=ae({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),c=Sr(i,n.dtype,"max",s),l=ae({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,c=Ie(o,r.shape);let l=c;const u=ut(l,i),d=u!=null,h=t.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const v=t.texData.get(p.dataId).values,x=new Array(i);for(let C=0;C<x.length;C++)x[C]=r.shape[u[C]];const w=Jf(v,r.shape,r.dtype,u,x);p=t.makeTensorInfo(x,r.dtype);const N=t.texData.get(p.dataId);N.values=w}else p=Su(r,u,t);l=ft(l.length,i)}Pt("max",l,i);const[f,m]=Tt(p.shape,l);let g=f;a&&(g=pt(f,c));let y;if(h){const v=t.texData.get(p.dataId).values,x=iU(v,q(m),g,r.dtype);y=t.makeTensorInfo(g,r.dtype);const w=t.texData.get(y.dataId);w.values=x}else y=AK(p,m,g,t);return d&&t.disposeIntermediateTensorInfo(p),y}const RK={kernelName:bl,backendName:"webgl",kernelFunc:nk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK=_v+`
  return max(a, b);
`,FK=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+$u+`
  return result;
`,_K=Lt({opSnippet:OK,packedOpSnippet:FK,cpuKernelImpl:cU}),PK={kernelName:Da,backendName:"webgl",kernelFunc:_K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;ki(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,l=1;I(_t(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const u=In(r.shape,o,a,l,i,c);if(u.filterWidth===1&&u.filterHeight===1&&Le(u.inShape,u.outShape))return tn({inputs:{x:r},backend:t});const d=new Ko(u,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const MK={kernelName:xl,backendName:"webgl",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dataFormat:c,dimRoundingMode:l}=s,u=[1,1,1],d=bs(r.shape,o,a,u,i,l,c),h=new Qf(d,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const BK={kernelName:wl,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WK{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,c=a-1-e.padInfo.left,l=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class VK{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=c-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,f=c*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=s,d=[1,1,1],h=bs(a.shape,i,c,d,l,u),p=new Qf(h,"max",!0),f=t.runWebGLProgram(p,[a],a.dtype),m=new VK(h),g=t.runWebGLProgram(m,[r,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}const GK={kernelName:Mh,backendName:"webgl",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,i=o;ki([o,a],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=s,h=In(i.shape,c,l,1,u,d),p=!0,f=new Ko(h,"max",p),m=t.runWebGLProgram(f,[i],i.dtype),g=new WK(h),y=t.runWebGLProgram(g,[r,m],i.dtype);return t.disposeIntermediateTensorInfo(m),y}const HK={kernelName:Lh,backendName:"webgl",kernelFunc:jK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(n,e,t,s){let r=new Ko(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Ko(t,"max",!0,!0,e);const a=s.runWebGLProgram(r,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK={kernelName:zh,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,c=t;I(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];I(_t(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const u=In(s.shape,r,o,l,a),[d,h]=qK(s,i,u,c);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(n,e,t,s){const r=q(e),a=q(n.shape)/r,i=ae({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),c=Sr(i,"float32","mean",s),l=ae({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK={kernelName:vl,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,a=t,i=s.shape.length,c=Ie(o,s.shape);let l=c;const u=ut(l,i),d=u!=null,h=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const x=a.texData.get(f.dataId).values,w=new Array(i);for(let $=0;$<w.length;$++)w[$]=s.shape[u[$]];const N=Jf(x,s.shape,s.dtype,u,w);f=a.makeTensorInfo(w,s.dtype);const C=a.texData.get(f.dataId);C.values=N}else f=Su(s,u,a);p.push(f),l=ft(l.length,i)}Pt("sum",l,i);const[m,g]=Tt(f.shape,l);let y=m;r&&(y=pt(m,c));const b=XK(f,g,y,a);for(const v of p)a.disposeIntermediateTensorInfo(v);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Ie(o,r.shape);let l=c;const u=ut(l,i);let d=r;u!=null&&(d=Xt({inputs:{x:r},backend:t,attrs:{perm:u}}),l=ft(l.length,r.shape.length)),Pt("min",l,i);const[h,p]=Tt(d.shape,l),f=q(p),m=ae({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Sr(m,m.dtype,"min",t);let y;if(a){const b=pt(h,c);y=ae({inputs:{x:g},backend:t,attrs:{shape:b}})}else y=ae({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(d),y}const ZK={kernelName:kl,backendName:"webgl",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK=_v+`
  return min(a, b);
`,eX=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+$u+`
  return result;
`,tX=Lt({opSnippet:QK,packedOpSnippet:eX,cpuKernelImpl:lU}),nX={kernelName:Ea,backendName:"webgl",kernelFunc:tX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sX{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);const r=e.length,o=Xe(r),a=t.map(u=>u[0]).join(","),i=t.map((u,d)=>u[0]+e[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rX{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=Xe(r),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),c=Ut("rc",r),l=Ut("source",r),u=`${c[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${c[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${c[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${c[r-2]} += 1;
        if(${c[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${c[r-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,a=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rX(s.shape,r,o):new sX(s.shape,r,o);return e.runWebGLProgram(a,[s],s.dtype)},aX={kernelName:Cl,backendName:"webgl",kernelFunc:oX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iX=`if (b == 0.0) return NAN;
  return mod(a, b);`,cX=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+$u+`
  return result;
`,lX=Lt({opSnippet:iX,packedOpSnippet:cX}),uX={kernelName:Aa,backendName:"webgl",kernelFunc:lX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dX{constructor(e,t,s){this.variableNames=["probs"],this.outputShape=[e,s],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(s,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hX=`
if (a == b) {
  return 1.0;
};
return a / b;`,pX=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,sk=Lt({opSnippet:hX,packedOpSnippet:pX,checkOutOfBounds:!0}),fX={kernelName:ma,backendName:"webgl",kernelFunc:sk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xy="return a - b;",rk=Lt({opSnippet:xy,packedOpSnippet:xy,supportsComplex:!0,cpuKernelImpl:yU}),mX={kernelName:qa,backendName:"webgl",kernelFunc:rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=Ie([o],r.shape),i=nk({inputs:{x:r},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),c=pt(i.shape,a),l=ae({inputs:{x:i},backend:t,attrs:{shape:c}}),u=rk({inputs:{a:r,b:l},backend:t}),d=ek({inputs:{x:u},backend:t}),h=Zf({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),p=ae({inputs:{x:h},backend:t,attrs:{shape:c}}),f=sk({inputs:{a:d,b:p},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}const gX={kernelName:Bl,backendName:"webgl",kernelFunc:ok};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yX(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s,c=i?r:ok({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new dX(l,u,o),h=d.getCustomSetupFunc(a),p=t.runWebGLProgram(d,[c],"int32",h);return i||t.disposeIntermediateTensorInfo(c),p}const bX={kernelName:Bh,backendName:"webgl",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wy="return -x;";function xX(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[a,i]=dU(o.values,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,a)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Vr(s.shape,wy):r=new Es(s.shape,wy),t.runWebGLProgram(r,[s],s.dtype)}const wX={kernelName:Nl,backendName:"webgl",kernelFunc:xX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX=Up;function kX(n){uo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s,l=t.readSync(r.dataId),u=t.readSync(o.dataId),{selectedIndices:d}=vX(l,u,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const CX={kernelName:Wh,backendName:"webgl",kernelFunc:kX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NX=Gp;function $X(n){uo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=s,u=t.readSync(r.dataId),d=t.readSync(o.dataId),{selectedIndices:h,validOutputs:p}=NX(u,d,a,i,c,l);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const IX={kernelName:Vh,backendName:"webgl",kernelFunc:$X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SX=jp;function TX(n){uo("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=s,u=t.readSync(r.dataId),d=t.readSync(o.dataId),h=a,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=SX(u,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const DX={kernelName:Uh,backendName:"webgl",kernelFunc:TX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EX{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AX=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{depth:o,onValue:a,offValue:i}=s,c=q(r.shape),l=new EX(c,o,a,i),u=ae({inputs:{x:r},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(l,[u],r.dtype);t.disposeIntermediateTensorInfo(u);const h=[...r.shape,o],p=ae({inputs:{x:d},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(d),p},RX={kernelName:Sl,backendName:"webgl",kernelFunc:AX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lc(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Ii({inputs:{input:s},backend:t}),o=Lc({inputs:{x:r},backend:t}),a=Tu({inputs:{input:s},backend:t}),i=Lc({inputs:{x:a},backend:t}),c=js({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return em({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const OX={kernelName:Gl,backendName:"webgl",kernelFunc:Lc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Ii({inputs:{input:s},backend:t}),o=ak({inputs:{x:r},backend:t}),a=Tu({inputs:{input:s},backend:t}),i=Lc({inputs:{x:a},backend:t}),c=js({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return em({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const FX={kernelName:Il,backendName:"webgl",kernelFunc:ak};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _X(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return rh({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(u=>{Uc(o,u.shape,"All tensors passed to stack must have matching shapes"),I(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(u=>{const d=rh({inputs:{input:u},backend:t,attrs:{dim:r}});return i.push(d),d}),l=Kv({inputs:c,backend:t,attrs:{axis:r}});return i.forEach(u=>t.disposeIntermediateTensorInfo(u)),l}const PX={kernelName:Tl,backendName:"webgl",kernelFunc:_X};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LX{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);const r=e.length,o=Xe(r),a=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};
        uniform float value;

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});
      uniform float value;

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(s,"value")),t.gl.uniform1f(this.valueLoc,e)}}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MX{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,o=Xe(r),a=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),c=Ut("rc",r),l=Ut("source",r),u=`${c[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${c[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${c[r-2]} += 1;
       if(${c[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${c[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${d});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});
      uniform float value;

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(s,"value")),t.gl.uniform1f(this.valueLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ik=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s,i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MX(r.shape,o,a):new LX(r.shape,o,a),c=i.getCustomSetupFunc(a);return t.runWebGLProgram(i,[r],r.dtype,c)},zX={kernelName:Dl,backendName:"webgl",kernelFunc:ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,WX=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+$u+`
  return result;
`,VX=Lt({opSnippet:BX,packedOpSnippet:WX}),UX={kernelName:Oa,backendName:"webgl",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=[],l=Ie(o,r.shape);let u=l;const d=ut(u,i);let h=r;d!=null&&(h=Xt({inputs:{x:r},backend:t,attrs:{perm:d}}),u=ft(u.length,i),c.push(h)),Pt("prod",u,i);let p;if(t.shouldExecuteOnCPU([h])){const f=t.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=hU(h.shape,h.dtype,f,u);p=t.makeTensorInfo(g,y,m)}else{const[f,m]=Tt(h.shape,u),g=q(m),y=ae({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}}),b=sp(r.dtype),v=Sr(y,b,"prod",t);p=ae({inputs:{x:v},backend:t,attrs:{shape:f}}),c.push(y),c.push(v)}if(a){c.push(p);const f=pt(p.shape,l);p=ae({inputs:{x:p},backend:t,attrs:{shape:f}})}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const jX={kernelName:Gh,backendName:"webgl",kernelFunc:GX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:a}=t,i=pU(s,r,o,a);return e.makeTensorInfo([i.length],a,i)},HX={kernelName:jh,backendName:"webgl",kernelFunc:ck};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX="return 1.0 / x;",KX=Re({opSnippet:qX}),XX={kernelName:Fa,backendName:"webgl",kernelFunc:KX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX=Wn+`
  return (x < 0.0) ? 0.0 : x;
`,JX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ZX=Re({opSnippet:YX,packedOpSnippet:JX}),QX={kernelName:_a,backendName:"webgl",kernelFunc:ZX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6=Wn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,t6=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,n6=Re({opSnippet:e6,packedOpSnippet:t6}),s6={kernelName:Pa,backendName:"webgl",kernelFunc:n6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r6{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,c,l]=e;this.outputShape=[a,t,s,l];const u=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o6{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,c,l]=e;this.outputShape=[a,t,s,l];const u=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,l]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new o6(r.shape,c,l,o,a):new r6(r.shape,c,l,o,a);return t.runWebGLProgram(u,[r],"float32")}const i6={kernelName:Ol,backendName:"webgl",kernelFunc:a6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c6{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,i]=e,c=[s&&a>1?r-1:r,s&&i>1?o-1:o],l=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=c[0]/l[0],d=c[1]/l[1],h=1/u,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,i=new c6(o.shape,r.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const u6={kernelName:Kh,backendName:"webgl",kernelFunc:l6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d6{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,c,l]=e;this.outputShape=[a,t,s,l];const u=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,l]=i,u=new d6(r.shape,c,l,o,a);return t.runWebGLProgram(u,[r],r.dtype)}const p6={kernelName:Rl,backendName:"webgl",kernelFunc:h6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f6{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,i]=e,c=[s&&a>1?r-1:r,s&&i>1?o-1:o],l=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=c[0]/l[0],d=c[1]/l[1],h=1/u,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,i=new f6(o.shape,r.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const g6={kernelName:qh,backendName:"webgl",kernelFunc:m6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y6{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,c)=>r(c)).join(","),a=Xe(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b6{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Ut("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=Xe(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(r.slice())};
          if(${o}){
            result.g = ${l(r.slice())};
          }
          if(${a}) {
            result.b = ${u(r.slice())};
            if(${o}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(f){return h(f)}function l(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=e.map((b,v)=>p(v,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,a=r.shape.length,i=Ie(o,r.shape);if(a===0)return tn({inputs:{x:r},backend:t});const c=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new b6(r.shape,i):new y6(r.shape,i);return t.runWebGLProgram(c,[r],r.dtype)}const w6={kernelName:Fl,backendName:"webgl",kernelFunc:x6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v6{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        uniform vec4 params;
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}getCustomSetupFunc(e,t,s,r){return(o,a)=>{this.paramsLoc==null&&(this.paramsLoc=o.getUniformLocationNoThrow(a,"params")),o.gl.uniform4f(this.paramsLoc,e,t,s,r)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:np,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,i=t,c=new v6(s.shape,o),[l,u]=tf(a,s.shape[1],s.shape[2]),d=c.getCustomSetupFunc(l,u,Math.sin(r),Math.cos(r));return i.runWebGLProgram(c,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,N6=Re({opSnippet:C6}),$6={kernelName:La,backendName:"webgl",kernelFunc:N6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6="return inversesqrt(x);",S6=Re({opSnippet:I6,cpuKernelImpl:fU}),T6={kernelName:Ma,backendName:"webgl",kernelFunc:S6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lk{constructor(e,t,s,r,o,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=Xe(o.length),l=Xe(a.length);let u="";s===1?u="i":s===2&&(u="i, j");const d=`getIndices(${u})`;let h="";r===1?h="i":r===2&&(h="i, coords[1]");const p=`getUpdates(${h})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=ti(o,r,a),h=[d/l,l];if(d===0)return t.makeTensorInfo(a,r.dtype);const p=ae({inputs:{x:r},backend:t,attrs:{shape:[c,i]}}),f=ae({inputs:{x:o},backend:t,attrs:{shape:[c,l]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new lk(c,i,p.shape.length,f.shape.length,u,h),y=t.runWebGLProgram(g,[f,p,m],f.dtype),b=ae({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),b}const E6={kernelName:Xh,backendName:"webgl",kernelFunc:D6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A6{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&c.push(`${i[u]}`);r=c.join(),o=l.join()}const a=Xe(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,a=new A6(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(a,[s,r,o],ln(r.dtype,o.dtype))}const O6={kernelName:_l,backendName:"webgl",kernelFunc:R6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${lu};
  float scale = ${uu};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,_6=Re({opSnippet:F6}),P6={kernelName:za,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6="return 1.0 / (1.0 + exp(-1.0 * x));",M6=Re({opSnippet:L6}),z6={kernelName:Ua,backendName:"webgl",kernelFunc:M6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,W6=Re({opSnippet:B6}),V6={kernelName:Va,backendName:"webgl",kernelFunc:W6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6=Bv+`
  return sin(x);
`,G6=Re({opSnippet:U6}),j6={kernelName:Ba,backendName:"webgl",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,q6=Re({opSnippet:H6}),K6={kernelName:Wa,backendName:"webgl",kernelFunc:q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Y6=Re({opSnippet:X6}),J6={kernelName:Ga,backendName:"webgl",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;I(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((y,b)=>y*b),c=[[0,0]];c.push(...a);for(let y=1+o.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=ik({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),d=li(u.shape,o,i,!1),h=ui(d.length,o.length,!1),p=di(u.shape,o,i,!1),f=ae({inputs:{x:u},backend:t,attrs:{shape:d}}),m=Xt({inputs:{x:f},backend:t,attrs:{perm:h}}),g=ae({inputs:{x:m},backend:t,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},Q6={kernelName:Ml,backendName:"webgl",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:l,strides:u,outputSize:d}=ti(o,r,i),h=!1,p=new lk(l,c,r.shape.length,o.shape.length,u,[d,1],h),f=t.runWebGLProgram(p,[o,r,a],o.dtype),m=ae({inputs:{x:f},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(f),m}const t5={kernelName:Jh,backendName:"webgl",kernelFunc:e5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Ie(a,r.shape)[0],c=hf(r,o,i),l=r.shape.length,u=new Array(l).fill(0),d=r.shape.slice();return c.map(h=>{const p=[...d];p[i]=h;const f=$i({inputs:{x:r},backend:t,attrs:{begin:u,size:p}});return u[i]+=h,f})}const s5={kernelName:zl,backendName:"webgl",kernelFunc:n5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5="return sqrt(x);",o5=Re({opSnippet:r5}),a5={kernelName:ja,backendName:"webgl",kernelFunc:o5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5="return x * x;",c5=Re({opSnippet:i5}),l5={kernelName:Yh,backendName:"webgl",kernelFunc:c5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vy="return (a - b) * (a - b);",u5=Lt({opSnippet:vy,packedOpSnippet:vy}),d5={kernelName:Ha,backendName:"webgl",kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=Wn+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Es(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const p5={kernelName:Ja,backendName:"webgl",kernelFunc:h5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f5{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=Xe(s.length),a=Xe(s.length);let i="";if(r===1)i="coords * strides + begin";else{let c=0;i=s.map((l,u)=>(c++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${c-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=hp(r.shape,o,a,i,c,l,u,d,h),v=ae({inputs:{x:r},backend:t,attrs:{shape:y}});let x;if(p){const N=$i({inputs:{x:v},backend:t,attrs:{begin:f,size:g}});x=ae({inputs:{x:N},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(N)}else if(b.some(N=>N===0))x=t.makeTensorInfo(b,r.dtype,[]);else if(t.shouldExecuteOnCPU([v])){const $=t.texData.get(v.dataId).values,S=Te(v.shape,v.dtype,$),T=gU(b,S,m,f);x=t.makeTensorInfo(b,v.dtype,T.values)}else{const C=new f5(f,m,b);x=t.runWebGLProgram(C,[v],v.dtype)}const w=ae({inputs:{x},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(x),w}const g5={kernelName:Zh,backendName:"webgl",kernelFunc:m5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5="return tan(x);",b5=Re({opSnippet:y5}),x5={kernelName:Ka,backendName:"webgl",kernelFunc:b5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,v5=Re({opSnippet:w5}),k5={kernelName:Xa,backendName:"webgl",kernelFunc:v5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C5{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const r=Xe(this.rank),o=N5(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function N5(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"){const l=t.readSync(r.dataId).map(h=>Hr(h)),u=Te(r.shape,r.dtype,l),d=bU(u,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new C5(r.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const $5={kernelName:Ya,backendName:"webgl",kernelFunc:uk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s,i=t.readSync(r.dataId),[c,l]=xU(i,r.shape,r.dtype,o,a);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const S5={kernelName:Qh,backendName:"webgl",kernelFunc:I5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T5{constructor(e,t,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let c;switch(r){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D5(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:l}=s,[u,d,h,p]=r.shape,[f,m]=l??[d,h],g=[u,f,m,p],y=new T5(d,h,a,i,c,g);return t.runWebGLProgram(y,[r,o],"float32")}const E5={kernelName:ep,backendName:"webgl",kernelFunc:D5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;ki(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:c,indices:l}=wU(a,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,i),s.makeTensorInfo([l.length],"int32",l)]}const R5={kernelName:tp,backendName:"webgl",kernelFunc:A5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,c=r.shape[o],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==o&&(l[u++]=a.shape[m]);const d=[],h=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[o]=m;const g=$i({inputs:{x:a},backend:t,attrs:{begin:h,size:p}}),y=ae({inputs:{x:g},backend:t,attrs:{shape:l}});f[m]=y,d.push(g)}return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const F5={kernelName:Vl,backendName:"webgl",kernelFunc:O5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _5{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const c="0.0",l="sumValue",u=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s,i=r.shape.length,c=[];let l=0;const u=ut([l],i);let d=r;u!=null&&(d=Xt({inputs:{x:r},backend:t,attrs:{perm:u}}),c.push(d),l=ft(1,i)[0]);const h=y0(d.shape,l,a),p=q([d.shape[l]]),f=ae({inputs:{x:d},backend:t,attrs:{shape:[-1,p]}});c.push(f);const m=sp(r.dtype),g=(x,w,N,C,$)=>{const S=x.shape[0],T=x.shape[1],E=g0(T,$),F={windowSize:E,inSize:T,batchSize:S,numSegments:$},O=new _5(F,w),L=t.compileAndRun(O,[x,N],C);if(c.push(L),L.shape[1]===$)return L;const z=ck({backend:t,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),M=uk({inputs:{x:z},backend:t,attrs:{reps:[T/E]}});return c.push(z),c.push(M),g(L,w,M,C,$)},y=g(f,"unsortedSegmentSum",o,m,a),b=ae({inputs:{x:y},backend:t,attrs:{shape:h}});let v=b;if(u!=null){c.push(b);const x=co(u);v=Xt({inputs:{x:v},backend:t,attrs:{perm:x}})}return c.forEach(x=>t.disposeIntermediateTensorInfo(x)),v}const L5={kernelName:Ul,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=[SK,EK,mG,yG,wG,CG,$G,TG,EG,RG,PG,MG,WG,GG,JG,qG,ej,rj,nj,cj,uj,hj,gj,Cj,$j,Aj,Oj,Lj,Bj,YU,Gj,eH,nH,Kj,aH,cH,rH,dH,fH,yH,xH,vH,NH,EH,RH,IH,_H,MH,VH,HH,YH,QH,eq,tq,sq,oq,iq,lq,dq,mq,bq,vq,Cq,Iq,Eq,Fq,Mq,XU,Bq,Uj,Uq,Hq,Xq,ZU,Qq,sK,oK,hK,lK,gK,xK,CK,RK,BK,MK,GK,HK,KK,PK,YK,ZK,nX,aX,uX,bX,sG,wX,CX,IX,DX,Sj,RX,FX,PX,zX,UX,eG,jX,HX,Tj,fX,XX,s6,QX,oG,i6,u6,p6,g6,w6,k6,$6,T6,E6,O6,P6,z6,V6,j6,K6,vj,gX,J6,Q6,t5,s5,a5,l5,d5,p5,g5,mX,hG,x5,k5,$5,S5,E5,pG,R5,F5,L5,OX];for(const n of M5)Vb(n);/**
 * @license
 * Copyright 2019 Victor Dibia.
 * Handtrack.js - A library for prototyping realtime hand tracking using neural networks.
 * Licensed under the MIT License (the "License");
 * Code snippets from the tensorflow coco-ssd example are reused here - https://github.com/tensorflow/tfjs-models/tree/master/coco-ssd
 * =============================================================================
 */const z5="https://cdn.jsdelivr.net/npm/handtrackjs@latest/models/webmodel/",B5={1:"open",2:"closed",3:"pinch",4:"point",5:"face",6:"pointtip",7:"pinchtip"},W5={flipHorizontal:!1,outputStride:16,imageScaleFactor:1,maxNumBoxes:20,iouThreshold:.2,scoreThreshold:.6,modelType:"ssd320fpnlite",modelSize:"small",bboxLineWidth:"2",fontSize:17,basePath:z5,labelMap:B5,renderThresholds:null},V5={large:"base",medium:"fp16",small:"int8"},ky={open:"#374151",closed:"#B91C1C",pinch:"#F59E0B",point:"#10B981",face:"#3B82F6",pointtip:"#6366F1",pinchtip:"#EC4899"},Cy={ssd320fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ssd640fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],centernet512fpn:["Identity_4:0","Identity:0","Identity_2:0"]};async function U5(n){let e=Object.assign({},W5,n);const t=new G5(e);return await t.load(),t}class G5{constructor(e){this.modelPath=e.basePath+e.modelType+"/"+(V5[e.modelSize]||"base")+"/model.json ",this.modelParams=e}async load(){this.fps=0,this.model=await GP(this.modelPath);const e=ht([1,300,300,3],"int32"),t=await this.model.executeAsync(e,Cy[this.modelParams.modelType]);t.map(async s=>await s.data()),t.map(async s=>s.dispose()),ve(e)}async detect(e){let t=Date.now();const[s,r]=j5(e),o=Ny(this.modelParams.imageScaleFactor,s,this.modelParams.outputStride),a=Ny(this.modelParams.imageScaleFactor,r,this.modelParams.outputStride),i=P(()=>{const l=QS(e);return this.modelParams.flipHorizontal?l.reverse(1).resizeBilinear([o,a]).expandDims(0).toInt():l.resizeBilinear([o,a]).expandDims(0).toInt()}),c=this;return this.model.executeAsync(i,Cy[this.modelParams.modelType]).then(function(l){i.dispose();let u=[];if(c.modelParams.modelType==="centernet512fpn"){const h=l[0].dataSync(),p=l[1].arraySync(),f=l[2].dataSync();ve(l),u=c.buildDetectObjectsCenternet(r,s,p[0],h,f),console.log(u)}else{const h=l[0].dataSync(),p=l[1].dataSync();ve(l);const[f,m]=H5(h,l[0].shape[1],l[0].shape[2]),g=tT();Mm("cpu");const y=P(()=>{const v=Ki(p,[l[1].shape[1],l[1].shape[3]]);return or.nonMaxSuppression(v,f,c.modelParams.maxNumBoxes,c.modelParams.iouThreshold,c.modelParams.scoreThreshold)}),b=y.dataSync();y.dispose(),Mm(g),u=c.buildDetectedObjects(r,s,p,f,b,m)}let d=Date.now();return c.fps=Math.round(1e3/(d-t)),u})}buildDetectedObjects(e,t,s,r,o,a){const i=o.length,c=[];for(let l=0;l<i;l++){const u=[];for(let g=0;g<4;g++)u[g]=s[o[l]*4+g];const d=u[0]*t,h=u[1]*e,p=u[2]*t,f=u[3]*e;u[0]=h,u[1]=d,u[2]=f-h,u[3]=p-d;const m=Math.round(a[o[l]])+1;c.push({bbox:u,class:m,label:this.modelParams.labelMap[m],score:r[o[l]].toFixed(2)})}return c}buildDetectObjectsCenternet(e,t,s,r,o){const a=[];for(let i=0;i<r.length;i++){const c=s[i],l=c[0]*t,u=c[1]*e,d=c[2]*t,h=c[3]*e;c[0]=u,c[1]=l,c[2]=h-u,c[3]=d-l;const p=Math.round(o[i])+1;a.push({bbox:c,class:p,label:this.modelParams.labelMap[p],score:r[i].toFixed(2)})}return a.slice(0,10)}getFPS(){return this.fps}setModelParameters(e){this.modelParams=Object.assign({},this.modelParams,e)}getModelParameters(){return this.modelParams}roundRect(e,t,s,r,o,a,i,c){if(typeof c>"u"&&(c=!0),typeof a>"u"&&(a=5),typeof a=="number")a={tl:a,tr:a,br:a,bl:a};else{var l={tl:0,tr:0,br:0,bl:0};for(var u in l)a[u]=a[u]||l[u]}e.beginPath(),e.moveTo(t+a.tl,s),e.lineTo(t+r-a.tr,s),e.quadraticCurveTo(t+r,s,t+r,s+a.tr),e.lineTo(t+r,s+o-a.br),e.quadraticCurveTo(t+r,s+o,t+r-a.br,s+o),e.lineTo(t+a.bl,s+o),e.quadraticCurveTo(t,s+o,t,s+o-a.bl),e.lineTo(t,s+a.tl),e.quadraticCurveTo(t,s,t+a.tl,s),e.closePath(),i&&e.fill(),c&&e.stroke()}renderPredictions(e,t,s,r){s.clearRect(0,0,t.width,t.height),t.width=r.width,t.height=r.height,t.style.height=parseInt(t.style.width)*(r.height/r.width).toFixed(2)+"px",s.save(),this.modelParams.flipHorizontal&&(s.scale(-1,1),s.translate(-r.width,0)),s.drawImage(r,0,0,r.width,r.height),s.restore(),s.font="bold "+this.modelParams.fontSize+"px Arial";const o=this.modelParams.renderThresholds;for(let a=0;a<e.length;a++){const i=e[a];(!o||i.score>o[i.label])&&(s.beginPath(),s.fillStyle="rgba(255, 255, 255, 0.6)",s.fillRect(i.bbox[0]+1,i.bbox[1]+1,i.bbox[2]-1,this.modelParams.fontSize*1.5),s.lineWidth=this.modelParams.bboxLineWidth,this.roundRect(s,i.bbox[0],i.bbox[1],i.bbox[2],i.bbox[3],5,!1,!0),s.strokeStyle=ky[i.label],s.fillStyle=ky[i.label],s.stroke(),s.beginPath(),s.arc(i.bbox[0]+i.bbox[2]/2,i.bbox[1]+i.bbox[3]/2,2,0,2*Math.PI),s.fill(),s.stroke(),s.fillText(i.score+" | "+i.label,i.bbox[0]+5,i.bbox[1]+this.modelParams.fontSize*1.1))}s.fillStyle="rgba(255, 255, 255, 0.6)",this.roundRect(s,10,10,this.modelParams.fontSize*4.6,this.modelParams.fontSize+8,5,!0,!1),s.strokeStyle="#374151",s.fillStyle="#374151",s.font="bold "+this.modelParams.fontSize+"px Arial",s.fillText("FPS: "+this.fps,18,this.modelParams.fontSize+12)}dispose(){this.model&&this.model.dispose()}}function Ny(n,e,t){const s=e*n-1;return s-s%t+1}function j5(n){return n instanceof it?[n.shape[0],n.shape[1]]:[n.height,n.width]}function H5(n,e,t){const s=[],r=[];for(let o=0;o<e;o++){let a=Number.MIN_VALUE,i=-1;for(let c=0;c<t;c++)n[o*t+c]>a&&(a=n[o*t+c],i=c);s[o]=a,r[o]=i}return[s,r]}var lc={exports:{}},q5=lc.exports,$y;function K5(){return $y||($y=1,(function(n,e){(function(s,r){n.exports=r(gk())})(q5,function(t){return(function(s){var r={};function o(a){if(r[a])return r[a].exports;var i=r[a]={i:a,l:!1,exports:{}};return s[a].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=s,o.c=r,o.d=function(a,i,c){o.o(a,i)||Object.defineProperty(a,i,{enumerable:!0,get:c})},o.r=function(a){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},o.t=function(a,i){if(i&1&&(a=o(a)),i&8||i&4&&typeof a=="object"&&a&&a.__esModule)return a;var c=Object.create(null);if(o.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:a}),i&2&&typeof a!="string")for(var l in a)o.d(c,l,(function(u){return a[u]}).bind(null,l));return c},o.n=function(a){var i=a&&a.__esModule?function(){return a.default}:function(){return a};return o.d(i,"a",i),i},o.o=function(a,i){return Object.prototype.hasOwnProperty.call(a,i)},o.p="",o(o.s="./src/react-webcam.tsx")})({"./src/react-webcam.tsx":(function(s,r,o){o.r(r);var a=o("react"),i=(function(){var h=function(p,f){return h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(m,g){m.__proto__=g}||function(m,g){for(var y in g)g.hasOwnProperty(y)&&(m[y]=g[y])},h(p,f)};return function(p,f){h(p,f);function m(){this.constructor=p}p.prototype=f===null?Object.create(f):(m.prototype=f.prototype,new m)}})(),c=function(){return c=Object.assign||function(h){for(var p,f=1,m=arguments.length;f<m;f++){p=arguments[f];for(var g in p)Object.prototype.hasOwnProperty.call(p,g)&&(h[g]=p[g])}return h},c.apply(this,arguments)},l=function(h,p){var f={};for(var m in h)Object.prototype.hasOwnProperty.call(h,m)&&p.indexOf(m)<0&&(f[m]=h[m]);if(h!=null&&typeof Object.getOwnPropertySymbols=="function")for(var g=0,m=Object.getOwnPropertySymbols(h);g<m.length;g++)p.indexOf(m[g])<0&&Object.prototype.propertyIsEnumerable.call(h,m[g])&&(f[m[g]]=h[m[g]]);return f};(function(){typeof window>"u"||(navigator.mediaDevices===void 0&&(navigator.mediaDevices={}),navigator.mediaDevices.getUserMedia===void 0&&(navigator.mediaDevices.getUserMedia=function(p){var f=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return f?new Promise(function(m,g){f.call(navigator,p,m,g)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}))})();function u(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)}var d=(function(h){i(p,h);function p(f){var m=h.call(this,f)||this;return m.canvas=null,m.ctx=null,m.requestUserMediaId=0,m.unmounted=!1,m.state={hasUserMedia:!1},m}return p.prototype.componentDidMount=function(){var f=this,m=f.state,g=f.props;if(this.unmounted=!1,!u()){g.onUserMediaError("getUserMedia not supported");return}m.hasUserMedia||this.requestUserMedia(),g.children&&typeof g.children!="function"&&console.warn("children must be a function")},p.prototype.componentDidUpdate=function(f){var m=this.props;if(!u()){m.onUserMediaError("getUserMedia not supported");return}var g=JSON.stringify(f.audioConstraints)!==JSON.stringify(m.audioConstraints),y=JSON.stringify(f.videoConstraints)!==JSON.stringify(m.videoConstraints),b=f.minScreenshotWidth!==m.minScreenshotWidth,v=f.minScreenshotHeight!==m.minScreenshotHeight;(y||b||v)&&(this.canvas=null,this.ctx=null),(g||y)&&(this.stopAndCleanup(),this.requestUserMedia())},p.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},p.stopMediaStream=function(f){f&&(f.getVideoTracks&&f.getAudioTracks?(f.getVideoTracks().map(function(m){f.removeTrack(m),m.stop()}),f.getAudioTracks().map(function(m){f.removeTrack(m),m.stop()})):f.stop())},p.prototype.stopAndCleanup=function(){var f=this.state;f.hasUserMedia&&(p.stopMediaStream(this.stream),f.src&&window.URL.revokeObjectURL(f.src))},p.prototype.getScreenshot=function(f){var m=this,g=m.state,y=m.props;if(!g.hasUserMedia)return null;var b=this.getCanvas(f);return b&&b.toDataURL(y.screenshotFormat,y.screenshotQuality)},p.prototype.getCanvas=function(f){var m=this,g=m.state,y=m.props;if(!this.video||!g.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var b=this.video.videoWidth,v=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var x=b/v;b=y.minScreenshotWidth||this.video.clientWidth,v=b/x,y.minScreenshotHeight&&v<y.minScreenshotHeight&&(v=y.minScreenshotHeight,b=v*x)}this.canvas=document.createElement("canvas"),this.canvas.width=f?.width||b,this.canvas.height=f?.height||v,this.ctx=this.canvas.getContext("2d")}var w=this,N=w.ctx,C=w.canvas;return N&&C&&(C.width=f?.width||C.width,C.height=f?.height||C.height,y.mirrored&&(N.translate(C.width,0),N.scale(-1,1)),N.imageSmoothingEnabled=y.imageSmoothing,N.drawImage(this.video,0,0,f?.width||C.width,f?.height||C.height),y.mirrored&&(N.scale(-1,1),N.translate(-C.width,0))),C},p.prototype.requestUserMedia=function(){var f=this,m=this.props,g=function(v,x){var w={video:typeof x<"u"?x:!0};m.audio&&(w.audio=typeof v<"u"?v:!0),f.requestUserMediaId++;var N=f.requestUserMediaId;navigator.mediaDevices.getUserMedia(w).then(function(C){f.unmounted||N!==f.requestUserMediaId?p.stopMediaStream(C):f.handleUserMedia(null,C)}).catch(function(C){f.handleUserMedia(C)})};if("mediaDevices"in navigator)g(m.audioConstraints,m.videoConstraints);else{var y=function(v){return{optional:[{sourceId:v}]}},b=function(v){var x=v.deviceId;return typeof x=="string"?x:Array.isArray(x)&&x.length>0?x[0]:typeof x=="object"&&x.ideal?x.ideal:null};MediaStreamTrack.getSources(function(v){var x=null,w=null;v.forEach(function($){$.kind==="audio"?x=$.id:$.kind==="video"&&(w=$.id)});var N=b(m.audioConstraints);N&&(x=N);var C=b(m.videoConstraints);C&&(w=C),g(y(x),y(w))})}},p.prototype.handleUserMedia=function(f,m){var g=this.props;if(f||!m){this.setState({hasUserMedia:!1}),g.onUserMediaError(f);return}this.stream=m;try{this.video&&(this.video.srcObject=m),this.setState({hasUserMedia:!0})}catch{this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(m)})}g.onUserMedia(m)},p.prototype.render=function(){var f=this,m=this,g=m.state,y=m.props,b=y.audio;y.forceScreenshotSourceSize;var v=y.disablePictureInPicture;y.onUserMedia,y.onUserMediaError,y.screenshotFormat,y.screenshotQuality,y.minScreenshotWidth,y.minScreenshotHeight,y.audioConstraints,y.videoConstraints,y.imageSmoothing;var x=y.mirrored,w=y.style,N=w===void 0?{}:w,C=y.children,$=l(y,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),S=x?c(c({},N),{transform:(N.transform||"")+" scaleX(-1)"}):N,T={getScreenshot:this.getScreenshot.bind(this)};return a.createElement(a.Fragment,null,a.createElement("video",c({autoPlay:!0,disablePictureInPicture:v,src:g.src,muted:!b,playsInline:!0,ref:function(E){f.video=E},style:S},$)),C&&C(T))},p.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},p})(a.Component);r.default=d}),react:(function(s,r){s.exports=t})}).default})})(lc)),lc.exports}var X5=K5();const Y5=yk(X5);function dY(){const n=bk(),[e,t]=Q.useState(!1),[s,r]=Q.useState(void 0),[o,a]=Q.useState(null),[i,c]=Q.useState(!1),[l,u]=Q.useState(null),[d,h]=Q.useState(!1),[p,f]=Q.useState(!1),m=Q.useRef(null),[g,y]=Q.useState(null),b=()=>c(!0),v=()=>c(!1),{id:x}=xk(),{register:w,handleSubmit:N,control:C,getValues:$,formState:{errors:S}}=vk({defaultValues:{fullName:"",email:"",phone:"",domicile:"",gender:"",profile_picture:"1",linkedin_link:""}}),T=()=>{try{const j={fullName:$("fullName"),email:$("email"),phone:$("phone"),domicile:$("domicile"),gender:$("gender"),profile_picture:$("profile_picture"),linkedin_link:$("linkedin_link"),idJobList:Number(x)};Lk(j),n("/dashboard/success/apply")}catch(j){console.error("Error submitting candidat:",j)}};Q.useEffect(()=>{const j=async te=>{const ne=await Mk(te);ne&&a(ne)},ee=Number(x);ee&&j(ee)},[x]);const E=Q.useMemo(()=>o?.fields.find(j=>j.key==="fullName")?.validation?.required,[o?.fields]),F=Q.useMemo(()=>o?.fields.find(j=>j.key==="photoProfile")?.validation?.required,[o?.fields]);console.log("inputPhotoProfile:",F);const O=Q.useMemo(()=>o?.fields.find(j=>j.key==="gender")?.validation?.required,[o?.fields]),L=Q.useMemo(()=>o?.fields.find(j=>j.key==="domicile")?.validation?.required,[o?.fields]),z=Q.useMemo(()=>o?.fields.find(j=>j.key==="email")?.validation?.required,[o?.fields]),M=Q.useMemo(()=>o?.fields.find(j=>j.key==="phoneNumber")?.validation?.required,[o?.fields]),K=Q.useMemo(()=>o?.fields.find(j=>j.key==="linkedinLink")?.validation?.required,[o?.fields]),U=Q.useMemo(()=>o?.fields.find(j=>j.key==="dateOfBirth")?.validation?.required,[o?.fields]);Q.useEffect(()=>{U5().then(j=>{y(j),console.log("Model loaded successfully.")}).catch(j=>{console.error("Error loading handTrack model:",j)})},[]);const H=async()=>{if(m.current&&g&&p){const j=await g.detect(m.current.video);if(j.length>0){const te=j[0].landmarks;(te?te.length:0)>=3?h(!0):h(!1)}else h(!1)}};Q.useEffect(()=>{if(g&&m.current){const j=setInterval(()=>{H()},100);return()=>clearInterval(j)}},[g,p]);const X=()=>{f(!0)},J=()=>{if(m.current){const j=m.current.getScreenshot();u(j),c(!1)}};return W.jsx(Bk,{children:W.jsx("div",{className:"min-h-screen bg-muted/30 flex items-center justify-center p-4",children:W.jsxs(Fk,{className:"w-full max-w-3xl shadow-lg",children:[W.jsx(_k,{className:"bg-background",children:W.jsxs("div",{className:"flex items-center justify-between",children:[W.jsxs("div",{className:"flex items-center gap-3",children:[W.jsx(Fr,{onClick:()=>n(-1),variant:"ghost",size:"icon",className:"h-8 w-8",children:W.jsx(Vk,{className:"h-5 w-5"})}),W.jsxs("h1",{className:"text-xl font-semibold text-foreground",children:["Apply ",o?.title??"Jobs"," at Rakamin"]})]}),W.jsxs("div",{className:"flex items-center gap-2 text-sm text-muted-foreground",children:[W.jsx("div",{className:"h-4 w-4 rounded bg-primary/20 flex items-center justify-center",children:W.jsx("span",{className:"text-xs font-medium",children:"i"})}),W.jsx("span",{children:"This field required to fill"})]})]})}),W.jsx(Pk,{className:"px-10",children:W.jsxs("form",{onSubmit:N(T),className:"space-y-6",children:[W.jsx("div",{className:"text-sm text-destructive mb-6",children:"* Required"}),W.jsxs("div",{className:"space-y-3",children:[W.jsx(jn,{className:"text-sm font-medium text-foreground",children:"Photo Profile"}),W.jsxs("div",{className:"flex flex-col items-start gap-4",children:[W.jsx("div",{className:"w-28 h-28 rounded-full bg-gradient from-cyan-200 to-cyan-300 flex items-center justify-center overflow-hidden",children:W.jsxs("svg",{width:"112",height:"112",viewBox:"0 0 112 112",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[W.jsx("circle",{cx:"56",cy:"56",r:"56",fill:"#A5E5E5"}),W.jsx("ellipse",{cx:"56",cy:"80",rx:"28",ry:"32",fill:"#1A9B9B"}),W.jsx("circle",{cx:"56",cy:"42",r:"16",fill:"#F4A261"}),W.jsx("path",{d:"M40 42C40 42 42 38 46 38C50 38 52 42 52 42",stroke:"#333",strokeWidth:"2",strokeLinecap:"round"}),W.jsx("path",{d:"M60 42C60 42 62 38 66 38C70 38 72 42 72 42",stroke:"#333",strokeWidth:"2",strokeLinecap:"round"}),W.jsx("path",{d:"M48 48C48 48 52 52 56 52C60 52 64 48 64 48",stroke:"#333",strokeWidth:"2",strokeLinecap:"round"}),W.jsx("path",{d:"M38 30C38 30 40 25 48 25C52 25 54 28 54 28",fill:"#6B4E3D"}),W.jsx("path",{d:"M56 28C56 28 58 25 62 25C70 25 74 30 74 30",fill:"#6B4E3D"})]})}),W.jsxs(Fr,{type:"button",variant:"outline",className:"gap-2",onClick:b,children:[W.jsx(Gk,{className:"h-4 w-4"}),"Take a Picture"]})]})]}),E!==null&&W.jsxs("div",{className:"space-y-2",children:[W.jsxs(jn,{htmlFor:"fullName",className:"text-sm font-medium text-foreground",children:["Full name",W.jsx("span",{className:"text-destructive",children:"*"})]}),W.jsx(Si,{id:"fullName",placeholder:"Enter your full name",...w("fullName"),className:"bg-background",required:E??!1})]}),U!==null&&W.jsxs("div",{className:"space-y-2",children:[W.jsxs(jn,{htmlFor:"date",className:"px-1",children:["Date of birth",W.jsx("span",{className:"text-destructive",children:"*"})]}),W.jsxs(Yy,{open:e,onOpenChange:t,children:[W.jsx(Qy,{asChild:!0,children:W.jsxs(Fr,{variant:"outline",id:"date",className:"w-full justify-between font-normal",children:[s?s.toLocaleDateString():"Select date",W.jsx(Ey,{})]})}),W.jsx(eb,{className:"w-auto overflow-hidden p-0 bg-white border rounded-lg",align:"start",children:W.jsx(_I,{mode:"single",selected:s,required:U??!1,captionLayout:"dropdown",onSelect:j=>{r(j),t(!1)},className:"bg-white"})})]})]}),O!==null&&W.jsxs("div",{className:"space-y-3",children:[W.jsxs(jn,{className:"text-sm font-medium text-foreground",children:["Pronoun (gender)",W.jsx("span",{className:"text-destructive",children:"*"})]}),W.jsx(sm,{name:"gender",control:C,render:({field:j})=>W.jsxs(kC,{...j,value:j.value,onValueChange:ee=>j.onChange(ee),required:O??!1,className:"flex gap-8",children:[W.jsxs("div",{className:"flex items-center space-x-2",children:[W.jsx(lm,{value:"female",id:"female"}),W.jsx(jn,{htmlFor:"female",className:"font-normal cursor-pointer",children:"She/her (Female)"})]}),W.jsxs("div",{className:"flex items-center space-x-2",children:[W.jsx(lm,{value:"male",id:"male"}),W.jsx(jn,{htmlFor:"male",className:"font-normal cursor-pointer",children:"He/him (Male)"})]})]})})]}),L!==null&&W.jsxs("div",{className:"space-y-2",children:[W.jsxs(jn,{htmlFor:"domicile",className:"text-sm font-medium text-foreground",children:["Domicile",W.jsx("span",{className:"text-destructive",children:"*"})]}),W.jsx(sm,{name:"domicile",control:C,rules:{required:"Domicile is required"},render:({field:j})=>W.jsxs(om,{required:L??!1,...j,value:j.value,onValueChange:ee=>j.onChange(ee),children:[W.jsx(am,{className:"bg-background w-full",children:W.jsx(im,{placeholder:"Choose your domicile"})}),W.jsxs(cm,{children:[W.jsx(ks,{value:"jakarta",children:"Jakarta"}),W.jsx(ks,{value:"bandung",children:"Bandung"}),W.jsx(ks,{value:"surabaya",children:"Surabaya"}),W.jsx(ks,{value:"yogyakarta",children:"Yogyakarta"}),W.jsx(ks,{value:"bali",children:"Bali"})]})]})}),S.domicile&&W.jsx("span",{className:"text-red-500 text-sm",children:S.domicile.message})]}),M!==null&&W.jsxs("div",{className:"space-y-2",children:[W.jsxs(jn,{htmlFor:"phoneNumber",className:"text-sm font-medium text-foreground",children:["Phone number",W.jsx("span",{className:"text-destructive",children:"*"})]}),W.jsxs("div",{className:"flex gap-2",children:[W.jsxs(om,{defaultValue:"+62",children:[W.jsx(am,{className:"w-24 bg-background",children:W.jsx(im,{})}),W.jsxs(cm,{children:[W.jsx(ks,{value:"+62",children:W.jsx("span",{className:"flex items-center gap-2",children:"🇮🇩 +62"})}),W.jsx(ks,{value:"+1",children:W.jsx("span",{className:"flex items-center gap-2",children:"🇺🇸 +1"})}),W.jsx(ks,{value:"+65",children:W.jsx("span",{className:"flex items-center gap-2",children:"🇸🇬 +65"})})]})]}),W.jsx(Si,{...w("phone"),id:"phoneNumber",placeholder:"81XXXXXXXXX",className:"flex-1 bg-background",required:M??!1})]})]}),z!==null&&W.jsxs("div",{className:"space-y-2",children:[W.jsxs(jn,{htmlFor:"email",className:"text-sm font-medium text-foreground",children:["Email",W.jsx("span",{className:"text-destructive",children:"*"})]}),W.jsx(Si,{...w("email"),id:"email",type:"email",placeholder:"Enter your email address",className:"bg-background",required:z??!1})]}),K!==null&&W.jsxs("div",{className:"space-y-2",children:[W.jsxs(jn,{htmlFor:"linkedinUrl",className:"text-sm font-medium text-foreground",children:["Link Linkedin",W.jsx("span",{className:"text-destructive",children:"*"})]}),W.jsx(Si,{...w("linkedin_link"),id:"linkedinUrl",placeholder:"https://linkedin.com/in/username",className:"bg-background",required:K??!1})]}),W.jsx(Fr,{type:"submit",className:"w-full bg-[#17A2B8] hover:bg-[#138496] text-white font-medium py-6 text-base",children:"Submit"})]})}),i&&W.jsx("div",{className:"fixed inset-0 z-50 flex items-center justify-center bg-[#1D1F20]/50",children:W.jsxs("div",{className:"bg-white rounded-lg shadow-lg max-w-3xl w-full p-4 relative",children:[W.jsx("button",{"aria-label":"Close",className:"absolute top-4 right-4 text-black text-xl font-bold",onClick:v,children:"×"}),W.jsx("h2",{className:"text-lg font-bold mb-1",children:"Raise Your Hand to Capture"}),W.jsx("p",{className:"mb-4 text-sm text-slate-500",children:"We'll take the photo once your hand pose is detected"}),W.jsx(Y5,{audio:!1,ref:m,screenshotFormat:"image/jpeg",width:"100%",videoConstraints:{facingMode:"user",width:1280,height:720},onCanPlay:X}),d&&W.jsx("div",{className:"mt-4 flex justify-center gap-6",children:W.jsx(Fr,{onClick:J,className:"bg-green-500 text-white",children:"Capture Photo"})}),l&&W.jsxs("div",{className:"mt-4",children:[W.jsx("h3",{className:"font-bold",children:"Preview:"}),W.jsx("img",{src:l,alt:"Captured",className:"w-full"})]}),W.jsx("p",{className:"my-4 text-sm text-gray-700",children:"To take a picture, follow the hand poses in the order shown below. The system will automatically capture the image once the final pose is detected."}),W.jsxs("div",{className:"flex justify-center gap-6",children:[W.jsx("img",{src:"https://cdn-icons-png.flaticon.com/512/194/194933.png",alt:"Pose 1",className:"h-14 w-14"}),W.jsx("span",{className:"inline-flex items-center text-gray-500 font-bold text-xl",children:">"}),W.jsx("img",{src:"https://cdn-icons-png.flaticon.com/512/194/194935.png",alt:"Pose 2",className:"h-14 w-14"}),W.jsx("span",{className:"inline-flex items-center text-gray-500 font-bold text-xl",children:">"}),W.jsx("img",{src:"https://cdn-icons-png.flaticon.com/512/194/194934.png",alt:"Pose 3",className:"h-14 w-14"})]})]})})]})})})}export{dY as default};
